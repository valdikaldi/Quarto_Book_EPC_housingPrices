{"title":"3. Literature review","markdown":{"yaml":{"tbl-cap-location":"top","fig-cap-location":"top","css":"../additional_styles/styles_chapter3_Literature.css","sidebar":{"logo":"../assets/cover.jpg"},"format":{"html":{"include-in-header":[{"text":"<link rel=\"icon\" type=\"image/png\" href=\"../assets/cover.jpg\">\n"}]}}},"headingText":"3. Literature review","containsRefs":false,"markdown":"\n\n\n<!-- % ------------------------------------------------------- Begin text -->\n\n<!-- % ===================== General introduction about the field of research -->\n\n::: paratext\nA rising body of research has emerged over the past decades investigating the effects of energy efficiency on the housing market. This section will contain a review of related studies that focus on the residential property markets. With that being said, It can be very challenging to compare these types of studies. Buildings come in a wide range of forms and a variety of factors determine their market value at any particular point in time, including size, age, design, location, and quality condition. Moreover, there are many factors in which the studies differ such as methodologies used to derive robust results, the data, and the energy efficiency scheme system used in the country of interest and the functional form of variables. The majority of studies that will be reviewed in this chapter are studies that investigate the residential housing markets in countries that follow the EPC scheme. The reason for this is to mitigate to some degree the major differences between the studies. Given the impracticality of an entire list of research, a simple overview of all studies taken into consideration in this chapter are provided in [Appendix A: Literature Review](appendix.qmd#a.-literature-review).\n\n@fig-literature_epceffect displays the measured price premium and price discount for energy labels from selected papers that find significant price premiums. Note that the letter “X” on the plots represents insignificant results for a given energy label, while the triangle represents categories not considered by the paper. The circle represents the reference label, also referred to as the hold-out category. As illustrated in @fig-literature_epceffect, there exists a notable disparity in price premiums among countries, spanning from 1.3% in Finland to as high as 55% in Italy.\n\n<!-- % ============= ADD IMAGE: papers results ============= -->\n\n```{r, fig.width=16, fig.height=16}\n#| label: fig-literature_epceffect\n#| fig-cap: Price premium across different labels for selected studies\n\nsuppressWarnings({\n  \n  library(ggplot2)\n  library(gridExtra)\n  library(grid)\n  \n  legend_size <- 1.1\n  plot_title_setSize <- 20\n  set_axisTitle_size <- 16\n  theX_size <- 15\n    \n  ###############################################################\n  # ------------------ DENMARK \n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(6.20, 0, 0, 5.10, 0, -5.40, -12.90, -24.30) # from : https://doi.org/10.1016/j.enpol.2016.02.029\n  values2 <- c(0, 1.02, 6.60, 3.5, 0, -3.60, -7.60, -12.10) # from : https://ens.dk/sites/ens.dk/files/Energibesparelser/bilag_-_do_homes_with_better_energy_efficiency_ratings_have_higher_house_prices_oekonometrisk_tilgang.pdf\n  \n  \n  labels <- c(\"A or B\",\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Denmark\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A or B\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df1 <- data.frame(labels = labels, values = values1, group = \"(Jensen, Hansen, and Kragh 2016)\")\n  # Create a data frame for values2\n  df2 <- data.frame(labels = labels, values = values2, group = \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\")\n  # Combine the data frames\n  df <- rbind(df1, df2)\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Jensen, Hansen, and Kragh 2016)\"\n  reference_value2 <- \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Jensen, Hansen, and Kragh 2016)\" = \"#B22222\",  # Light blue for Values1\n                    \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\" = \"#666666\")  # Dark blue for Values2\n  \n  \n  \n  ###### key var size\n  legend_key_size <-0.85\n  legend_text_size <- 15\n  triangle_size <- 10\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_denmark <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != \"D\" & group == reference_value1), aes(label = \"▲\", fill = '#B22222', fontface = \"bold\"), color = \"#B22222\", size= triangle_size, vjust = 0, hjust = 1.1) +\n    geom_text(data = subset(df, values == 0 & labels != \"D\" & group == reference_value2), aes(label = \"▲\", fill = '#666666', fontface = \"bold\"), color = \"#666666\", size= triangle_size, vjust = 0, hjust = -0.05) +\n    \n    labs(title = paste(\"Labell effect in:\", country), x = \"Labels\", y = \"Price Premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(\"(Jensen, Hansen, and Kragh 2016)\", \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\")) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-25, 10, by = 5), \n                       limits = c(-25, 10),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(0.75, 0.37),    # position of legend (x,y)\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legenr\n  \n  \n  ###############################################################\n  # ------------------ Norway \n  ###############################################################\n  \n  # Define the data\n  reference <- \"Not \\n lebelled\"\n  values1 <- c(7.43,1.81,3.52,3.56,2.84,2.45,1.24,0) # from: https://doi.org/10.5547/01956574.44.1.akha\n  values2 <- c(0,0,0,0,-2.40,2,5.1,0) # from : https://doi.org/10.1016/j.enpol.2017.09.029\n  \n  \n  labels <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",'Not \\n lebelled')\n  country <- \"Norway\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",'Not \\n lebelled'))\n  \n  # Create a data frame for values1\n  df1 <- data.frame(labels = labels, values = values1, group = \"(Khazal and Sønstebø 2023)\")\n  # Create a data frame for values2\n  df2 <- data.frame(labels = labels, values = values2, group = \"(Olaussen, Oust, and Solstad 2017)\")\n  # Combine the data frames\n  df <- rbind(df1, df2)\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Khazal and Sønstebø 2023)\"\n  reference_value2 <- \"(Olaussen, Oust, and Solstad 2017)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Khazal and Sønstebø 2023)\" = \"#A67C00\",  # Light blue for Values1\n                    \"(Olaussen, Oust, and Solstad 2017)\" = \"#36454F\")  # Dark blue for Values2\n  \n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Norway <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    \n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1, reference_value2)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-6, 10, by = 2), \n                       limits = c(-5, 10),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  \n  ###############################################################\n  # ------------------ Finland \n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(1.3, 0, 0, 0) # from: https://doi.org/10.1016/j.apenergy.2016.07.076 \n  labels <- c(\"A,B or C\", \"D\", \"E\", 'F or G')\n  country <- \"Finland\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A,B or C\", \"D\", \"E\", 'F or G'))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Fuerst, Oikarinen, and Harjunen 2016)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Fuerst, Oikarinen, and Harjunen 2016)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Fuerst, Oikarinen, and Harjunen 2016)\" = \"#08457E\")  # Light blue for Values1\n              \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Finland <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#08457E', fontface = \"bold\"), color = \"#08457E\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-4, 4, by = 1), \n                       limits = c(-4, 4),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  ###############################################################\n  # ------------------ Netherlands\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(10.2, 5.5, 2.10, 0, -0.5,-2.3,-4.80) # from: https://doi.org/10.1016/j.jeem.2010.11.006\n   \n  labels <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Netherlands\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Brounen and Kok 2011)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Brounen and Kok 2011)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Brounen and Kok 2011)\" = \"#36454F\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Netherlands <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    # geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#666666', fontface = \"bold\"), color = \"#666666\", size= theX_size, vjust = 0, hjust = -0.05) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-5, 11, by = 2.5), \n                       limits = c(-5, 11),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  ###############################################################\n  # ------------------ Wales, UK\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(12.8, 3.5, 0, -3.6, -6.50,0) # from: https://doi.org/10.1016/j.enpol.2016.01.024\n  \n  labels <- c(\"A or B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Wales, UK\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A or B\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Fuerst et al. 2016)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Fuerst et al. 2016)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Fuerst et al. 2016)\" = \"#32174D\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Wales <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#32174D', fontface = \"bold\"), color = \"#32174D\", size= theX_size, vjust = 0, hjust = -0.05) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-7, 14, by = 3.5), \n                       limits = c(-7, 14),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  ###############################################################\n  # ------------------ Ireland\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(9.3, 5.2, 1.7,0, 0, -10.6) # from:https://doi.org/10.1016/j.eneco.2013.07.020\n  \n  labels <- c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F or G\")\n  country <- \"Ireland\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F or G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Hyland, Lyons, and Lyons 2013)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Hyland, Lyons, and Lyons 2013)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Hyland, Lyons, and Lyons 2013)\" = \"#6E322B\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Ireland <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#6E322B', fontface = \"bold\"), color = \"#6E322B\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-12, 10, by = 3), \n                       limits = c(-12, 10),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  \n  ###############################################################\n  # ------------------ Spain\n  ###############################################################\n  \n  # Define the data\n  reference <- \"G\"\n  values1 <- c(7.7, 0, 0, 3.2, 0, 0, 0) # from: https://doi.org/10.3390/su11020372 \n  \n  labels <- c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Spain\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Marmolejo-Duarte and Chen 2019)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Marmolejo-Duarte and Chen 2019)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Marmolejo-Duarte and Chen 2019)\" = \"#4C573E\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Spain <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#4C573E', fontface = \"bold\"), color = \"#4C573E\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-3, 8.5, by = 1.5), \n                       limits = c(-3, 8.5),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  ###############################################################\n  # ------------------ England, UK\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(5,1.8,0,-0.7,-0.9,-6.8) # from: https://doi.org/10.1016/j.eneco.2014.12.012\n  \n  labels <- c(\"A or B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"England, UK\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A or B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Fuerst et al. 2015)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Fuerst et al. 2015)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Fuerst et al. 2015)\" = \"#656565\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_England <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#B22222', fontface = \"bold\"), color = \"#B22222\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-8, 6, by = 2), \n                       limits = c(-8, 6),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  ###############################################################\n  # ------------------ Padua, Italy\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(55,42,20,0,0,-14,-29) # from: https://doi.org/10.3390/buildings13020276\n  \n  labels <- c(\"A4\",\"A3 to A\",\"B or C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Padua, Italy\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A4\",\"A3 to A\",\"B or C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Copiello and Coletto 2023)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Copiello and Coletto 2023)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Copiello and Coletto 2023)\" = \"#C27C0E\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Italy <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#C27C0E', fontface = \"bold\"), color = \"#C27C0E\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-30, 60, by =15), \n                       limits = c(-30, 60),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  \n  ##################################################################################\n  # PLOT THE MATRIX !\n  ##################################################################################\n  \n  # Arrange plots horizontally in the first row\n  ################ NOTE !: With arrangeGrob we can store it to variable but grid.arrange() doesnt - it simply plots makeing duplicated plots for this code\n  plots_row <- arrangeGrob(plot_denmark,\n                            plot_Finland, # \n                            plot_Norway, # \n                            \n                            plot_Italy, # \n                            plot_Ireland, #\n                            plot_Spain, # \n                            \n                            plot_England, # \n                            plot_Wales, # \n                            plot_Netherlands, # \n                            nrow = 5,\n                            ncol = 2)\n  \n  \n  \n  ###### Create an empty plot for the second row\n  empty_plot <- ggplot()+\n    theme_void()+\n    theme(plot.background = element_rect(fill = \"white\", color = \"grey\", size = 0.8))\n  \n  # # Combine the plots and the empty plot vertically\n  combined_plots <- grid.arrange(empty_plot,plots_row, ncol = 1, heights = c(0.11,4))\n  # \n  # # Add texts to the empty plot below the main plots\n  # the X \n  grid.text(\"X \", x = 0.05, y = 1-0.013, just = \"center\", gp = gpar(fontsize = 18, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  grid.text(\": Insignificant result for given label\", x = 0.065, y = 1-0.013, just = \"left\", gp = gpar(fontsize = 16, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  \n  # the reference\n  grid.text(\"● \", x = 0.37, y = 1-0.011, just = \"center\", gp = gpar(fontsize = 25, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  grid.text(\": Reference label\", x = 0.39, y = 1-0.013, just = \"left\", gp = gpar(fontsize = 16, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  \n  # the triangle \n  grid.text(\"▲ \", x = 0.55, y = 1-0.012, just = \"center\", gp = gpar(fontsize = 18, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  grid.text(\": Label category not considered for given research paper\", x = 0.56, y = 1-0.013, just = \"left\", gp = gpar(fontsize = 16, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n\n})\n\n```\n\n::: text_footnote_fig_tables\nSee the following papers: **Denmark**- @jensen_market_2016 @naess-schmidt_homes_2015 ; **Finland** - @fuerst_green_2016 ; **Norway** - @khazal_energy_2023, @olaussen_energy_2017; **Padua, Italy** - @copiello_price_2023; **Ireland** - @hyland_value_2013; **Spain** - @marmolejo-duarte_uneven_2019; **England, UK** - @fuerst_does_2015; **Wales, UK** - @fuerst_energy_2016; **Netherlands** - @brounen_economics_2011\n:::\n\n<!-- % ===================== start with the first paper - Netherlands -->\n\nThe first study to investigate the connection between property prices and EPC labels was conducted by @brounen_economics_2011. They found that energy-efficient labels have a significant positive effect on property prices, and low-energy-efficient labels are sold at a discount. The authors used a wide range of control variables, such as insulation quality, central heating, and level of maintenance. They managed to gather 177.000 housing transactions in the Netherlands for the period January 2008 to August 2009, of which 31.993 residential dwellings had energy performance certificates. At the time of the study, energy performance certificates were not fully mandatory in the Netherlands, i.e., the buyer of a home could sign a waiver, releasing the seller from the obligation to certify the home. Consequently, the implementation rate was low [@brounen_economics_2011]. For example, during the sample period, the implementation rate, i.e. the fraction of sold homes that had energy labels, was at 25% in January 2008 but dropped down to 10% in the summer of 2009, mainly due to negative media coverage [@brounen_economics_2011]. To account for sample selection bias, the authors applied a two-step Heckman model to examine the factors that impact whether or not a home has an energy rating and the effect the rating has on the pricing of rated homes. The authors find that adopting an energy label tends to coincide with challenging selling conditions and that larger homes are less likely to have an energy rating. Moreover, their findings reveal price premiums of 10%, 5%, and 2% for homes rated A, B, and C, respectively, as well as price discounts of 0.5%, 2.5%, and 5% for homes rated E, F, and G, respectively, when compared to homes labelled as D with similar characteristics. This link between house price and EPC rating served as an early indicator that energy efficiency was being valued in housing transactions where EPC labels were utilised.\n\n<!-- % ===================== list other positive results -->\n\n<!-- % ===== Ireland -->\n\nSimilar to @brounen_economics_2011 paper, @hyland_value_2013 find that homes in Ireland with the label A are sold with a 9.3% price premium compared to D labels, and B label homes are sold at a 5.2% premium compared to D. The time frame of their analysis is between years 2008 and 2012. During that time, it was not mandatory to display the energy efficiency of the Irish EPC scheme. The authors note that not all homes have a certificate. To counter the potential selection bias in their analysis, they employ a two-step Heckman model. In addition to the findings stated earlier, they also found that energy efficiency has a positive effect on renting prices, but significantly less than sales prices.\n\n<!-- % ===== UK - England and whales -->\n\nFor the United Kingdom, @fuerst_does_2015 employ a hedonic model to investigate the relationship between transaction prices on a variety of property types and energy performance ratings for the period 1995 to 2012. Their sample consisted of approximately 333.095 transaction prices. They utilised both the transaction price and dwellings price appreciation between two sales. For the transaction price, their result show that, on average, people are willing to pay 5% more for properties with energy labels A or B and 1.8% for properties with label C, compared to label D. In relation to that, @fuerst_energy_2016 investigated the Wales market with a sample size of 192.000 observations consisting mainly of detached, semi-detached and terraced homes. In comparison to D-labelled properties, their findings suggest that people are willing to pay 12.8% higher for properties with either A or B labels and 3.5% for C-labelled properties.\n\n<!-- % ==== Finland -->\n\nFor Finland, @fuerst_green_2016 analysed Finland's housing market from 2009-2012, focusing solely on apartments. With a sample size of only 6.203 but with a large number of neighbourhood and property characteristics, they find statistically significant price premiums for high-rated labelled apartments. Using the label D as the reference label, from their standard model and by combining the labels A, B, and C into a single dummy their estimated price premium is 18.23% compared. In addition, they find that the label E is sold at a discount of -8.16% compared. However, with the introduction of additional controls such as postal code, property characteristics, geographical characteristics, and neighbourhood attributes, the effect diminishes substantially. It leads to an estimate of a 1.3% price premium for labels A, B, and C, and the label E becomes insignificant. This result emphasises the importance of accounting for geographical, neighbourhood, and property characteristics. In addition to measuring the effect of the labels on apartment prices, @fuerst_green_2016 also measure the effect of energy-efficient labels on liquidity on the market. Their result indicates that highly energy-efficient properties do not appear to influence the liquidity of properties.\n\n<!-- % ===================== list mixed or negative results -->\n\nSo far, all the studies mentioned agree on the positive relationship between energy efficiency and residential property prices. <!-- % ===== BIO intelligence --> A broader analysis conducted by the @european_commission_energy_2013 examined the impact of EPC labels on property value and rental rates in various cities in Europe. The study investigated the property markets in France, Belgium, Ireland, Austria, and the UK. In this report, the model specification, control variables, sample size, and the results vary significantly across countries. For each country, they treat the energy efficiency label as a continuous variable, thereby assuming a constant effect across all levels. They find statistically significant price premiums for energy-efficient properties in Austria, France, Belgium, and Ireland. However, in the UK no clear effect is found from energy efficiency on prices. It is stated in the report that this is potentially due to omitted variable bias, but one might also add that the sample size for the UK is remarkably small, consisting of only 236 observations. With that being said, the @european_commission_energy_2013 argues that the\n\n\n::: paratext_quote\n“Implementation and effectiveness vary from country to country and region to region depending on a range of factors, including the local political and legal context and the characteristics of the local property market. The existence of related incentives and subsidies at the national or regional level needs to be taken into account as well. In general, it can be said that low ambition in implementation leads to certification schemes of poor quality, i.e. not providing sufficient and accurate information or the necessary quality control.” [@european_commission_energy_2013, page 17]\n:::\n\nIn contrast to regional segments, the @european_commission_energy_2013 finds that energy efficiency has a greater effect on prices in bigger cities than in rural areas in Austria. In France, they find that the effect is stronger in Marseille than in Lille, and in Marseille, the effect from energy efficiency is mainly driven by apartments rather than houses, whereas in Lille, it's the opposite.\n\n<!-- % ====== Sweden -->\n\nIn Sweden, the study results have also been mixed. @hogberg_impact_2013, @cerin_energy_2014, @wahlstrom_doing_2016, @stenvall_does_2022 and @wilhelmsson_how_2023 all investigate energy efficiency on property prices in Sweden. These papers also share a common approach by quantifying energy efficiency by utilising energy consumption, with the exception of @wilhelmsson_how_2023 paper, which used both energy efficiency labels and energy consumption. @cerin_energy_2014 performs a hedonic model on a sample of 67.559 observations over the period 2009-2010. They Utilise standardised energy consumption as a proxy for energy efficiency and find that energy performance is associated with a price premium. The findings of @cerin_energy_2014 complement those of @hogberg_impact_2013.\n\n@hogberg_impact_2013 study specifically examines property prices in Stockholm. Using a hedonic model, their findings support the conclusion that energy performance level is associated with a price premium. @wilhelmsson_how_2023 also studies the housing market in Stockholm, however, in his analysis, he does things a bit differently. In contrast to @cerin_energy_2014, @wilhelmsson_how_2023 investigates the Stockholm housing market using both energy labels and energy consumption. He employs the traditional hedonic model as well as propensity score matching and spatial hedonic model. His findings confirm the price premium for energy-efficient properties, and his results also indicate that property buyers pay more attention to the expected energy consumption of a property than simply the energy label.\n\n@stenvall_does_2022 focus on the relationship between energy consumption and tenant-owned apartment prices. They find a positive price premium, however, it is not consistent across different market segments or model specifications. Finally, unlike the majority of the Swedish studies, @wahlstrom_doing_2016 finds that there is no price premium associated with energy consumption. @wahlstrom_doing_2016 studied single-family houses in Sweden during the period 2009-2010. He ran several hedonic regressions on a sample of 77.000 observations. Although he finds no price premium for energy consumption, his findings do suggest that buyers prioritise property components that improve energy efficiency. For instance, @wahlstrom_doing_2016 finds that properties that use district heating are sold at a premium between 8-9% compared to properties that only use electricity for heating and cooling. Moreover, its findings suggest that properties with oil-fired boilers are sold at a discount of 10-11%, and having a ground-sourced heat pump leads to a price premium of 18%.\n\n<!-- % ====== Norway -->\n\nBoth @olaussen_energy_2017 and @olaussen_energy_2019 investigate the effect of energy efficiency on transaction prices in Oslo and find little to no effect. @olaussen_energy_2017 argue that the differing results found in various studies regarding the price effect from energy efficiency in the real estate market may stem from differences in the methodological designs. They further argue that the positive effect found by many studies is due to the misspecification of the regression models and that these studies suffer from omitted variable bias. Therefore, the price premium found is capturing something else than the energy efficiency effects themselves. @olaussen_energy_2017 used a unique dataset with observations of properties sold before and after energy labels were introduced in Norway. They begin by reproducing the positive price premium effect from energy labels using a traditional hedonic model, and then they run a fixed effects model, leading to insignificant results. @olaussen_energy_2019 extend @olaussen_energy_2017 research by investigating the effects of both energy labels and energy consumption on transaction prices. Unlike the majority of papers, @olaussen_energy_2017 quantify the energy performance by calculating the present value, using Gordon and Shapiro’s growth model, of the maximum energy consumption per square meter across all energy labels. Their findings suggest that the energy performance of dwellings, in general, is of little importance to buyers.\n\nWith all this being said, a newer study made by @khazal_energy_2023 contradicts these findings for the Norwegian housing market. @khazal_energy_2023 analysed a sample of 750.000 transaction prices and 670.000 rental prices across the whole country. They find positive effects from energy efficiency for both rental and sales markets. Their estimated price effect is between 0.8-1% for a one-letter improvement on the EPC rating scale. Additionally, they supply evidence indicating that the assessment of energy efficiency value is affected by endogeneity arising from unobserved geographical factors. Moreover, their findings indicate that properties with lower energy efficiency are subject to greater geographical bias in the rental market, whereas this bias is amplified for energy-efficient properties in the sales market. Finally, they show that lower energy-efficient properties correlate with reduced bias originating from unobserved quality in the sales market.\n\n<!-- % ====== Italy -->\n\n\\% (Fregonara et al., 2017) = Energy performance certificates in the Turin real estate market % Barreca et al. (2021) EPC Labels and Building Features: Spatial Implications over Housing Prices % (Copiello \\\\& Coletto, 2023) The Price Premium in Green Buildings: A Spatial Autoregressive Model and a Multi-Criteria Optimization Approach\n\n@fregonara_energy_2017, @barreca_epc_2021 and @copiello_price_2023 investigated the effect of energy efficiency labels on property prices in Italy, where both @fregonara_energy_2017 and @barreca_epc_2021 focus on the city of Turin, but @copiello_price_2023 on the city Padua. Interestingly, their results do not reflect the same conclusion. @fregonara_energy_2017 focused on old properties in Turin and gathered a sample of only 879 observations for the period 2011-2014. He begins by running a traditional hedonic model, where the result does not support a price premium, yet it does support a price discount for labels E, F, and G. However, when more control variables and property characteristic variables are added, the effect vanishes, indicating that energy-efficient labels do not affect the price. Unlike the research by @fregonara_energy_2017, @barreca_epc_2021 put more emphasis on spatial analysis by employing both traditional hedonic price models but also spatial error models using listing price. @barreca_epc_2021 point out that the presence of spatial autocorrelation usually affects the real estate markets, and it is important to acknowledge it. Using a spatial error model and listing price on a sample size of 2,092 observations, they find that energy efficiency labels have an effect. According to their result from the spatial error model, property buyers are willing to pay a 6.2% higher price for energy labels A, B, and C compared to label D. Additionally, properties in labels E, F, and G are sold at a discount of 2.7% compared to D label. However, the impact varies in different sub-markets. Unlike these two papers, @copiello_price_2023 identify substantially larger price premiums and discounts for energy efficiency and inefficient labels. They employ a spatial autoregressive model on a sample size of only 321 observations, using listing price as the dependent variable. Based on their result, with D-labeled properties as the reference group, property buyers in Padua are willing to pay a 55% higher price for properties labelled A4, 42% for those labelled A3, A2, or A and 20% for those labelled B or C. In contrast, non-energy efficient properties labelled F are sold at a discount of 17%, while those labelled G are sold at a discount of 29%.\n\nUnlike the results from @brounen_economics_2011, which found significant price premiums for energy-efficient properties in the Netherlands, @murphy_influence_2014 found that EPC is a weak influence both pre and post-purchase of properties. Using an online questionnaire, @murphy_influence_2014 investigated the role of the EPC during the transaction process of buildings in the Netherlands. Only 10% of her observations stated that EPC influenced their decision-making when it came to buying their dwelling. Due to the weak influence, @murphy_influence_2014 argues that if consumers continue to evaluate the energy-saving potential of buildings subjectively rather than using more objective measures, like the EPC reports, then the opportunity to realise significant energy savings in existing buildings will be neglected.\n\n<!-- % ===================== speak a bit about the different approaches and segments income property times etc. -->\n\nThus far, we have primarily discussed findings on the direct relationship between energy efficiency labels and property prices across a somewhat aggregated setting. Other studies have delved deeper into the assessment of the effect in terms of different segments, e.g., market and social-economic segments, as these factors play an important role. For instance, in terms of income level, if we were to assume that the true effect of energy efficiency on property prices reflects a price premium, regardless of whether it is based on the label or the energy consumption, then one might wonder if the premium is, in fact, that similar across all income levels. For instance, a consumer with significant financial constraints might value energy-efficient attributes higher than those with little to no financial contains. With that being said, @cerin_energy_2014 argue that consumers who purchase lower-priced properties tend to place a higher value on factors related to energy efficiency, such as potential energy savings or lower energy bills. They find that 25% of their lowest transaction prices per square meter are significantly and negatively related to energy consumption. However, one might argue that if the market value of these attributes is high enough, then prices of energy-efficient properties might start to surpass the budget of consumers who have significant financial constraints. Therefore, energy-efficient properties might not be as highly valued by financially constrained consumers compared to less financially constrained consumers. @naess-schmidt_homes_2015 investigated the effect energy efficiency has on transaction prices in Denmark. Part of their analysis was to investigate if the price premium they found for energy-efficient properties varied across different disposable income segments. Using a random effect regression, they find that energy standards have the highest price premium for high-income buyers.\n\n<!-- % —- Other studies have focused more on the segments of city, urban and rural Germany -->\n\nThe importance of distinguishing between urban and rural areas becomes clear based on results from @taruttis_estimating_2022 and @hyland_value_2013. @hyland_value_2013 find that in urban areas, for each decline in the energy efficiency scale, there is a price discount of 1.2%. However, in rural areas, this discount is nearly twice as much, at 2.3%. This supports their hypothesis that energy efficiency has a greater impact on property prices in rural areas compared to urban areas, especially when selling conditions are challenging. This result is in line with @taruttis_estimating_2022 findings. @taruttis_estimating_2022 investigated the impact of energy efficiency on the German housing market, using listing prices of 422.242 observations for the period 2014-2018. They find that the impact of energy efficiency on property prices varies between urban and rural areas. With a reduction in energy consumption of 100 kWh/m2/year, the listed price of properties in big independent cities increases by 1.3%. However, in properties in sparsely populated areas, the energy efficiency is valued much higher, reaching 11.4% for a 100 kWh/m2/year reduction in energy consumption.\n\n<!-- % —- one study quantifies the EPC effect across climate zones -->\n\nIt is evident that energy consumption and temperature are closely related. @wilhelmsson_energy_2019 takes that into consideration when estimating the impact of energy-efficient labels on transaction prices in Sweden. Sweden spans two distinct climatic zones: the subarctic climate zone, where the average yearly temperature ranges from 7-10 degrees, and the hemiboreal climate zone, where temperatures hover around 0 degrees. His findings show that energy efficiency is valued higher for properties in areas with colder climates than for properties in warmer climates.\n\n<!-- % ====== Danish studies -->\n\nTo finalise this chapter, we move on to studies investigating the Danish housing market, i.e. the market of interest in this thesis. As stated earlier, @murphy_influence_2014 argues that if consumers do not value the objective measures given in the EPC reports, then there is a risk that energy savings or energy saving potential will be overlooked. In connection with this, @jensen_market_2016 argue that if the energy performance of buildings is not promoted in any way, then there will be limited acceptance or adoption on the market. They further point out that effective branding relies on two key elements. Firstly, the reports must maintain reliability and a trustworthy scheme, and secondly, ensure widespread awareness and understanding of energy performance ratings among both buyers and sellers of properties.\n\nThe study conducted by @jensen_market_2016 focuses on the impact before and after the display of energy-efficient ratings became mandatory. The study contains 117.483 transaction prices on detached single-family houses in Denmark, spanning the period 2007 to 2012. Their study is unique because EPC reports in Denmark have been mandatory since 1997. @jensen_market_2016 employ two hedonic regressions with time and place-fixed effects: one for the period before the mandatory display of EPC labels in advertisements and another after its implementation. They find that before the policy was implemented, there was a price premium for energy-efficient properties. However, with the implementation of the policy, the premium increased significantly, thus validating the importance of promoting energy efficiency.\n\n@naess-schmidt_homes_2015 take a deeper look into the Danish housing market and its relations with energy efficiency, making it particularly relevant to this study. By employing various modelling techniques, they examine both national trends and specific market segments. They utilise a sample of 354.780 observations, of which 136.386 observations are associated with an EPC report and 218.394 do not. Based on their final result, they find that properties with label A are sold at a price premium of 10.2%, B at 6.6%, and C at 3.5% compared to label D. For the non-energy efficient labels, they measure discounts of 3.6%, 7.6% and 12.1% for labels E, F and G respectfully. One of the reasons for this thesis is that only a handful of studies have examined the impact of energy-efficient renovations on property prices, as indicated in the EPC reports. @naess-schmidt_homes_2015 explored this using a random effects model and concluded that the options for renovation do not significantly impact the sales price. They highlight two potential explanations for this result: firstly, poor conditions may be more likely to undergo renovations. However, although renovation options may have a positive impact, this effect could be diminished by the lower initial value of such properties. Secondly, they point out that this might be due to a lack of quality data concerning energy renovation recommendations. With that being said, they did find that properties built between 1930 and 1960 are sold at a significantly higher price premium compared to houses built before 1930, potentially explaining the insignificance resulting from renovation options. \n\n@naess-schmidt_homes_2015 findings correspond with the results obtained in @christensen_energy_2014 research. @christensen_energy_2014 conducted a survey study, gathering 743 observations to examine the impact of EPC reports on energy retrofitting practices among Danish homeowners. Based on their results, homeowners regard the EPC reports as trustworthy and straightforward. They have limited impact when it comes to energy-efficient renovations. Their findings challenge the assumption that homeowners act as \"economically rational\" actors who consider payback time as the most important factor in relation to energy-efficiency improvements. They find that homeowners focus more on other financial and practical aspects, such as the actual size of the investment and finding reliable trades-persons. The authors conclude that the reports fail to encourage homeowners to undertake energy-efficient renovations.\n\n<!-- % ===================== conclude -->\n\nFigure @fig-literature_variables shows the dependent variable used, i.e., property prices, as well as variable of interest such as energy label or energy consumption, along with the types of control variables and property types utilised in the 25 research papers taken into consideration in this thesis. It is worth noting that some papers, such as the paper by the @european_commission_energy_2013 include multiple studies. Consequently, a single paper may sometimes contain more than one feature. From the figure, it is clear that each study differs significantly. Whether in terms of the specification of dependent variables or the variables accounted for, the diversity is high. This makes the papers not easily comparable to each other even though they all follow the same energy-efficient framework, which is also implemented differently across countries. Therefore, cross-country comparisons should be made with caution. With all that being said, we can conclude that the majority of the literature finds that energy-efficient homes carry a price premium and non-energy-efficient homes carry price discounts.\n\n\n\n```{r, fig.width=16, fig.height=16}\n#| label: fig-literature_variables\n#| fig-cap: variables used in the research papers\n\n\nlibrary(ggplot2)\nlibrary(gridExtra)\n# all data was collected from the papers referenced in this master thesis\n# and save in the excel file called:\n#---> Literature_EPC_papers_data_overview.xlsx\n\n# I manually set the data in - because its just easier \n\n\n\nlabel_size_yaxis = 14\nlabel_size_xaxis = 15\nlabel_size_inBar = 8\nplot_title_size = 18\nplot_axis_title_size = 12\n\n###############################################################\n# ------------------> Dependent variable (Price) \n###############################################################\n\n# Define the data\nvalues <- c(1, 3, 8, 4, 2, 7, 3, 1) \nlabels <- c('Transaction price',\n  'Listing price ',\n  'Ln(Transaction price)',\n  'Ln(listing price)',\n  'Transaction price \\n(sqr. meter)',\n  'Ln(Transaction price \\n (sqr. meter))',\n  'Ln(listing price \\n (sqr. meter))',\n  'Ln(stated buyers \\n price (sqr. meter))'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_dependent <- ggplot(df, aes(x = values, y = labels))+\n  geom_bar(stat = \"identity\", fill = \"#4B5320\", color=\"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 9, by = 1), \n                     limits = c(0, 9),  # Set the y-axis limits to include positive values up to 10\n                     expand = c(0, 0)) +  # Adjust the expansion factor\n  labs(title = \"Property price variable(s) used:\", x = \"Number of papers\", y = \"Category\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth  = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n        panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n        panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1),\n  )\n\n\n\n###############################################################\n# ------------------> Energy variables\n###############################################################\n\n# Define the data\nvalues <- c(24,10,3,2,1) \nlabels <- c(\n  'EPC labels',\n  'Energy consumption \\n(kwh)',\n  'Energy saving or \\n conversion potential \\n(kwh)',\n  'Energy price given \\n heating type per \\n month',\n  'Net present value \\n of energy cost'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_Energy <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#A67C00\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 24, by = 5), \n                     limits = c(0, 24),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Energy efficiency variable(s) used:\", x = \"Number of papers\", y = \"\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n###############################################################\n# ------------------> property Condition variables\n###############################################################\n\n# Define the data\nvalues <- c(\n  9,\n  9,\n  16,\n  9,\n  2,\n  2,\n  8,\n  6,\n  2,\n  3,\n  1\n) \n\nlabels <- c(\n  'renovation indicator',\n  'Quality indicator',\n  'year built-dummy \\n variables',\n  'year built-continous \\n variable',\n  'wall material',\n  'roof material',\n  'heating source \\n & system',\n  'ventilation indicator',\n  'type of windows',\n  'Newly built indicator',\n  'Maintenance cost'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_propertyCondition <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#708090\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 17, by = 4), \n                     limits = c(0, 17),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Property Condition variable(s) used:\", x = \"Number of papers\", y = \"\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n###############################################################\n# ------------------> Geographical variables\n###############################################################\n\n# Define the data\nvalues <- c(\n  8,\n  14,\n  2,\n  2,\n  2,\n  7,\n  3\n) \n\nlabels <- c(\n  'No Geographical \\n variables',\n  'Distance measures',\n  'Property View \\n indicator',\n  'Accessability \\n measure',\n  'Urban/rural indicator',\n  'Geographical \\n area dummies',\n  'coordinates'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_geovariables <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#4B3D33\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 15, by = 4), \n                     limits = c(0, 15),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Geographical variable(s) used:\", x = \"Number of papers\", y = \"Category\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n\n###############################################################\n# ------------------> Socioeconomic indicators\n###############################################################\n\n# Define the data\nvalues <- c(\n  6,\n  5,\n  3,\n  2,\n  4,\n  20\n) \n\nlabels <- c(\n  'Economic & \\n political Indicators',\n  'Demographic \\n indicators',\n  'Education Indicators',\n  'Housing & property \\n market indicators',\n  'Quality of \\n life indicators',\n  'No Socioeconomic \\n variables '\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_socialeconomic <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#943126\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 21, by = 4), \n                     limits = c(0, 21),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Socialeconomic variable(s) used:\", x = \"Number of papers\", y = \"Category\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n###############################################################\n# ------------------> Property Type\n###############################################################\n\n# Define the data\nvalues <- c(\n  22,    # Apartments / multifamily home\n  1,     # row house\n  26,    # Detached house / villa / Single family house / bungalow\n  4,     # duplex\n  10,    # semi-detached house\n  3,     # town house\n  8      # terraced\n) \n\nlabels <- c(\n  'Apartments',\n  'Row house',\n  'Detached house',\n  'Duplex',\n  'Semi-detached house',\n  'Townhouse',\n  'Terraced'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_propertyType <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#656565\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 28, by = 4), \n                     limits = c(0, 29),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Property types used:\", x = \"Number of papers\", y = \"\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n##################################################################################\n# PLOT THE MATRIX !\n##################################################################################\n\n# Arrange plots horizontally in the first row\nplots_row <- grid.arrange(variable_dependent,\n                          variable_Energy,\n                          variable_geovariables,\n                          variable_propertyCondition,\n                          variable_socialeconomic,\n                          variable_propertyType,\n                          nrow = 3,\n                          ncol = 2)\n```\n\n\n:::\n","srcMarkdownNoYaml":"\n\n# 3. Literature review\n\n<!-- % ------------------------------------------------------- Begin text -->\n\n<!-- % ===================== General introduction about the field of research -->\n\n::: paratext\nA rising body of research has emerged over the past decades investigating the effects of energy efficiency on the housing market. This section will contain a review of related studies that focus on the residential property markets. With that being said, It can be very challenging to compare these types of studies. Buildings come in a wide range of forms and a variety of factors determine their market value at any particular point in time, including size, age, design, location, and quality condition. Moreover, there are many factors in which the studies differ such as methodologies used to derive robust results, the data, and the energy efficiency scheme system used in the country of interest and the functional form of variables. The majority of studies that will be reviewed in this chapter are studies that investigate the residential housing markets in countries that follow the EPC scheme. The reason for this is to mitigate to some degree the major differences between the studies. Given the impracticality of an entire list of research, a simple overview of all studies taken into consideration in this chapter are provided in [Appendix A: Literature Review](appendix.qmd#a.-literature-review).\n\n@fig-literature_epceffect displays the measured price premium and price discount for energy labels from selected papers that find significant price premiums. Note that the letter “X” on the plots represents insignificant results for a given energy label, while the triangle represents categories not considered by the paper. The circle represents the reference label, also referred to as the hold-out category. As illustrated in @fig-literature_epceffect, there exists a notable disparity in price premiums among countries, spanning from 1.3% in Finland to as high as 55% in Italy.\n\n<!-- % ============= ADD IMAGE: papers results ============= -->\n\n```{r, fig.width=16, fig.height=16}\n#| label: fig-literature_epceffect\n#| fig-cap: Price premium across different labels for selected studies\n\nsuppressWarnings({\n  \n  library(ggplot2)\n  library(gridExtra)\n  library(grid)\n  \n  legend_size <- 1.1\n  plot_title_setSize <- 20\n  set_axisTitle_size <- 16\n  theX_size <- 15\n    \n  ###############################################################\n  # ------------------ DENMARK \n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(6.20, 0, 0, 5.10, 0, -5.40, -12.90, -24.30) # from : https://doi.org/10.1016/j.enpol.2016.02.029\n  values2 <- c(0, 1.02, 6.60, 3.5, 0, -3.60, -7.60, -12.10) # from : https://ens.dk/sites/ens.dk/files/Energibesparelser/bilag_-_do_homes_with_better_energy_efficiency_ratings_have_higher_house_prices_oekonometrisk_tilgang.pdf\n  \n  \n  labels <- c(\"A or B\",\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Denmark\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A or B\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df1 <- data.frame(labels = labels, values = values1, group = \"(Jensen, Hansen, and Kragh 2016)\")\n  # Create a data frame for values2\n  df2 <- data.frame(labels = labels, values = values2, group = \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\")\n  # Combine the data frames\n  df <- rbind(df1, df2)\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Jensen, Hansen, and Kragh 2016)\"\n  reference_value2 <- \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Jensen, Hansen, and Kragh 2016)\" = \"#B22222\",  # Light blue for Values1\n                    \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\" = \"#666666\")  # Dark blue for Values2\n  \n  \n  \n  ###### key var size\n  legend_key_size <-0.85\n  legend_text_size <- 15\n  triangle_size <- 10\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_denmark <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != \"D\" & group == reference_value1), aes(label = \"▲\", fill = '#B22222', fontface = \"bold\"), color = \"#B22222\", size= triangle_size, vjust = 0, hjust = 1.1) +\n    geom_text(data = subset(df, values == 0 & labels != \"D\" & group == reference_value2), aes(label = \"▲\", fill = '#666666', fontface = \"bold\"), color = \"#666666\", size= triangle_size, vjust = 0, hjust = -0.05) +\n    \n    labs(title = paste(\"Labell effect in:\", country), x = \"Labels\", y = \"Price Premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(\"(Jensen, Hansen, and Kragh 2016)\", \"(Næss-Schmidt, Heebøll, and Fredslund 2015)\")) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-25, 10, by = 5), \n                       limits = c(-25, 10),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(0.75, 0.37),    # position of legend (x,y)\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legenr\n  \n  \n  ###############################################################\n  # ------------------ Norway \n  ###############################################################\n  \n  # Define the data\n  reference <- \"Not \\n lebelled\"\n  values1 <- c(7.43,1.81,3.52,3.56,2.84,2.45,1.24,0) # from: https://doi.org/10.5547/01956574.44.1.akha\n  values2 <- c(0,0,0,0,-2.40,2,5.1,0) # from : https://doi.org/10.1016/j.enpol.2017.09.029\n  \n  \n  labels <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",'Not \\n lebelled')\n  country <- \"Norway\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\",'Not \\n lebelled'))\n  \n  # Create a data frame for values1\n  df1 <- data.frame(labels = labels, values = values1, group = \"(Khazal and Sønstebø 2023)\")\n  # Create a data frame for values2\n  df2 <- data.frame(labels = labels, values = values2, group = \"(Olaussen, Oust, and Solstad 2017)\")\n  # Combine the data frames\n  df <- rbind(df1, df2)\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Khazal and Sønstebø 2023)\"\n  reference_value2 <- \"(Olaussen, Oust, and Solstad 2017)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Khazal and Sønstebø 2023)\" = \"#A67C00\",  # Light blue for Values1\n                    \"(Olaussen, Oust, and Solstad 2017)\" = \"#36454F\")  # Dark blue for Values2\n  \n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Norway <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = \"X\", fill = '#36454F', fontface = \"bold\"), color = \"#36454F\", size= theX_size, vjust = 0, hjust = -0.05) +\n    \n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1, reference_value2)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-6, 10, by = 2), \n                       limits = c(-5, 10),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  \n  ###############################################################\n  # ------------------ Finland \n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(1.3, 0, 0, 0) # from: https://doi.org/10.1016/j.apenergy.2016.07.076 \n  labels <- c(\"A,B or C\", \"D\", \"E\", 'F or G')\n  country <- \"Finland\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A,B or C\", \"D\", \"E\", 'F or G'))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Fuerst, Oikarinen, and Harjunen 2016)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Fuerst, Oikarinen, and Harjunen 2016)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Fuerst, Oikarinen, and Harjunen 2016)\" = \"#08457E\")  # Light blue for Values1\n              \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Finland <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#08457E', fontface = \"bold\"), color = \"#08457E\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-4, 4, by = 1), \n                       limits = c(-4, 4),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  ###############################################################\n  # ------------------ Netherlands\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(10.2, 5.5, 2.10, 0, -0.5,-2.3,-4.80) # from: https://doi.org/10.1016/j.jeem.2010.11.006\n   \n  labels <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Netherlands\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Brounen and Kok 2011)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Brounen and Kok 2011)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Brounen and Kok 2011)\" = \"#36454F\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Netherlands <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    # geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#666666', fontface = \"bold\"), color = \"#666666\", size= theX_size, vjust = 0, hjust = -0.05) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-5, 11, by = 2.5), \n                       limits = c(-5, 11),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  ###############################################################\n  # ------------------ Wales, UK\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(12.8, 3.5, 0, -3.6, -6.50,0) # from: https://doi.org/10.1016/j.enpol.2016.01.024\n  \n  labels <- c(\"A or B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Wales, UK\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A or B\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Fuerst et al. 2016)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Fuerst et al. 2016)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Fuerst et al. 2016)\" = \"#32174D\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Wales <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#32174D', fontface = \"bold\"), color = \"#32174D\", size= theX_size, vjust = 0, hjust = -0.05) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-7, 14, by = 3.5), \n                       limits = c(-7, 14),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  ###############################################################\n  # ------------------ Ireland\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(9.3, 5.2, 1.7,0, 0, -10.6) # from:https://doi.org/10.1016/j.eneco.2013.07.020\n  \n  labels <- c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F or G\")\n  country <- \"Ireland\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F or G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Hyland, Lyons, and Lyons 2013)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Hyland, Lyons, and Lyons 2013)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Hyland, Lyons, and Lyons 2013)\" = \"#6E322B\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Ireland <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#6E322B', fontface = \"bold\"), color = \"#6E322B\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-12, 10, by = 3), \n                       limits = c(-12, 10),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  \n  ###############################################################\n  # ------------------ Spain\n  ###############################################################\n  \n  # Define the data\n  reference <- \"G\"\n  values1 <- c(7.7, 0, 0, 3.2, 0, 0, 0) # from: https://doi.org/10.3390/su11020372 \n  \n  labels <- c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Spain\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A\",\"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Marmolejo-Duarte and Chen 2019)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Marmolejo-Duarte and Chen 2019)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Marmolejo-Duarte and Chen 2019)\" = \"#4C573E\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Spain <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#4C573E', fontface = \"bold\"), color = \"#4C573E\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-3, 8.5, by = 1.5), \n                       limits = c(-3, 8.5),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize,face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  ###############################################################\n  # ------------------ England, UK\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(5,1.8,0,-0.7,-0.9,-6.8) # from: https://doi.org/10.1016/j.eneco.2014.12.012\n  \n  labels <- c(\"A or B\", \"C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"England, UK\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A or B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Fuerst et al. 2015)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Fuerst et al. 2015)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Fuerst et al. 2015)\" = \"#656565\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_England <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#B22222', fontface = \"bold\"), color = \"#B22222\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-8, 6, by = 2), \n                       limits = c(-8, 6),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  ###############################################################\n  # ------------------ Padua, Italy\n  ###############################################################\n  \n  # Define the data\n  reference <- \"D\"\n  values1 <- c(55,42,20,0,0,-14,-29) # from: https://doi.org/10.3390/buildings13020276\n  \n  labels <- c(\"A4\",\"A3 to A\",\"B or C\", \"D\", \"E\", \"F\", \"G\")\n  country <- \"Padua, Italy\"\n  \n  # Reorder labels factor levels to ensure \"A/B\" appears first\n  labels <- factor(labels, levels = c(\"A4\",\"A3 to A\",\"B or C\", \"D\", \"E\", \"F\", \"G\"))\n  \n  # Create a data frame for values1\n  df <- data.frame(labels = labels, values = values1, group = \"(Copiello and Coletto 2023)\")\n  \n  # Define colors based on numeric values\n  reference_value1 <- \"(Copiello and Coletto 2023)\"\n  \n  # Define colors based on group\n  group_colors <- c(\"(Copiello and Coletto 2023)\" = \"#C27C0E\")  # Light blue for Values1\n  \n  \n  ###### key var size\n  legend_key_size <-0.5\n  legend_text_size <- 15\n  triangle_size <- 13\n  reference_circle_size <- 13\n  x_label_size <- 16\n  y_label_size <- 18\n  \n  # Plot using ggplot2\n  plot_Italy <- ggplot(df, aes(x = labels, y = values, fill = group)) +\n    geom_bar(stat = \"identity\", color = \"darkgrey\", position = position_dodge(width = 0.9)) +\n    geom_hline(yintercept = 0, linetype = \"solid\", color = \"darkgrey\", size = 1) +\n    geom_vline(xintercept = -Inf, color = \"darkgrey\", size = 1.5) +\n    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = \"darkgrey\", linetype = \"solid\") + # Add vertical lines\n    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = \"●\", fill = \"square\"), color = \"#2F4F4F\", size = reference_circle_size, vjust = 0.4) +\n    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = \"X\", fill = '#C27C0E', fontface = \"bold\"), color = \"#C27C0E\", size= theX_size, vjust = 0, hjust = 0.4) +\n    labs(title = paste(\"Label effect in:\", country), x = \"Labels\", y = \"Price premium\") +\n    scale_fill_manual(values = group_colors, guide = \"legend\", labels = c(reference_value1)) + # Manually set fill colors and legend labels\n    scale_y_continuous(labels = scales::percent_format(scale = 1), \n                       breaks = seq(-30, 60, by =15), \n                       limits = c(-30, 60),  # Set the y-axis limits to include positive values up to 10\n                       expand = c(0, 0)) +  # Adjust the expansion factor\n    theme_minimal() +\n    theme(plot.title = element_text(size = plot_title_setSize, face = \"bold\"),\n          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = \"bold\"),\n          axis.text.y = element_text(size = y_label_size, face = \"bold\"),  \n          panel.grid.major.y = element_line(color = \"darkgrey\", size = 0.009, linetype = \"dashed\"),\n          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n          panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n          axis.title = element_text(size = set_axisTitle_size, face = \"bold\"),\n          axis.title.y = element_blank(),\n          legend.title = element_blank(),  # Remove legend title\n          legend.position = c(1, 1),    # Set legend position to top right corner\n          legend.justification = c(\"right\", \"top\"),  # Align legend to top right\n          legend.box.just = \"right\",  # Align legend box to right\n          legend.key.size = unit(legend_size, \"lines\"),  # Increase legend key size\n          legend.text = element_text(size = legend_text_size), #legend text size\n          legend.background = element_rect(color = \"black\", fill = \"white\", size = 0.5))  # Add frame around legend\n  \n  \n  \n  ##################################################################################\n  # PLOT THE MATRIX !\n  ##################################################################################\n  \n  # Arrange plots horizontally in the first row\n  ################ NOTE !: With arrangeGrob we can store it to variable but grid.arrange() doesnt - it simply plots makeing duplicated plots for this code\n  plots_row <- arrangeGrob(plot_denmark,\n                            plot_Finland, # \n                            plot_Norway, # \n                            \n                            plot_Italy, # \n                            plot_Ireland, #\n                            plot_Spain, # \n                            \n                            plot_England, # \n                            plot_Wales, # \n                            plot_Netherlands, # \n                            nrow = 5,\n                            ncol = 2)\n  \n  \n  \n  ###### Create an empty plot for the second row\n  empty_plot <- ggplot()+\n    theme_void()+\n    theme(plot.background = element_rect(fill = \"white\", color = \"grey\", size = 0.8))\n  \n  # # Combine the plots and the empty plot vertically\n  combined_plots <- grid.arrange(empty_plot,plots_row, ncol = 1, heights = c(0.11,4))\n  # \n  # # Add texts to the empty plot below the main plots\n  # the X \n  grid.text(\"X \", x = 0.05, y = 1-0.013, just = \"center\", gp = gpar(fontsize = 18, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  grid.text(\": Insignificant result for given label\", x = 0.065, y = 1-0.013, just = \"left\", gp = gpar(fontsize = 16, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  \n  # the reference\n  grid.text(\"● \", x = 0.37, y = 1-0.011, just = \"center\", gp = gpar(fontsize = 25, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  grid.text(\": Reference label\", x = 0.39, y = 1-0.013, just = \"left\", gp = gpar(fontsize = 16, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  \n  # the triangle \n  grid.text(\"▲ \", x = 0.55, y = 1-0.012, just = \"center\", gp = gpar(fontsize = 18, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n  grid.text(\": Label category not considered for given research paper\", x = 0.56, y = 1-0.013, just = \"left\", gp = gpar(fontsize = 16, fontface = \"bold\", col = \"black\"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))\n\n})\n\n```\n\n::: text_footnote_fig_tables\nSee the following papers: **Denmark**- @jensen_market_2016 @naess-schmidt_homes_2015 ; **Finland** - @fuerst_green_2016 ; **Norway** - @khazal_energy_2023, @olaussen_energy_2017; **Padua, Italy** - @copiello_price_2023; **Ireland** - @hyland_value_2013; **Spain** - @marmolejo-duarte_uneven_2019; **England, UK** - @fuerst_does_2015; **Wales, UK** - @fuerst_energy_2016; **Netherlands** - @brounen_economics_2011\n:::\n\n<!-- % ===================== start with the first paper - Netherlands -->\n\nThe first study to investigate the connection between property prices and EPC labels was conducted by @brounen_economics_2011. They found that energy-efficient labels have a significant positive effect on property prices, and low-energy-efficient labels are sold at a discount. The authors used a wide range of control variables, such as insulation quality, central heating, and level of maintenance. They managed to gather 177.000 housing transactions in the Netherlands for the period January 2008 to August 2009, of which 31.993 residential dwellings had energy performance certificates. At the time of the study, energy performance certificates were not fully mandatory in the Netherlands, i.e., the buyer of a home could sign a waiver, releasing the seller from the obligation to certify the home. Consequently, the implementation rate was low [@brounen_economics_2011]. For example, during the sample period, the implementation rate, i.e. the fraction of sold homes that had energy labels, was at 25% in January 2008 but dropped down to 10% in the summer of 2009, mainly due to negative media coverage [@brounen_economics_2011]. To account for sample selection bias, the authors applied a two-step Heckman model to examine the factors that impact whether or not a home has an energy rating and the effect the rating has on the pricing of rated homes. The authors find that adopting an energy label tends to coincide with challenging selling conditions and that larger homes are less likely to have an energy rating. Moreover, their findings reveal price premiums of 10%, 5%, and 2% for homes rated A, B, and C, respectively, as well as price discounts of 0.5%, 2.5%, and 5% for homes rated E, F, and G, respectively, when compared to homes labelled as D with similar characteristics. This link between house price and EPC rating served as an early indicator that energy efficiency was being valued in housing transactions where EPC labels were utilised.\n\n<!-- % ===================== list other positive results -->\n\n<!-- % ===== Ireland -->\n\nSimilar to @brounen_economics_2011 paper, @hyland_value_2013 find that homes in Ireland with the label A are sold with a 9.3% price premium compared to D labels, and B label homes are sold at a 5.2% premium compared to D. The time frame of their analysis is between years 2008 and 2012. During that time, it was not mandatory to display the energy efficiency of the Irish EPC scheme. The authors note that not all homes have a certificate. To counter the potential selection bias in their analysis, they employ a two-step Heckman model. In addition to the findings stated earlier, they also found that energy efficiency has a positive effect on renting prices, but significantly less than sales prices.\n\n<!-- % ===== UK - England and whales -->\n\nFor the United Kingdom, @fuerst_does_2015 employ a hedonic model to investigate the relationship between transaction prices on a variety of property types and energy performance ratings for the period 1995 to 2012. Their sample consisted of approximately 333.095 transaction prices. They utilised both the transaction price and dwellings price appreciation between two sales. For the transaction price, their result show that, on average, people are willing to pay 5% more for properties with energy labels A or B and 1.8% for properties with label C, compared to label D. In relation to that, @fuerst_energy_2016 investigated the Wales market with a sample size of 192.000 observations consisting mainly of detached, semi-detached and terraced homes. In comparison to D-labelled properties, their findings suggest that people are willing to pay 12.8% higher for properties with either A or B labels and 3.5% for C-labelled properties.\n\n<!-- % ==== Finland -->\n\nFor Finland, @fuerst_green_2016 analysed Finland's housing market from 2009-2012, focusing solely on apartments. With a sample size of only 6.203 but with a large number of neighbourhood and property characteristics, they find statistically significant price premiums for high-rated labelled apartments. Using the label D as the reference label, from their standard model and by combining the labels A, B, and C into a single dummy their estimated price premium is 18.23% compared. In addition, they find that the label E is sold at a discount of -8.16% compared. However, with the introduction of additional controls such as postal code, property characteristics, geographical characteristics, and neighbourhood attributes, the effect diminishes substantially. It leads to an estimate of a 1.3% price premium for labels A, B, and C, and the label E becomes insignificant. This result emphasises the importance of accounting for geographical, neighbourhood, and property characteristics. In addition to measuring the effect of the labels on apartment prices, @fuerst_green_2016 also measure the effect of energy-efficient labels on liquidity on the market. Their result indicates that highly energy-efficient properties do not appear to influence the liquidity of properties.\n\n<!-- % ===================== list mixed or negative results -->\n\nSo far, all the studies mentioned agree on the positive relationship between energy efficiency and residential property prices. <!-- % ===== BIO intelligence --> A broader analysis conducted by the @european_commission_energy_2013 examined the impact of EPC labels on property value and rental rates in various cities in Europe. The study investigated the property markets in France, Belgium, Ireland, Austria, and the UK. In this report, the model specification, control variables, sample size, and the results vary significantly across countries. For each country, they treat the energy efficiency label as a continuous variable, thereby assuming a constant effect across all levels. They find statistically significant price premiums for energy-efficient properties in Austria, France, Belgium, and Ireland. However, in the UK no clear effect is found from energy efficiency on prices. It is stated in the report that this is potentially due to omitted variable bias, but one might also add that the sample size for the UK is remarkably small, consisting of only 236 observations. With that being said, the @european_commission_energy_2013 argues that the\n\n\n::: paratext_quote\n“Implementation and effectiveness vary from country to country and region to region depending on a range of factors, including the local political and legal context and the characteristics of the local property market. The existence of related incentives and subsidies at the national or regional level needs to be taken into account as well. In general, it can be said that low ambition in implementation leads to certification schemes of poor quality, i.e. not providing sufficient and accurate information or the necessary quality control.” [@european_commission_energy_2013, page 17]\n:::\n\nIn contrast to regional segments, the @european_commission_energy_2013 finds that energy efficiency has a greater effect on prices in bigger cities than in rural areas in Austria. In France, they find that the effect is stronger in Marseille than in Lille, and in Marseille, the effect from energy efficiency is mainly driven by apartments rather than houses, whereas in Lille, it's the opposite.\n\n<!-- % ====== Sweden -->\n\nIn Sweden, the study results have also been mixed. @hogberg_impact_2013, @cerin_energy_2014, @wahlstrom_doing_2016, @stenvall_does_2022 and @wilhelmsson_how_2023 all investigate energy efficiency on property prices in Sweden. These papers also share a common approach by quantifying energy efficiency by utilising energy consumption, with the exception of @wilhelmsson_how_2023 paper, which used both energy efficiency labels and energy consumption. @cerin_energy_2014 performs a hedonic model on a sample of 67.559 observations over the period 2009-2010. They Utilise standardised energy consumption as a proxy for energy efficiency and find that energy performance is associated with a price premium. The findings of @cerin_energy_2014 complement those of @hogberg_impact_2013.\n\n@hogberg_impact_2013 study specifically examines property prices in Stockholm. Using a hedonic model, their findings support the conclusion that energy performance level is associated with a price premium. @wilhelmsson_how_2023 also studies the housing market in Stockholm, however, in his analysis, he does things a bit differently. In contrast to @cerin_energy_2014, @wilhelmsson_how_2023 investigates the Stockholm housing market using both energy labels and energy consumption. He employs the traditional hedonic model as well as propensity score matching and spatial hedonic model. His findings confirm the price premium for energy-efficient properties, and his results also indicate that property buyers pay more attention to the expected energy consumption of a property than simply the energy label.\n\n@stenvall_does_2022 focus on the relationship between energy consumption and tenant-owned apartment prices. They find a positive price premium, however, it is not consistent across different market segments or model specifications. Finally, unlike the majority of the Swedish studies, @wahlstrom_doing_2016 finds that there is no price premium associated with energy consumption. @wahlstrom_doing_2016 studied single-family houses in Sweden during the period 2009-2010. He ran several hedonic regressions on a sample of 77.000 observations. Although he finds no price premium for energy consumption, his findings do suggest that buyers prioritise property components that improve energy efficiency. For instance, @wahlstrom_doing_2016 finds that properties that use district heating are sold at a premium between 8-9% compared to properties that only use electricity for heating and cooling. Moreover, its findings suggest that properties with oil-fired boilers are sold at a discount of 10-11%, and having a ground-sourced heat pump leads to a price premium of 18%.\n\n<!-- % ====== Norway -->\n\nBoth @olaussen_energy_2017 and @olaussen_energy_2019 investigate the effect of energy efficiency on transaction prices in Oslo and find little to no effect. @olaussen_energy_2017 argue that the differing results found in various studies regarding the price effect from energy efficiency in the real estate market may stem from differences in the methodological designs. They further argue that the positive effect found by many studies is due to the misspecification of the regression models and that these studies suffer from omitted variable bias. Therefore, the price premium found is capturing something else than the energy efficiency effects themselves. @olaussen_energy_2017 used a unique dataset with observations of properties sold before and after energy labels were introduced in Norway. They begin by reproducing the positive price premium effect from energy labels using a traditional hedonic model, and then they run a fixed effects model, leading to insignificant results. @olaussen_energy_2019 extend @olaussen_energy_2017 research by investigating the effects of both energy labels and energy consumption on transaction prices. Unlike the majority of papers, @olaussen_energy_2017 quantify the energy performance by calculating the present value, using Gordon and Shapiro’s growth model, of the maximum energy consumption per square meter across all energy labels. Their findings suggest that the energy performance of dwellings, in general, is of little importance to buyers.\n\nWith all this being said, a newer study made by @khazal_energy_2023 contradicts these findings for the Norwegian housing market. @khazal_energy_2023 analysed a sample of 750.000 transaction prices and 670.000 rental prices across the whole country. They find positive effects from energy efficiency for both rental and sales markets. Their estimated price effect is between 0.8-1% for a one-letter improvement on the EPC rating scale. Additionally, they supply evidence indicating that the assessment of energy efficiency value is affected by endogeneity arising from unobserved geographical factors. Moreover, their findings indicate that properties with lower energy efficiency are subject to greater geographical bias in the rental market, whereas this bias is amplified for energy-efficient properties in the sales market. Finally, they show that lower energy-efficient properties correlate with reduced bias originating from unobserved quality in the sales market.\n\n<!-- % ====== Italy -->\n\n\\% (Fregonara et al., 2017) = Energy performance certificates in the Turin real estate market % Barreca et al. (2021) EPC Labels and Building Features: Spatial Implications over Housing Prices % (Copiello \\\\& Coletto, 2023) The Price Premium in Green Buildings: A Spatial Autoregressive Model and a Multi-Criteria Optimization Approach\n\n@fregonara_energy_2017, @barreca_epc_2021 and @copiello_price_2023 investigated the effect of energy efficiency labels on property prices in Italy, where both @fregonara_energy_2017 and @barreca_epc_2021 focus on the city of Turin, but @copiello_price_2023 on the city Padua. Interestingly, their results do not reflect the same conclusion. @fregonara_energy_2017 focused on old properties in Turin and gathered a sample of only 879 observations for the period 2011-2014. He begins by running a traditional hedonic model, where the result does not support a price premium, yet it does support a price discount for labels E, F, and G. However, when more control variables and property characteristic variables are added, the effect vanishes, indicating that energy-efficient labels do not affect the price. Unlike the research by @fregonara_energy_2017, @barreca_epc_2021 put more emphasis on spatial analysis by employing both traditional hedonic price models but also spatial error models using listing price. @barreca_epc_2021 point out that the presence of spatial autocorrelation usually affects the real estate markets, and it is important to acknowledge it. Using a spatial error model and listing price on a sample size of 2,092 observations, they find that energy efficiency labels have an effect. According to their result from the spatial error model, property buyers are willing to pay a 6.2% higher price for energy labels A, B, and C compared to label D. Additionally, properties in labels E, F, and G are sold at a discount of 2.7% compared to D label. However, the impact varies in different sub-markets. Unlike these two papers, @copiello_price_2023 identify substantially larger price premiums and discounts for energy efficiency and inefficient labels. They employ a spatial autoregressive model on a sample size of only 321 observations, using listing price as the dependent variable. Based on their result, with D-labeled properties as the reference group, property buyers in Padua are willing to pay a 55% higher price for properties labelled A4, 42% for those labelled A3, A2, or A and 20% for those labelled B or C. In contrast, non-energy efficient properties labelled F are sold at a discount of 17%, while those labelled G are sold at a discount of 29%.\n\nUnlike the results from @brounen_economics_2011, which found significant price premiums for energy-efficient properties in the Netherlands, @murphy_influence_2014 found that EPC is a weak influence both pre and post-purchase of properties. Using an online questionnaire, @murphy_influence_2014 investigated the role of the EPC during the transaction process of buildings in the Netherlands. Only 10% of her observations stated that EPC influenced their decision-making when it came to buying their dwelling. Due to the weak influence, @murphy_influence_2014 argues that if consumers continue to evaluate the energy-saving potential of buildings subjectively rather than using more objective measures, like the EPC reports, then the opportunity to realise significant energy savings in existing buildings will be neglected.\n\n<!-- % ===================== speak a bit about the different approaches and segments income property times etc. -->\n\nThus far, we have primarily discussed findings on the direct relationship between energy efficiency labels and property prices across a somewhat aggregated setting. Other studies have delved deeper into the assessment of the effect in terms of different segments, e.g., market and social-economic segments, as these factors play an important role. For instance, in terms of income level, if we were to assume that the true effect of energy efficiency on property prices reflects a price premium, regardless of whether it is based on the label or the energy consumption, then one might wonder if the premium is, in fact, that similar across all income levels. For instance, a consumer with significant financial constraints might value energy-efficient attributes higher than those with little to no financial contains. With that being said, @cerin_energy_2014 argue that consumers who purchase lower-priced properties tend to place a higher value on factors related to energy efficiency, such as potential energy savings or lower energy bills. They find that 25% of their lowest transaction prices per square meter are significantly and negatively related to energy consumption. However, one might argue that if the market value of these attributes is high enough, then prices of energy-efficient properties might start to surpass the budget of consumers who have significant financial constraints. Therefore, energy-efficient properties might not be as highly valued by financially constrained consumers compared to less financially constrained consumers. @naess-schmidt_homes_2015 investigated the effect energy efficiency has on transaction prices in Denmark. Part of their analysis was to investigate if the price premium they found for energy-efficient properties varied across different disposable income segments. Using a random effect regression, they find that energy standards have the highest price premium for high-income buyers.\n\n<!-- % —- Other studies have focused more on the segments of city, urban and rural Germany -->\n\nThe importance of distinguishing between urban and rural areas becomes clear based on results from @taruttis_estimating_2022 and @hyland_value_2013. @hyland_value_2013 find that in urban areas, for each decline in the energy efficiency scale, there is a price discount of 1.2%. However, in rural areas, this discount is nearly twice as much, at 2.3%. This supports their hypothesis that energy efficiency has a greater impact on property prices in rural areas compared to urban areas, especially when selling conditions are challenging. This result is in line with @taruttis_estimating_2022 findings. @taruttis_estimating_2022 investigated the impact of energy efficiency on the German housing market, using listing prices of 422.242 observations for the period 2014-2018. They find that the impact of energy efficiency on property prices varies between urban and rural areas. With a reduction in energy consumption of 100 kWh/m2/year, the listed price of properties in big independent cities increases by 1.3%. However, in properties in sparsely populated areas, the energy efficiency is valued much higher, reaching 11.4% for a 100 kWh/m2/year reduction in energy consumption.\n\n<!-- % —- one study quantifies the EPC effect across climate zones -->\n\nIt is evident that energy consumption and temperature are closely related. @wilhelmsson_energy_2019 takes that into consideration when estimating the impact of energy-efficient labels on transaction prices in Sweden. Sweden spans two distinct climatic zones: the subarctic climate zone, where the average yearly temperature ranges from 7-10 degrees, and the hemiboreal climate zone, where temperatures hover around 0 degrees. His findings show that energy efficiency is valued higher for properties in areas with colder climates than for properties in warmer climates.\n\n<!-- % ====== Danish studies -->\n\nTo finalise this chapter, we move on to studies investigating the Danish housing market, i.e. the market of interest in this thesis. As stated earlier, @murphy_influence_2014 argues that if consumers do not value the objective measures given in the EPC reports, then there is a risk that energy savings or energy saving potential will be overlooked. In connection with this, @jensen_market_2016 argue that if the energy performance of buildings is not promoted in any way, then there will be limited acceptance or adoption on the market. They further point out that effective branding relies on two key elements. Firstly, the reports must maintain reliability and a trustworthy scheme, and secondly, ensure widespread awareness and understanding of energy performance ratings among both buyers and sellers of properties.\n\nThe study conducted by @jensen_market_2016 focuses on the impact before and after the display of energy-efficient ratings became mandatory. The study contains 117.483 transaction prices on detached single-family houses in Denmark, spanning the period 2007 to 2012. Their study is unique because EPC reports in Denmark have been mandatory since 1997. @jensen_market_2016 employ two hedonic regressions with time and place-fixed effects: one for the period before the mandatory display of EPC labels in advertisements and another after its implementation. They find that before the policy was implemented, there was a price premium for energy-efficient properties. However, with the implementation of the policy, the premium increased significantly, thus validating the importance of promoting energy efficiency.\n\n@naess-schmidt_homes_2015 take a deeper look into the Danish housing market and its relations with energy efficiency, making it particularly relevant to this study. By employing various modelling techniques, they examine both national trends and specific market segments. They utilise a sample of 354.780 observations, of which 136.386 observations are associated with an EPC report and 218.394 do not. Based on their final result, they find that properties with label A are sold at a price premium of 10.2%, B at 6.6%, and C at 3.5% compared to label D. For the non-energy efficient labels, they measure discounts of 3.6%, 7.6% and 12.1% for labels E, F and G respectfully. One of the reasons for this thesis is that only a handful of studies have examined the impact of energy-efficient renovations on property prices, as indicated in the EPC reports. @naess-schmidt_homes_2015 explored this using a random effects model and concluded that the options for renovation do not significantly impact the sales price. They highlight two potential explanations for this result: firstly, poor conditions may be more likely to undergo renovations. However, although renovation options may have a positive impact, this effect could be diminished by the lower initial value of such properties. Secondly, they point out that this might be due to a lack of quality data concerning energy renovation recommendations. With that being said, they did find that properties built between 1930 and 1960 are sold at a significantly higher price premium compared to houses built before 1930, potentially explaining the insignificance resulting from renovation options. \n\n@naess-schmidt_homes_2015 findings correspond with the results obtained in @christensen_energy_2014 research. @christensen_energy_2014 conducted a survey study, gathering 743 observations to examine the impact of EPC reports on energy retrofitting practices among Danish homeowners. Based on their results, homeowners regard the EPC reports as trustworthy and straightforward. They have limited impact when it comes to energy-efficient renovations. Their findings challenge the assumption that homeowners act as \"economically rational\" actors who consider payback time as the most important factor in relation to energy-efficiency improvements. They find that homeowners focus more on other financial and practical aspects, such as the actual size of the investment and finding reliable trades-persons. The authors conclude that the reports fail to encourage homeowners to undertake energy-efficient renovations.\n\n<!-- % ===================== conclude -->\n\nFigure @fig-literature_variables shows the dependent variable used, i.e., property prices, as well as variable of interest such as energy label or energy consumption, along with the types of control variables and property types utilised in the 25 research papers taken into consideration in this thesis. It is worth noting that some papers, such as the paper by the @european_commission_energy_2013 include multiple studies. Consequently, a single paper may sometimes contain more than one feature. From the figure, it is clear that each study differs significantly. Whether in terms of the specification of dependent variables or the variables accounted for, the diversity is high. This makes the papers not easily comparable to each other even though they all follow the same energy-efficient framework, which is also implemented differently across countries. Therefore, cross-country comparisons should be made with caution. With all that being said, we can conclude that the majority of the literature finds that energy-efficient homes carry a price premium and non-energy-efficient homes carry price discounts.\n\n\n\n```{r, fig.width=16, fig.height=16}\n#| label: fig-literature_variables\n#| fig-cap: variables used in the research papers\n\n\nlibrary(ggplot2)\nlibrary(gridExtra)\n# all data was collected from the papers referenced in this master thesis\n# and save in the excel file called:\n#---> Literature_EPC_papers_data_overview.xlsx\n\n# I manually set the data in - because its just easier \n\n\n\nlabel_size_yaxis = 14\nlabel_size_xaxis = 15\nlabel_size_inBar = 8\nplot_title_size = 18\nplot_axis_title_size = 12\n\n###############################################################\n# ------------------> Dependent variable (Price) \n###############################################################\n\n# Define the data\nvalues <- c(1, 3, 8, 4, 2, 7, 3, 1) \nlabels <- c('Transaction price',\n  'Listing price ',\n  'Ln(Transaction price)',\n  'Ln(listing price)',\n  'Transaction price \\n(sqr. meter)',\n  'Ln(Transaction price \\n (sqr. meter))',\n  'Ln(listing price \\n (sqr. meter))',\n  'Ln(stated buyers \\n price (sqr. meter))'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_dependent <- ggplot(df, aes(x = values, y = labels))+\n  geom_bar(stat = \"identity\", fill = \"#4B5320\", color=\"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 9, by = 1), \n                     limits = c(0, 9),  # Set the y-axis limits to include positive values up to 10\n                     expand = c(0, 0)) +  # Adjust the expansion factor\n  labs(title = \"Property price variable(s) used:\", x = \"Number of papers\", y = \"Category\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth  = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines\n        panel.grid.major.x = element_blank(), # Remove major vertical grid lines\n        panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1),\n  )\n\n\n\n###############################################################\n# ------------------> Energy variables\n###############################################################\n\n# Define the data\nvalues <- c(24,10,3,2,1) \nlabels <- c(\n  'EPC labels',\n  'Energy consumption \\n(kwh)',\n  'Energy saving or \\n conversion potential \\n(kwh)',\n  'Energy price given \\n heating type per \\n month',\n  'Net present value \\n of energy cost'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_Energy <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#A67C00\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 24, by = 5), \n                     limits = c(0, 24),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Energy efficiency variable(s) used:\", x = \"Number of papers\", y = \"\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n###############################################################\n# ------------------> property Condition variables\n###############################################################\n\n# Define the data\nvalues <- c(\n  9,\n  9,\n  16,\n  9,\n  2,\n  2,\n  8,\n  6,\n  2,\n  3,\n  1\n) \n\nlabels <- c(\n  'renovation indicator',\n  'Quality indicator',\n  'year built-dummy \\n variables',\n  'year built-continous \\n variable',\n  'wall material',\n  'roof material',\n  'heating source \\n & system',\n  'ventilation indicator',\n  'type of windows',\n  'Newly built indicator',\n  'Maintenance cost'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_propertyCondition <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#708090\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 17, by = 4), \n                     limits = c(0, 17),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Property Condition variable(s) used:\", x = \"Number of papers\", y = \"\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n###############################################################\n# ------------------> Geographical variables\n###############################################################\n\n# Define the data\nvalues <- c(\n  8,\n  14,\n  2,\n  2,\n  2,\n  7,\n  3\n) \n\nlabels <- c(\n  'No Geographical \\n variables',\n  'Distance measures',\n  'Property View \\n indicator',\n  'Accessability \\n measure',\n  'Urban/rural indicator',\n  'Geographical \\n area dummies',\n  'coordinates'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_geovariables <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#4B3D33\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 15, by = 4), \n                     limits = c(0, 15),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Geographical variable(s) used:\", x = \"Number of papers\", y = \"Category\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n\n###############################################################\n# ------------------> Socioeconomic indicators\n###############################################################\n\n# Define the data\nvalues <- c(\n  6,\n  5,\n  3,\n  2,\n  4,\n  20\n) \n\nlabels <- c(\n  'Economic & \\n political Indicators',\n  'Demographic \\n indicators',\n  'Education Indicators',\n  'Housing & property \\n market indicators',\n  'Quality of \\n life indicators',\n  'No Socioeconomic \\n variables '\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_socialeconomic <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#943126\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 21, by = 4), \n                     limits = c(0, 21),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Socialeconomic variable(s) used:\", x = \"Number of papers\", y = \"Category\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n###############################################################\n# ------------------> Property Type\n###############################################################\n\n# Define the data\nvalues <- c(\n  22,    # Apartments / multifamily home\n  1,     # row house\n  26,    # Detached house / villa / Single family house / bungalow\n  4,     # duplex\n  10,    # semi-detached house\n  3,     # town house\n  8      # terraced\n) \n\nlabels <- c(\n  'Apartments',\n  'Row house',\n  'Detached house',\n  'Duplex',\n  'Semi-detached house',\n  'Townhouse',\n  'Terraced'\n)\n\n# Create a data frame for values1\ndf <- data.frame(labels = labels, values = values)\n\n# sort by frequency in ascenting order\ndf <- df[order(df$values), ]\n# Reorder the levels of the 'labels' factor based on the sorted dataframe\ndf$labels <- factor(df$labels, levels = df$labels)\n\nvariable_propertyType <- ggplot(df, aes(x = values, y = labels)) +\n  geom_bar(stat = \"identity\", fill = \"#656565\", color = \"black\", position = position_dodge(width = 0.9)) +\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1.5) +  # Add vertical line at x = 0\n  geom_text(aes(label = paste0(values)), color = \"white\", size = label_size_inBar, fontface = \"bold\", hjust = 1) + # Add text labels inside the bars\n  scale_x_continuous(breaks = seq(0, 28, by = 4), \n                     limits = c(0, 29),  \n                     expand = c(0, 0)) +  \n  labs(title = \"Property types used:\", x = \"Number of papers\", y = \"\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = plot_title_size, face = \"bold\"),\n        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = \"bold\"),\n        axis.text.y = element_text(size = label_size_yaxis, face = \"bold\"),  \n        panel.grid.major.y = element_line(color = \"darkgrey\", linewidth = 0.009, linetype = \"dashed\"),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        axis.title = element_text(size = plot_axis_title_size, face = \"bold\"),\n        axis.line = element_line(color = \"black\", linewidth = 1)\n  ) \n\n\n##################################################################################\n# PLOT THE MATRIX !\n##################################################################################\n\n# Arrange plots horizontally in the first row\nplots_row <- grid.arrange(variable_dependent,\n                          variable_Energy,\n                          variable_geovariables,\n                          variable_propertyCondition,\n                          variable_socialeconomic,\n                          variable_propertyType,\n                          nrow = 3,\n                          ncol = 2)\n```\n\n\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","number-sections":false,"css":["../main_styles.css","../additional_styles/styles_chapter3_Literature.css"],"include-in-header":[{"text":"<link rel=\"icon\" type=\"image/png\" href=\"assets/cover.jpg\">\n"},{"text":"<link rel=\"icon\" type=\"image/png\" href=\"../assets/cover.jpg\">\n"}],"output-file":"literature_review.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["../references.bib"],"editor":"visual","theme":{"light":"sandstone","dark":"solar"},"grid":{"body-width":"1500px","sidebar-width":"250px","margin-width":"250px","gutter-width":"3.5rem"},"tbl-cap-location":"top","fig-cap-location":"top","sidebar":{"logo":"../assets/cover.jpg"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}