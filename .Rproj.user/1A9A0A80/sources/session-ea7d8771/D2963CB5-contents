---
title: |
  | Are home buyers inattentive towards energy efficiency?
  | An econometric analysis based on a new data set created with NLP and OCR techniques
description: "--- Status Report ---"
date: today # other options: now, last-modified
author:
  - name: Valdimar Orri Einarsson
    affiliation: 
      - name: Carl von Ossietzky University of Oldenburg
        city: Oldenburg
        country: Germany
        url: https://uol.de/en
        
  - "**Supervised by:**"
  - "**Place:**"
  - "Prof. Dr. Jürgen Bitzer"
  - "Oldenburg, Germany"
  - "Dr. rer. pol. Bernhard Dannemann"

title-block-banner: true
# title-block-banner-color: "#562457"
format:
  html:
    embed-resources: true
    page-layout: full
    css: styles.css
    theme: flatly
    code-fold: true
    toc: True
    toc-location: left
    toc-depth: 5
    toc-expand: 3
    number-sections: true
    theme-toggle: true
    fig-cap-location: top
    grid:
      sidebar-width: 400px
      body-width: 1100px
      margin-width: 200px
      gutter-width: 1.5rem
    
bibliography: Master_thesis_ref.bib
link-citations: true
csl: apa.csl
editor: 
  markdown: 
    wrap: sentence
---

# List of Abbreviations

-   **EPC**: Energy performance certificate
-   **EPBD**: Energy Performance of Buildings Directive

<!-- to add indentation of paragraph use:  <p style="text-indent: 2em;"> -->

# Introduction

::: callout-note
Add the text here: \* Yes - text made \* NO - Grammar check \* NO - Clean and refined
:::

# EPBD and the Danish EPC scheme

::: callout-note
Add the text here: \* Yes - text made \* NO - Grammar check \* NO - Clean and refined
:::

<!-- [![EPC classification conversion table for residential buildings](images/DK_EPC_Conversion_table.PNG){#fig-conver .figure-top fig-align="center" width="80%" style="border: 2px solid silver;"}](https://www.retsinformation.dk/eli/lta/2015/1759) -->


![PC classification conversion table for residential buildings](images/plots_figures_Datasummary_literature/conversion_table_epc.jpeg){.figure-top fig-align="center" width="75%" }


[![Current energy labels in Denmark](images/DK_EPC_LABELS_today.PNG){#fig-epclabel}](https://epbd-ca.eu/ca-outcomes/outcomes-2015-2018/book-2018/countries/denmark)

# Literature review

::: callout-note
Add the text here: \* YES - text made \* YES - Grammar check \* NO - Clean and refined
:::

```{r, fig.width=16, fig.height=18}
#| label: fig-epceffect
#| fig-cap: Price premium across different labels for selected papers

suppressWarnings({
  
  library(ggplot2)
  library(gridExtra)
  library(grid)
  
  legend_size <- 1.1
  plot_title_setSize <- 20
  set_axisTitle_size <- 16
  theX_size <- 15
    
  ###############################################################
  # ------------------ DENMARK 
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(6.20, 0, 0, 5.10, 0, -5.40, -12.90, -24.30) # from : https://doi.org/10.1016/j.enpol.2016.02.029
  values2 <- c(0, 1.02, 6.60, 3.5, 0, -3.60, -7.60, -12.10) # from : https://ens.dk/sites/ens.dk/files/Energibesparelser/bilag_-_do_homes_with_better_energy_efficiency_ratings_have_higher_house_prices_oekonometrisk_tilgang.pdf
  
  
  labels <- c("A or B","A", "B", "C", "D", "E", "F", "G")
  country <- "Denmark"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A or B", "A", "B", "C", "D", "E", "F", "G"))
  
  # Create a data frame for values1
  df1 <- data.frame(labels = labels, values = values1, group = "(Jensen, Hansen, and Kragh 2016)")
  # Create a data frame for values2
  df2 <- data.frame(labels = labels, values = values2, group = "(Næss-Schmidt, Heebøll, and Fredslund 2015)")
  # Combine the data frames
  df <- rbind(df1, df2)
  
  # Define colors based on numeric values
  reference_value1 <- "(Jensen, Hansen, and Kragh 2016)"
  reference_value2 <- "(Næss-Schmidt, Heebøll, and Fredslund 2015)"
  
  # Define colors based on group
  group_colors <- c("(Jensen, Hansen, and Kragh 2016)" = "#B22222",  # Light blue for Values1
                    "(Næss-Schmidt, Heebøll, and Fredslund 2015)" = "#666666")  # Dark blue for Values2
  
  
  
  ###### key var size
  legend_key_size <-0.85
  legend_text_size <- 15
  triangle_size <- 10
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_denmark <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != "D" & group == reference_value1), aes(label = "▲", fill = '#B22222', fontface = "bold"), color = "#B22222", size= triangle_size, vjust = 0, hjust = 1.1) +
    geom_text(data = subset(df, values == 0 & labels != "D" & group == reference_value2), aes(label = "▲", fill = '#666666', fontface = "bold"), color = "#666666", size= triangle_size, vjust = 0, hjust = -0.05) +
    
    labs(title = paste("Labell effect in:", country), x = "Labels", y = "Price Premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c("(Jensen, Hansen, and Kragh 2016)", "(Næss-Schmidt, Heebøll, and Fredslund 2015)")) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-25, 10, by = 5), 
                       limits = c(-25, 10),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize,face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(0.75, 0.37),    # position of legend (x,y)
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legenr
  
  
  ###############################################################
  # ------------------ Norway 
  ###############################################################
  
  # Define the data
  reference <- "Not \n lebelled"
  values1 <- c(7.43,1.81,3.52,3.56,2.84,2.45,1.24,0) # from: https://doi.org/10.5547/01956574.44.1.akha
  values2 <- c(0,0,0,0,-2.40,2,5.1,0) # from : https://doi.org/10.1016/j.enpol.2017.09.029
  
  
  labels <- c("A", "B", "C", "D", "E", "F", "G",'Not \n lebelled')
  country <- "Norway"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A", "B", "C", "D", "E", "F", "G",'Not \n lebelled'))
  
  # Create a data frame for values1
  df1 <- data.frame(labels = labels, values = values1, group = "(Khazal and Sønstebø 2023)")
  # Create a data frame for values2
  df2 <- data.frame(labels = labels, values = values2, group = "(Olaussen, Oust, and Solstad 2017)")
  # Combine the data frames
  df <- rbind(df1, df2)
  
  # Define colors based on numeric values
  reference_value1 <- "(Khazal and Sønstebø 2023)"
  reference_value2 <- "(Olaussen, Oust, and Solstad 2017)"
  
  # Define colors based on group
  group_colors <- c("(Khazal and Sønstebø 2023)" = "#A67C00",  # Light blue for Values1
                    "(Olaussen, Oust, and Solstad 2017)" = "#36454F")  # Dark blue for Values2
  
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Norway <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = "X", fill = '#36454F', fontface = "bold"), color = "#36454F", size= theX_size, vjust = 0, hjust = -0.05) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = "X", fill = '#36454F', fontface = "bold"), color = "#36454F", size= theX_size, vjust = 0, hjust = -0.05) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = "X", fill = '#36454F', fontface = "bold"), color = "#36454F", size= theX_size, vjust = 0, hjust = -0.05) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value2), aes(label = "X", fill = '#36454F', fontface = "bold"), color = "#36454F", size= theX_size, vjust = 0, hjust = -0.05) +
    
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1, reference_value2)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-6, 10, by = 2), 
                       limits = c(-5, 10),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize,face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  
  
  ###############################################################
  # ------------------ Finland 
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(1.3, 0, 0, 0) # from: https://doi.org/10.1016/j.apenergy.2016.07.076 
  labels <- c("A,B or C", "D", "E", 'F or G')
  country <- "Finland"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A,B or C", "D", "E", 'F or G'))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Fuerst, Oikarinen, and Harjunen 2016)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Fuerst, Oikarinen, and Harjunen 2016)"
  
  # Define colors based on group
  group_colors <- c("(Fuerst, Oikarinen, and Harjunen 2016)" = "#08457E")  # Light blue for Values1
              
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Finland <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#08457E', fontface = "bold"), color = "#08457E", size= theX_size, vjust = 0, hjust = 0.4) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-4, 4, by = 1), 
                       limits = c(-4, 4),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize,face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          axis.title.y = element_blank(),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  
  ###############################################################
  # ------------------ Netherlands
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(10.2, 5.5, 2.10, 0, -0.5,-2.3,-4.80) # from: https://doi.org/10.1016/j.jeem.2010.11.006
   
  labels <- c("A", "B", "C", "D", "E", "F", "G")
  country <- "Netherlands"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A", "B", "C", "D", "E", "F", "G"))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Brounen and Kok 2011)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Brounen and Kok 2011)"
  
  # Define colors based on group
  group_colors <- c("(Brounen and Kok 2011)" = "#36454F")  # Light blue for Values1
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Netherlands <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    # geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#666666', fontface = "bold"), color = "#666666", size= theX_size, vjust = 0, hjust = -0.05) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-5, 11, by = 2.5), 
                       limits = c(-5, 11),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize,face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  ###############################################################
  # ------------------ Wales, UK
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(12.8, 3.5, 0, -3.6, -6.50,0) # from: https://doi.org/10.1016/j.enpol.2016.01.024
  
  labels <- c("A or B", "C", "D", "E", "F", "G")
  country <- "Wales, UK"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A or B", "B", "C", "D", "E", "F", "G"))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Fuerst et al. 2016)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Fuerst et al. 2016)"
  
  # Define colors based on group
  group_colors <- c("(Fuerst et al. 2016)" = "#32174D")  # Light blue for Values1
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Wales <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#32174D', fontface = "bold"), color = "#32174D", size= theX_size, vjust = 0, hjust = -0.05) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-7, 14, by = 3.5), 
                       limits = c(-7, 14),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize, face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          axis.title.y = element_blank(),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  ###############################################################
  # ------------------ Ireland
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(9.3, 5.2, 1.7,0, 0, -10.6) # from:https://doi.org/10.1016/j.eneco.2013.07.020
  
  labels <- c("A","B", "C", "D", "E", "F or G")
  country <- "Ireland"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A","B", "C", "D", "E", "F or G"))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Hyland, Lyons, and Lyons 2013)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Hyland, Lyons, and Lyons 2013)"
  
  # Define colors based on group
  group_colors <- c("(Hyland, Lyons, and Lyons 2013)" = "#6E322B")  # Light blue for Values1
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Ireland <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#6E322B', fontface = "bold"), color = "#6E322B", size= theX_size, vjust = 0, hjust = 0.4) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-12, 10, by = 3), 
                       limits = c(-12, 10),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize, face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  
  
  ###############################################################
  # ------------------ Spain
  ###############################################################
  
  # Define the data
  reference <- "G"
  values1 <- c(7.7, 0, 0, 3.2, 0, 0, 0) # from: https://doi.org/10.3390/su11020372 
  
  labels <- c("A","B", "C", "D", "E", "F", "G")
  country <- "Spain"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A","B", "C", "D", "E", "F", "G"))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Marmolejo-Duarte and Chen 2019)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Marmolejo-Duarte and Chen 2019)"
  
  # Define colors based on group
  group_colors <- c("(Marmolejo-Duarte and Chen 2019)" = "#4C573E")  # Light blue for Values1
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Spain <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#4C573E', fontface = "bold"), color = "#4C573E", size= theX_size, vjust = 0, hjust = 0.4) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-3, 8.5, by = 1.5), 
                       limits = c(-3, 8.5),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize,face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          axis.title.y = element_blank(),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  
  ###############################################################
  # ------------------ England, UK
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(5,1.8,0,-0.7,-0.9,-6.8) # from: https://doi.org/10.1016/j.eneco.2014.12.012
  
  labels <- c("A or B", "C", "D", "E", "F", "G")
  country <- "England, UK"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A or B", "C", "D", "E", "F", "G"))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Fuerst et al. 2015)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Fuerst et al. 2015)"
  
  # Define colors based on group
  group_colors <- c("(Fuerst et al. 2015)" = "#656565")  # Light blue for Values1
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_England <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#B22222', fontface = "bold"), color = "#B22222", size= theX_size, vjust = 0, hjust = 0.4) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-8, 6, by = 2), 
                       limits = c(-8, 6),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize, face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  
  ###############################################################
  # ------------------ Padua, Italy
  ###############################################################
  
  # Define the data
  reference <- "D"
  values1 <- c(55,42,20,0,0,-14,-29) # from: https://doi.org/10.3390/buildings13020276
  
  labels <- c("A4","A3 to A","B or C", "D", "E", "F", "G")
  country <- "Padua, Italy"
  
  # Reorder labels factor levels to ensure "A/B" appears first
  labels <- factor(labels, levels = c("A4","A3 to A","B or C", "D", "E", "F", "G"))
  
  # Create a data frame for values1
  df <- data.frame(labels = labels, values = values1, group = "(Copiello and Coletto 2023)")
  
  # Define colors based on numeric values
  reference_value1 <- "(Copiello and Coletto 2023)"
  
  # Define colors based on group
  group_colors <- c("(Copiello and Coletto 2023)" = "#C27C0E")  # Light blue for Values1
  
  
  ###### key var size
  legend_key_size <-0.5
  legend_text_size <- 15
  triangle_size <- 13
  reference_circle_size <- 13
  x_label_size <- 16
  y_label_size <- 18
  
  # Plot using ggplot2
  plot_Italy <- ggplot(df, aes(x = labels, y = values, fill = group)) +
    geom_bar(stat = "identity", color = "darkgrey", position = position_dodge(width = 0.9)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "darkgrey", size = 1) +
    geom_vline(xintercept = -Inf, color = "darkgrey", size = 1.5) +
    geom_vline(xintercept = seq(0.5, length(labels) - 0.5, by = 1), color = "darkgrey", linetype = "solid") + # Add vertical lines
    geom_text(data = subset(df, values == 0 & labels == reference), aes(label = "●", fill = "square"), color = "#2F4F4F", size = reference_circle_size, vjust = 0.4) +
    geom_text(data = subset(df, values == 0 & labels != reference & group == reference_value1), aes(label = "X", fill = '#C27C0E', fontface = "bold"), color = "#C27C0E", size= theX_size, vjust = 0, hjust = 0.4) +
    labs(title = paste("Label effect in:", country), x = "Labels", y = "Price premium") +
    scale_fill_manual(values = group_colors, guide = "legend", labels = c(reference_value1)) + # Manually set fill colors and legend labels
    scale_y_continuous(labels = scales::percent_format(scale = 1), 
                       breaks = seq(-30, 60, by =15), 
                       limits = c(-30, 60),  # Set the y-axis limits to include positive values up to 10
                       expand = c(0, 0)) +  # Adjust the expansion factor
    theme_minimal() +
    theme(plot.title = element_text(size = plot_title_setSize, face = "bold"),
          axis.text.x = element_text(angle = 0, hjust = 0.4, size = x_label_size, face = "bold"),
          axis.text.y = element_text(size = y_label_size, face = "bold"),  
          panel.grid.major.y = element_line(color = "darkgrey", size = 0.009, linetype = "dashed"),
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          axis.title = element_text(size = set_axisTitle_size, face = "bold"),
          axis.title.y = element_blank(),
          legend.title = element_blank(),  # Remove legend title
          legend.position = c(1, 1),    # Set legend position to top right corner
          legend.justification = c("right", "top"),  # Align legend to top right
          legend.box.just = "right",  # Align legend box to right
          legend.key.size = unit(legend_size, "lines"),  # Increase legend key size
          legend.text = element_text(size = legend_text_size), #legend text size
          legend.background = element_rect(color = "black", fill = "white", size = 0.5))  # Add frame around legend
  
  
  
  ##################################################################################
  # PLOT THE MATRIX !
  ##################################################################################
  
  # Arrange plots horizontally in the first row
  ################ NOTE !: With arrangeGrob we can store it to variable but grid.arrange() doesnt - it simply plots makeing duplicated plots for this code
  plots_row <- arrangeGrob(plot_denmark,
                            plot_Finland, # 
                            plot_Norway, # 
                            
                            plot_Italy, # 
                            plot_Ireland, #
                            plot_Spain, # 
                            
                            plot_England, # 
                            plot_Wales, # 
                            plot_Netherlands, # 
                            nrow = 5,
                            ncol = 2)
  
  
  
  ###### Create an empty plot for the second row
  empty_plot <- ggplot()+
    theme_void()+
    theme(plot.background = element_rect(fill = "white", color = "grey", size = 0.8))
  
  # # Combine the plots and the empty plot vertically
  combined_plots <- grid.arrange(empty_plot,plots_row, ncol = 1, heights = c(0.11,4))
  # 
  # # Add texts to the empty plot below the main plots
  # the X 
  grid.text("X ", x = 0.05, y = 1-0.013, just = "center", gp = gpar(fontsize = 18, fontface = "bold", col = "black"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))
  grid.text(": Insignificant result for given label", x = 0.065, y = 1-0.013, just = "left", gp = gpar(fontsize = 16, fontface = "bold", col = "black"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))
  
  # the reference
  grid.text("● ", x = 0.37, y = 1-0.011, just = "center", gp = gpar(fontsize = 25, fontface = "bold", col = "black"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))
  grid.text(": Reference label", x = 0.39, y = 1-0.013, just = "left", gp = gpar(fontsize = 16, fontface = "bold", col = "black"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))
  
  # the triangle 
  grid.text("▲ ", x = 0.55, y = 1-0.012, just = "center", gp = gpar(fontsize = 18, fontface = "bold", col = "black"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))
  grid.text(": Label category not considered for given research paper", x = 0.56, y = 1-0.013, just = "left", gp = gpar(fontsize = 16, fontface = "bold", col = "black"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1:3))

})

```


::: callout-note
Add the text here: \* Yes - text made \* NO - Grammar check \* NO - Clean and refined
:::

```{r, fig.width=16, fig.height=18}
#| label: fig-epcvar
#| fig-cap: variables used in the research papers


library(ggplot2)
library(gridExtra)
# all data was collected from the papers referenced in this master thesis
# and save in the excel file called:
#---> Literature_EPC_papers_data_overview.xlsx

# I manually set the data in - because its just easier 



label_size_yaxis = 14
label_size_xaxis = 15
label_size_inBar = 8
plot_title_size = 18
plot_axis_title_size = 12

###############################################################
# ------------------> Dependent variable (Price) 
###############################################################

# Define the data
values <- c(1, 3, 8, 4, 2, 7, 3, 1) 
labels <- c('Transaction price',
  'Listing price ',
  'Ln(Transaction price)',
  'Ln(listing price)',
  'Transaction price \n(sqr. meter)',
  'Ln(Transaction price \n (sqr. meter))',
  'Ln(listing price \n (sqr. meter))',
  'Ln(stated buyers \n price (sqr. meter))'
)

# Create a data frame for values1
df <- data.frame(labels = labels, values = values)

# sort by frequency in ascenting order
df <- df[order(df$values), ]
# Reorder the levels of the 'labels' factor based on the sorted dataframe
df$labels <- factor(df$labels, levels = df$labels)

variable_dependent <- ggplot(df, aes(x = values, y = labels))+
  geom_bar(stat = "identity", fill = "#4B5320", color="black", position = position_dodge(width = 0.9)) +
  geom_vline(xintercept = 0, color = "black", linewidth = 1.5) +  # Add vertical line at x = 0
  geom_text(aes(label = paste0(values)), color = "white", size = label_size_inBar, fontface = "bold", hjust = 1) + # Add text labels inside the bars
  scale_x_continuous(breaks = seq(0, 9, by = 1), 
                     limits = c(0, 9),  # Set the y-axis limits to include positive values up to 10
                     expand = c(0, 0)) +  # Adjust the expansion factor
  labs(title = "Property price variable(s) used:", x = "Number of papers", y = "Category") +
  theme_minimal() +
  theme(plot.title = element_text(size = plot_title_size, face = "bold"),
        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = "bold"),
        axis.text.y = element_text(size = label_size_yaxis, face = "bold"),  
        panel.grid.major.y = element_line(color = "darkgrey", linewidth  = 0.009, linetype = "dashed"),
        panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
        panel.grid.major.x = element_blank(), # Remove major vertical grid lines
        panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
        axis.title = element_text(size = plot_axis_title_size, face = "bold"),
        axis.line = element_line(color = "black", linewidth = 1),
  )



###############################################################
# ------------------> Energy variables
###############################################################

# Define the data
values <- c(24,10,3,2,1) 
labels <- c(
  'EPC labels',
  'Energy consumption \n(kwh)',
  'Energy saving or \n conversion potential \n(kwh)',
  'Energy price given \n heating type per \n month',
  'Net present value \n of energy cost'
)

# Create a data frame for values1
df <- data.frame(labels = labels, values = values)

# sort by frequency in ascenting order
df <- df[order(df$values), ]
# Reorder the levels of the 'labels' factor based on the sorted dataframe
df$labels <- factor(df$labels, levels = df$labels)

variable_Energy <- ggplot(df, aes(x = values, y = labels)) +
  geom_bar(stat = "identity", fill = "#A67C00", color = "black", position = position_dodge(width = 0.9)) +
  geom_vline(xintercept = 0, color = "black", linewidth = 1.5) +  # Add vertical line at x = 0
  geom_text(aes(label = paste0(values)), color = "white", size = label_size_inBar, fontface = "bold", hjust = 1) + # Add text labels inside the bars
  scale_x_continuous(breaks = seq(0, 24, by = 5), 
                     limits = c(0, 24),  
                     expand = c(0, 0)) +  
  labs(title = "Energy efficiency variable(s) used:", x = "Number of papers", y = "") +
  theme_minimal() +
  theme(plot.title = element_text(size = plot_title_size, face = "bold"),
        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = "bold"),
        axis.text.y = element_text(size = label_size_yaxis, face = "bold"),  
        panel.grid.major.y = element_line(color = "darkgrey", linewidth = 0.009, linetype = "dashed"),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title = element_text(size = plot_axis_title_size, face = "bold"),
        axis.line = element_line(color = "black", linewidth = 1)
  ) 


###############################################################
# ------------------> property Condition variables
###############################################################

# Define the data
values <- c(
  9,
  9,
  16,
  9,
  2,
  2,
  8,
  6,
  2,
  3,
  1
) 

labels <- c(
  'renovation indicator',
  'Quality indicator',
  'year built-dummy \n variables',
  'year built-continous \n variable',
  'wall material',
  'roof material',
  'heating source \n & system',
  'ventilation indicator',
  'type of windows',
  'Newly built indicator',
  'Maintenance cost'
)

# Create a data frame for values1
df <- data.frame(labels = labels, values = values)

# sort by frequency in ascenting order
df <- df[order(df$values), ]
# Reorder the levels of the 'labels' factor based on the sorted dataframe
df$labels <- factor(df$labels, levels = df$labels)

variable_propertyCondition <- ggplot(df, aes(x = values, y = labels)) +
  geom_bar(stat = "identity", fill = "#708090", color = "black", position = position_dodge(width = 0.9)) +
  geom_vline(xintercept = 0, color = "black", linewidth = 1.5) +  # Add vertical line at x = 0
  geom_text(aes(label = paste0(values)), color = "white", size = label_size_inBar, fontface = "bold", hjust = 1) + # Add text labels inside the bars
  scale_x_continuous(breaks = seq(0, 17, by = 4), 
                     limits = c(0, 17),  
                     expand = c(0, 0)) +  
  labs(title = "Property Condition variable(s) used:", x = "Number of papers", y = "") +
  theme_minimal() +
  theme(plot.title = element_text(size = plot_title_size, face = "bold"),
        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = "bold"),
        axis.text.y = element_text(size = label_size_yaxis, face = "bold"),  
        panel.grid.major.y = element_line(color = "darkgrey", linewidth = 0.009, linetype = "dashed"),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title = element_text(size = plot_axis_title_size, face = "bold"),
        axis.line = element_line(color = "black", linewidth = 1)
  ) 


###############################################################
# ------------------> Geographical variables
###############################################################

# Define the data
values <- c(
  8,
  14,
  2,
  2,
  2,
  7,
  3
) 

labels <- c(
  'No Geographical \n variables',
  'Distance measures',
  'Property View \n indicator',
  'Accessability \n measure',
  'Urban/rural indicator',
  'Geographical \n area dummies',
  'coordinates'
)

# Create a data frame for values1
df <- data.frame(labels = labels, values = values)

# sort by frequency in ascenting order
df <- df[order(df$values), ]
# Reorder the levels of the 'labels' factor based on the sorted dataframe
df$labels <- factor(df$labels, levels = df$labels)

variable_geovariables <- ggplot(df, aes(x = values, y = labels)) +
  geom_bar(stat = "identity", fill = "#4B3D33", color = "black", position = position_dodge(width = 0.9)) +
  geom_vline(xintercept = 0, color = "black", linewidth = 1.5) +  # Add vertical line at x = 0
  geom_text(aes(label = paste0(values)), color = "white", size = label_size_inBar, fontface = "bold", hjust = 1) + # Add text labels inside the bars
  scale_x_continuous(breaks = seq(0, 15, by = 4), 
                     limits = c(0, 15),  
                     expand = c(0, 0)) +  
  labs(title = "Geographical variable(s) used:", x = "Number of papers", y = "Category") +
  theme_minimal() +
  theme(plot.title = element_text(size = plot_title_size, face = "bold"),
        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = "bold"),
        axis.text.y = element_text(size = label_size_yaxis, face = "bold"),  
        panel.grid.major.y = element_line(color = "darkgrey", linewidth = 0.009, linetype = "dashed"),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title = element_text(size = plot_axis_title_size, face = "bold"),
        axis.line = element_line(color = "black", linewidth = 1)
  ) 



###############################################################
# ------------------> Socioeconomic indicators
###############################################################

# Define the data
values <- c(
  6,
  5,
  3,
  2,
  4,
  20
) 

labels <- c(
  'Economic & \n political Indicators',
  'Demographic \n indicators',
  'Education Indicators',
  'Housing & property \n market indicators',
  'Quality of \n life indicators',
  'No Socioeconomic \n variables '
)

# Create a data frame for values1
df <- data.frame(labels = labels, values = values)

# sort by frequency in ascenting order
df <- df[order(df$values), ]
# Reorder the levels of the 'labels' factor based on the sorted dataframe
df$labels <- factor(df$labels, levels = df$labels)

variable_socialeconomic <- ggplot(df, aes(x = values, y = labels)) +
  geom_bar(stat = "identity", fill = "#943126", color = "black", position = position_dodge(width = 0.9)) +
  geom_vline(xintercept = 0, color = "black", linewidth = 1.5) +  # Add vertical line at x = 0
  geom_text(aes(label = paste0(values)), color = "white", size = label_size_inBar, fontface = "bold", hjust = 1) + # Add text labels inside the bars
  scale_x_continuous(breaks = seq(0, 21, by = 4), 
                     limits = c(0, 21),  
                     expand = c(0, 0)) +  
  labs(title = "Socialeconomic variable(s) used:", x = "Number of papers", y = "Category") +
  theme_minimal() +
  theme(plot.title = element_text(size = plot_title_size, face = "bold"),
        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = "bold"),
        axis.text.y = element_text(size = label_size_yaxis, face = "bold"),  
        panel.grid.major.y = element_line(color = "darkgrey", linewidth = 0.009, linetype = "dashed"),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title = element_text(size = plot_axis_title_size, face = "bold"),
        axis.line = element_line(color = "black", linewidth = 1)
  ) 


###############################################################
# ------------------> Property Type
###############################################################

# Define the data
values <- c(
  22,    # Apartments / multifamily home
  1,     # row house
  26,    # Detached house / villa / Single family house / bungalow
  4,     # duplex
  10,    # semi-detached house
  3,     # town house
  8      # terraced
) 

labels <- c(
  'Apartments',
  'Row house',
  'Detached house',
  'Duplex',
  'Semi-detached house',
  'Townhouse',
  'Terraced'
)

# Create a data frame for values1
df <- data.frame(labels = labels, values = values)

# sort by frequency in ascenting order
df <- df[order(df$values), ]
# Reorder the levels of the 'labels' factor based on the sorted dataframe
df$labels <- factor(df$labels, levels = df$labels)

variable_propertyType <- ggplot(df, aes(x = values, y = labels)) +
  geom_bar(stat = "identity", fill = "#656565", color = "black", position = position_dodge(width = 0.9)) +
  geom_vline(xintercept = 0, color = "black", linewidth = 1.5) +  # Add vertical line at x = 0
  geom_text(aes(label = paste0(values)), color = "white", size = label_size_inBar, fontface = "bold", hjust = 1) + # Add text labels inside the bars
  scale_x_continuous(breaks = seq(0, 28, by = 4), 
                     limits = c(0, 29),  
                     expand = c(0, 0)) +  
  labs(title = "Property types used:", x = "Number of papers", y = "") +
  theme_minimal() +
  theme(plot.title = element_text(size = plot_title_size, face = "bold"),
        axis.text.x = element_text(angle = 0, hjust = 0.4, size = label_size_xaxis, face = "bold"),
        axis.text.y = element_text(size = label_size_yaxis, face = "bold"),  
        panel.grid.major.y = element_line(color = "darkgrey", linewidth = 0.009, linetype = "dashed"),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title = element_text(size = plot_axis_title_size, face = "bold"),
        axis.line = element_line(color = "black", linewidth = 1)
  ) 


##################################################################################
# PLOT THE MATRIX !
##################################################################################

# Arrange plots horizontally in the first row
plots_row <- grid.arrange(variable_dependent,
                          variable_Energy,
                          variable_geovariables,
                          variable_propertyCondition,
                          variable_socialeconomic,
                          variable_propertyType,
                          nrow = 3,
                          ncol = 2)
```

# Data

## Housing data

::: para
--------- where did you get the data & how did get it

The Ministry of Taxation of Denmark hosts the site ois.dk which offers open access to the property records of the whole country.
There users can obtain both dwelling characteristics and transaction prices of the dwelling.
However, the only restriction is the fact that in order to browse through the data one must have an address or a identification code of the dwelling.
In light of this, we instead collect our housing data by web scraping the website boliga.dk using python and various libraries.
The site provides users with unrestricted access to extensive property descriptions, historical transaction prices, and, for certain dwellings, listing prices and advertisement metrics like number of advertisements and duration on the market.
We web scrape the whole site under the condition that dwellings have been at least sold once during the time period 1.July 2010 to 2023.
Moreover, we exclude vacation homes from our web scraping process.
Once the data is collected we obtain a sample of 2.295.344 transactions of which belong to 981.469 dwellings.
However, once we merge the housing data with the EPC data our sample goes down to 994.769 transactions of which belong to 711.591 dwellings.
We merge the two data sets using two property authentication codes.
The next chapter explains in detail the merging process of two datasets.

--------- what and how do you drop certain observations

After merging the housing data with the EPC data, we remove observations that are likely to introduce potential bias.
Initially, as this analysis is entirely focused on residential dwellings, we remove all dwellings that do not reflect a residential dwelling based on categories from the Building and Housing register of Denmark or BBR (Bygnings- og Boligregistret) which we obtained from scraping boliga.dk.
These categories include buildings used for movie theaters, swimming pools, kindergarten buildings, hospitals etc.
Moreover we also exclude dwelling registered as farmhouses (in danish: Landejendom or stuehus).
This type of dwelling is excluded not only because they do not reflect a typical residential dwelling but also because they often include a significant portion of land and additional buildings.
incorporating these observations poses a problem due to the nature of the EPC reports, which only belong to a single building structure.
For instance, based on our data we would perceive a farmhouse observation as a single farmhouse dwellings with a large plot of land and a EPC label of A, when in fact there could be multiple independent houses on the land which we do not have the EPC reports of.
Therefore it can becomes relatively complex to quantify farmhouses and if these factors are not accounted for then our sample would not accurately represent the properties being evaluated and can lead to our estimates being bias.
Hence, we remove observations representing farmhouses and non-residential dwellings based on BBR categories.

Next, we remove transactions which occurred before 2010 and transactions that were made at a auction, between family members or other circumstance other than on free-market terms.
Moreover, to account for the possibility of buyers buying a dwelling to simply flip the property, we remove transactions from dwellings sold more than once within the year.
Furthermore, we drop transactions which do not have toilet or kitchen facilities, buildings that are condemned by governmental authorities and observations with transaction price equal to zero.
Finally, we identified observations with potential data errors, where the EPC variables were inconsistent, indicating possible extraction error or errors in the original PDF reports. To ensure integrity of our analysis, we excluded these observations. The final data sets contains 728,795 transactions for 574,157 unique dwelling units.

Summary statistics are shown in tables @fig-summaryNumeric which reports continuous variables and @fig-summaryCategorical which reports the categorical variables.
:::

### Housing Data: Summary Statistics




<!-- ```{r} -->
<!-- # Convert specified columns to factors -->
<!-- factor_columns <- c( -->
<!--   "EPC_D123_Registered_energy_label", -->
<!--   "EPC_D123_energy_label_all_reno", -->
<!--   "dummy_boiler_exists", -->
<!--   "dummy_woodStove_exists", -->
<!--   "dummy_oilStove_exists", -->
<!--   "dummy_masonaryHeater_exists", -->
<!--   "dummy_fireplace_exists", -->
<!--   "EPC_D123_LABEL_JUMP_current_to_allreno", -->
<!--   "Varmepumpe_pred_and_actual_85percent_threshold", -->
<!--   "Solarceller_pred_and_actual_85percent_threshold", -->
<!--   "Solvarme_pred_and_actual_85percent_threshold", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating", -->
<!--   "EPC_energy_sources_factors_15levels" -->
<!-- ) -->

<!-- # Convert the columns to factors -->
<!-- data[factor_columns] <- lapply(data[factor_columns], as.factor) -->

<!-- # Define the columns you want to include in the summary -->
<!-- columns_to_summarize <- c( -->
<!--   "EPC_D123_Registered_energy_label", -->
<!--   "EPC_D123_energy_label_all_reno", -->
<!--   "dummy_boiler_exists", -->
<!--   "dummy_woodStove_exists", -->
<!--   "dummy_oilStove_exists", -->
<!--   "dummy_masonaryHeater_exists", -->
<!--   "dummy_fireplace_exists", -->
<!--   "EPC_D123_LABEL_JUMP_current_to_allreno", -->
<!--   "EPC_D123_Total_Heating_Demand_in_kWh_Normalized_AdjustedForApartments", -->
<!--   "EPC_D123_Feature_profit_renovations_total_investment_cost", -->
<!--   "EPC_D123_Total_energy_cost_saved_allrenovations", -->
<!--   "Varmepumpe_pred_and_actual_85percent_threshold", -->
<!--   "Solarceller_pred_and_actual_85percent_threshold", -->
<!--   "Solvarme_pred_and_actual_85percent_threshold", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating", -->
<!--   "EPC_energy_sources_factors_15levels" -->
<!-- ) -->

<!-- # Generate the summary statistics using the st() function -->
<!-- summary_stats <- st(data[, columns_to_summarize]) -->

<!-- ``` -->



::: {.callout-caution collapse="true"}
## Result from R - categorical
```{r, message=FALSE, warning=FALSE}
#| label: fig-summaryNumeric
#| fig-cap: Summary statistics

suppressWarnings({
  library(vtable)
  library(vroom)
  library(dplyr)
  library(sf)
  library(ggspatial) # for the north arrow
  library(ggplot2)

  
  # Read in main datafile
  path <- 'D:/Thesis/Data/Thesis_main_dataset_FINALE.csv'
  # path <- 'D:/Thesis/Data/3_EDA_and_filtering/Final_set/rebuild/Thesis_main_dataset_FINALE.csv'

  data <- vroom(path)
  data <- data[!is.na(data$valhalla_distance_to_copenhagen_AUTO_in_min), ]
  data <- data %>%
    filter(RowID_MAIN_boliga_ROW_ID_unitID != "a3c6d473-8940-416b-a81d-119eef9edf6b")
  
  # write.csv(data, file = path, row.names = FALSE)
  
  selected_vars <- c(
    # continous variables:
    "price", 
    "advert_Newest_Advert_days_on_market",
    # "advert_Total_days_on_market",
    "unit_living_space", 
    "building_floor_quantity_in_building"
    )
  
  test <- data %>%
    select(selected_vars)
  
  st(test, numformat = formatfunc(big.mark = ','), title = "Summary statistics : Housing data - continous variables")
  
  
})
```
:::


```{r, echo=FALSE, results='hide',fig.keep='all'}
# Remove variables to free space from above chunk
rm(
   selected_vars ,
   test 
)
# Trigger garbage collection to free up memory
gc()

```


::: {.callout-caution collapse="true"}
## Result from R - continous variables
```{r, message=FALSE, warning=FALSE}
#| label: fig-summaryCategorical
#| fig-cap: Summary statistics

suppressWarnings({
  
  selected_vars <- c(
    #categorical variables: 
    "building_year_built_periodic_bins",
    "dummy_sold_before_built",
    "building_number_of_rooms_categorical",
    'building_number_of_toilets_categorical',
    "building_number_of_bathrooms_categorical",
    'building_walls_material',
    "building_roof_material",
    "building_renovation_categorial_5levels",
    "property_type_BBR",
    "dummy_basement_exists",
    'dummy_buisnessExists_in_building',
    'dummy_outhouse_builtin',
    'dummy_outhouse_detached',
    'dummy_carport_builtin',
    'dummy_carport_detached',
    'dummy_conservatory_builtin',
    'dummy_conservatory_detached',
    'dummy_Greenhouse_exists',
    'dummy_swimming_pool_exists',
    'dummy_boiler_exists',
    "dummy_woodStove_exists",
    'dummy_oilStove_exists',
    'dummy_masonaryHeater_exists',
    'dummy_fireplace_exists',
    'sale_Year'
    )
  
  test <- data %>%
    select(selected_vars)
  
  test$building_year_built_periodic_bins <- factor(data$building_year_built_periodic_bins)
  test$dummy_sold_before_built <- factor(data$dummy_sold_before_built)
  test$building_number_of_rooms_categorical <- factor(data$building_number_of_rooms_categorical)
  test$building_number_of_toilets_categorical <- factor(data$building_number_of_toilets_categorical)
  test$building_number_of_bathrooms_categorical <- factor(data$building_number_of_bathrooms_categorical)
  test$building_walls_material <- factor(data$building_walls_material)
  test$building_roof_material <- factor(data$building_roof_material)
  test$building_renovation_categorial_5levels <- factor(data$building_renovation_categorial_5levels)
  test$property_type_BBR <- factor(data$property_type_BBR)
  test$dummy_basement_exists <- factor(data$dummy_basement_exists)
  test$dummy_buisnessExists_in_building <- factor(data$dummy_buisnessExists_in_building)
  test$dummy_outhouse_builtin <- factor(data$dummy_outhouse_builtin)
  test$dummy_outhouse_detached <- factor(data$dummy_outhouse_detached)
  test$dummy_carport_builtin <- factor(data$dummy_carport_builtin)
  test$dummy_carport_detached <- factor(data$dummy_carport_detached)
  test$dummy_conservatory_builtin <- factor(data$dummy_conservatory_builtin)
  test$dummy_conservatory_detached <- factor(data$dummy_conservatory_detached)
  test$dummy_Greenhouse_exists <- factor(data$dummy_Greenhouse_exists)
  test$dummy_swimming_pool_exists <- factor(data$dummy_swimming_pool_exists)
  test$dummy_boiler_exists <- factor(data$dummy_boiler_exists)
  test$dummy_woodStove_exists <- factor(data$dummy_woodStove_exists)
  test$dummy_oilStove_exists <- factor(data$dummy_oilStove_exists)
  test$dummy_masonaryHeater_exists <- factor(data$dummy_masonaryHeater_exists)
  test$dummy_fireplace_exists <- factor(data$dummy_fireplace_exists)
  test$sale_Year <- factor(data$sale_Year)
  
  ?st()

  st(test, title = "Summary statistics : Housing data - categorical variables", digits = 4)
})
```
:::


```{r, echo=FALSE, results='hide',fig.keep='all'}
# Remove variables to free space from above chunk
rm(
   selected_vars ,
   test 
)
# Trigger garbage collection to free up memory
gc()

```


![Housing Data summary statistic](images/plots_figures_Datasummary_literature/Housing_data_summaryStatistic.jpeg){.figure-top fig-align="center" width="75%" }

::: {.callout-caution collapse="true"}
### Housing Data: Visualization

#### Property Prices metrics - histograms

```{r , fig.align='center',message=FALSE, warning=FALSE,fig.width=10, fig.height=8}

library(ggplot2)
library(gridExtra)
library(grid)

# log of price
data$price_log <- log(data$price)

# price per square meters 
data$price_per_squareMeter <- data$price/data$unit_living_space

# log of price per square meters 
data$price_per_squareMeter_log <- log(data$price/data$unit_living_space)


# **************************************************************************************************
# **************  PRICE ON FULL SAMPLE ! 
# **************************************************************************************************

###############################################################
# ------------------>  HISTOGRAM : Dependent variable: price
###############################################################

plot_price <- ggplot(data, aes(x = price)) +
  geom_histogram(binwidth = 150000, fill = "#753232", color = "black", alpha = 0.7) +
  labs(title = "Prices",
       x = "Price",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  # annotate("text", x =1e+08, y = 40000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)



###############################################################
# ------------------>  HISTOGRAM : Dependent variable: price - natural logarithm 
###############################################################

plot_price_log <- ggplot(data, aes(x = price_log)) +
  geom_histogram(binwidth = 0.15, fill = "#753232", color = "black", alpha = 0.7) +
  labs(title = "Log of Prices",
       x = "Natural log : Price",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )+
  scale_x_continuous(breaks = seq(min(data$price_log), max(data$price_log), by = 1),
                     labels = function(x) sprintf("%.2f", x))
  # annotate("text", x =15.2, y = 60000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)

# **************************************************************************************************
# **************  living size
# **************************************************************************************************


###############################################################################
# ------------------>  HISTOGRAM : Dependent variable: living space
###############################################################################

plot_livingSpace <- ggplot(data, aes(x = unit_living_space)) +
  geom_histogram(binwidth = 15, fill = "#3E517A", color = "black", alpha = 0.7) +
  labs(title = "Living space",
       x = "Square meters",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  # annotate("text", x =2e+06, y = 40000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)




#####################################################################################
# ------------------>  HISTOGRAM : Dependent variable: log living space
#####################################################################################
plot_livingSpace_log <- ggplot(data, aes(x = log(unit_living_space))) +
  geom_histogram(binwidth = 0.15, fill = "#3E517A", color = "black", alpha = 0.7) +
  labs(title = "Log of Living size ",
       x = "Natural log : Square meters",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  # scale_x_continuous(breaks = seq(min(data$price_per_squareMeter_log), max(data$price_per_squareMeter_log), by = 1),
                     # labels = function(x) sprintf("%.2f", x))+
  # annotate("text", x =11.5, y = 40000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)




# **************************************************************************************************
# **************  Time on the market
# **************************************************************************************************

###############################################################
# ------------------>  HISTOGRAM : time on market 
###############################################################

  
plot_tom <- ggplot(data, aes(x = advert_Newest_Advert_days_on_market)) +
  geom_histogram(binwidth = 15, fill = "#337532", color = "black", alpha = 0.7) +
  labs(title = "Time on the market (days)",
       x = "Days",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  scale_x_continuous(breaks = seq(min(data$unit_living_space), max(data$unit_living_space), by = 100),
                       labels = function(x) sprintf("%.0f", x))
  # annotate("text", x =1e+08, y = 40000, label = "FULL SAMPLE: 821.295 obs.", color = "red", size = 3.5,hjust = 0)

###############################################################
# ------------------>  HISTOGRAM : log of time on market
###############################################################

plot_tom_log <- ggplot(data, aes(x = log(advert_Newest_Advert_days_on_market))) +
  geom_histogram(binwidth = 0.35, fill = "#337532", color = "black", alpha = 0.7) +
  labs(title = "Log of Time on the market (days)",
       x = "Natural log : Days",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  # scale_x_continuous(breaks = seq(min(log(data$unit_living_space)), max(log(data$unit_living_space)), by = 0.5),
                     # labels = function(x) sprintf("%.2f", x))
# annotate("text", x =1e+08, y = 40000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)




###############################################################
# ------------------>  HISTOGRAM : energy consumption
###############################################################

plot_energy <- ggplot(data, aes(x = EPC_D123_Total_Heating_Demand_in_kWh_Normalized_AdjustedForApartments)) +
  geom_histogram(binwidth = 0.35, fill = "#753232", color = "black", alpha = 0.7) +
  labs(title = "Heating Demand in kWh",
       x = "Heating Demand in kWh",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  # scale_x_continuous(breaks = seq(min(log(data$unit_living_space)), max(log(data$unit_living_space)), by = 0.5),
                     # labels = function(x) sprintf("%.2f", x))
# annotate("text", x =1e+08, y = 40000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)



###############################################################
# ------------------>  HISTOGRAM : energy consumption
###############################################################

plot_energy_log <- ggplot(data, aes(x = log(EPC_D123_Total_Heating_Demand_in_kWh_Normalized_AdjustedForApartments))) +
  geom_histogram(binwidth = 0.35, fill = "#753232", color = "black", alpha = 0.7) +
  labs(title = "Log of Time on the market (days)",
       x = "Natural log : Heating Demand in kWh",
       y = "Frequency") +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
    axis.title.x = element_text(face = "bold", size = 10),
    axis.title.y = element_text(face = "bold", size = 10),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 6)
  )
  # scale_x_continuous(breaks = seq(min(log(data$unit_living_space)), max(log(data$unit_living_space)), by = 0.5),
                     # labels = function(x) sprintf("%.2f", x))
# annotate("text", x =1e+08, y = 40000, label = "FULL SAMPLE: 750.672 obs.", color = "red", size = 3.5,hjust = 0)



##################################################################################
# PLOT THE MATRIX !
##################################################################################

# Arrange plots horizontally in the first row
plots_row <- grid.arrange(plot_price,
                          plot_price_log,
                          plot_livingSpace,
                          plot_livingSpace_log,
                          plot_tom,
                          plot_tom_log,
                          # plot_energy,
                          # plot_energy_log,
                          nrow = 4,
                          ncol = 2)
```


```{r}
path <- 'D:/Thesis/The_Thesis_paper/Thesis_latex/Figures/Histogram_continous_variables.png'
png(path, width = 2800, height = 2000, res = 200)
plots_row <- grid.arrange(plot_price,
                          plot_price_log,
                          plot_livingSpace,
                          plot_livingSpace_log,
                          plot_tom,
                          plot_tom_log,
                          # plot_energy,
                          # plot_energy_log,
                          nrow = 4,
                          ncol = 2)
dev.off()
```


```{r, echo=FALSE, results='hide',fig.keep='all'}
# Remove variables to free space from above chunk
rm(
   plot_price,
   plot_price_log,
   plot_livingSpace,
   plot_livingSpace_log,
   plot_tom,
   plot_tom_log,
   plots_row
)
# Trigger garbage collection to free up memory
gc()

```


#### Plot price per square meter (municipality level) : full sample {.unnumbered}

```{r, echo=FALSE, results='hide',fig.keep='all'}
###################################### data prep
# read in shape file from GADM
denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp")
```

```{r,fig.align='center', message=FALSE, warning=FALSE,fig.width=12, fig.height=10}
# Drop rows where price_bin is "Missing" ---- Christiansø is not a municipality - only 98 municipalities
denmark_municipalities <- denmark_municipalities %>%
  filter(NAME_2 != "Christiansø")

# create the new main dataset with only necessary columns
test_data <- data %>%
  select("price","unit_living_space", "geo_longitude", "geo_latitude")

# calculate price per square meter
test_data$price_per_sqr_meter <- test_data$price/test_data$unit_living_space

# Convert data to sf object
data_sf <- st_as_sf(test_data, coords = c("geo_longitude", "geo_latitude"), crs = 4326)

# make sure both sets have the same coordinate reference system
denmark_municipalities <- st_transform(denmark_municipalities, crs = st_crs(data_sf))

# do spatial join to associate points with municipalities
data_joined <- st_join(data_sf, denmark_municipalities, join = st_within)

# Calculate average price per square meter at municipality level
average_prices <- data_joined %>%
  group_by(NAME_2) %>% 
  summarize(average_price_sqrmeter = mean(price_per_sqr_meter, na.rm = TRUE))%>%
  st_drop_geometry()

# Merge average prices back to the municipalities data
denmark_municipalities <- denmark_municipalities %>%
  left_join(average_prices, by = "NAME_2")

#################################### the plot

# coordinates of biggest cities in Denmark
biggest_cities <- data.frame(
  city = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"),
  longitude = c(12.568337, 10.203921, 10.40237, 9.916664, 8.576197),
  latitude = c(55.676098, 56.162939, 55.395941, 57.048, 55.476031)
)

# factor to set the order from biggest to smallest (as it currently is)
biggest_cities$city <- factor(biggest_cities$city, levels = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"))

# 
# Define professional colors
# '#C0C0C0', '#D3D3D3', '#A9A9A9', '#DCDCDC', '#D3D3D3'
# '#808080'
# '#696969'
# '#636363'
# '#5C5C5C'
# '#555555'
# professional_colors <- c("#2ca25f", "#99d8c9", "#e5f5e0", "#fd8d3c", "#e6550d")
# professional_colors <- c("#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3")
# professional_colors <- c("#3182bd", "#6baed6", "#9ecae1", "#c6dbef", "#eff3ff")
# professional_colors <- c("#8A9A5B", "#483C32", "#7B241C", "#3E517A", "#543005")
# professional_colors <- c("#943126", "#7B241C", "#7B241C", "#3E517A", "#543005")
# professional_colors <- c("#FF6666", "#FF1A1A", "#990000", "#FFB3B3", "#e6550d")
# professional_colors <- c("#000000", "#A67f00", "#D3D3D3", "#3E517A", "#5D734E")
# color_palette <- c("#8C001A", "#B3002D", "#CC0044", "#E6005C", "#FF1A66", "#4C0073", "#692A99", "#805AB6", "#AB62B3")
# "#6baed6", "#4d87c7", "#427aae", "#366b99"
# bright_blue_colors <- c(
#   "#00BFFF",  # Deep sky blue
#   "#1E90FF",  # Dodger blue
#   "#4169E1",  # Royal blue
#   "#00CED1",  # Dark turquoise
#   "#00FFFF",  # Cyan or aqua
#   "#4682B4",  # Steel blue
#   "#87CEEB",  # Sky blue
#   "#87CEFA",  # Light sky blue
#   "#6A5ACD",  # Slate blue
#   "#6495ED",  # Cornflower blue
#   "#7B68EE",  # Medium slate blue
#   "#191970",  # Midnight blue
#   "#1E90FF",  # Dodger blue
#   "#00BFFF",  # Deep sky blue
#   "#00CED1",  # Dark turquoise
#   "#4682B4",  # Steel blue
#   "#6495ED",  # Cornflower blue
#   "#87CEEB",  # Sky blue
#   "#87CEFA",  # Light sky blue
#   "#6A5ACD"   # Slate blue
# # )
# '#5072A7'
# '#4682B4'
# '#5B9BD5'
# '#5A9AD6'
# '#6CACE4'
# '#7399C6'
# '#7CA7D1'
# '#86BBDB'
# '#89CFF0'
# '#A4C3DB'
# 
# '#A32100'
# '#B22222'
# '#C3272B'
# '#CC3333'
# '#D14836'
# '#DB3A34'
# '#E34234'
# '#990000'
# '#3B7A57'
# '#4CAF50'
# '#5C8D40'
# '#6AAB67'
# '#73A657'
# '#7FAD70'
# '#8DB580'
# '#98C487'
# '#A2D39C'
# '#B2D2A4'

'#C0C0C0' (Silver)
'#D3D3D3' (Light Grey)
'#A9A9A9' (Dark Grey)
'#808080' (Grey)
'#696969' (Dim Grey)
'#708090' (Slate Grey)
'#2F4F4F' (Dark Slate Grey)

vari <- '#696969'
professional_colors <- c(vari,vari,vari,vari,vari)

# # Create bins for average prices
# denmark_municipalities$price_bin <- cut(
#   denmark_municipalities$average_price_sqrmeter,
#   breaks = c(-Inf, 10000, 20000, 30000, 40000, 50000, 60000, 70000, Inf),  # Adjusted breaks
#   labels = c("<10k", "10k-20k", "20k-30k", "30k-40k", "40k-50k", "50k-60k", "60k-70k", ">70k"),
#   include.lowest = TRUE
# )

denmark_municipalities$price_bin <- cut(
  denmark_municipalities$average_price_sqrmeter,
  breaks = c(-Inf, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, Inf),  # Adjusted breaks
  labels = c("<10k", "10k-15k", "15k-20k", "20k-25k", "25k-30k", "30k-35k",'35k-40k', "40k-45k",">45k"),
  include.lowest = TRUE
)

# factor - Define the levels in descending order
price_levels <- c(">45k", "40k-45k", "35k-40k", "30k-35k", "25k-30k", "20k-25k", "15k-20k", "10k-15k", "<10k")
# Factorize price_bin with specified levels
denmark_municipalities$price_bin <- factor(denmark_municipalities$price_bin, levels = price_levels)


# Define a color palette
library(RColorBrewer)
# color_palette <- c("lightgrey", brewer.pal(8, "YlOrBr"))
# color_palette <- c(rev(brewer.pal(9, "Spectral")))>
# Get the Spectral palette
# spectral_palette <- brewer.pal(9, "Spectral")
# # Reverse the order of colors in the palette
# reversed_spectral_palette <- spectral_palette[length(spectral_palette):1]
# # Combine with lightgrey at the end
# color_palette <- c(reversed_spectral_palette)
# color_palette <- c(rev(brewer.pal(9, "YlOrBr")))

color_palette <- c('#330066','#692A99','#B22222',rev(brewer.pal(6, "YlOrBr")))

# color_option_viridis <- "F"

# Plot the map with ggplot2
main_plot <- ggplot(data = denmark_municipalities) +
  geom_sf(aes(fill = price_bin), color = "black", size = 0.2) +
  # scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per\nsquare meter\n(in DKK)", face = "bold"), na.value = "grey50",direction = -1, labels = scales::comma) +
  scale_fill_manual(values = color_palette, name = "Price Bins", na.value = "grey50") +  # Use defined color palette
  theme_minimal() +
  theme(
    legend.position = "right",
    legend.title = element_text(size = 12,face = "bold"),
    legend.text = element_text(size = 12),
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 14),
    axis.title = element_text(size = 12), # Increase the size of axis titles
    axis.text = element_text(size = 8),   # Decrease the size of axis text
    # axis.ticks = element_blank(),
    axis.ticks.length = unit(0.15, "cm"),  # Set ticks length
    axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward
    # panel.grid = element_blank()
    panel.grid.major = element_line(color = "lightgray", size = 0.15),  # Add light major grid lines
    panel.grid.minor = element_blank()  # Hide minor grid lines
  ) +
  labs(
    # title = "Average Prices per Square Meter by Municipality in Denmark",
    # subtitle = "Prices are in Dansih krones",
    # caption = "Data Source: Calculation made by author",
    x = "Longitude",
    y = "Latitude"
  )

#### ADD THE POINTS
main_plot <- main_plot +
  geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city, shape = city), size = 3, stroke = 2.65) +
  scale_color_manual(values = professional_colors) +
  scale_shape_manual(values = c(16, 17, 21, 4, 15)) +  # Specify shapes
  theme(
    legend.title = element_text(size = 12,face = "bold")
  )+
  labs(
    color = "Five biggest cities\nin Denmark",
    shape = "Five biggest cities\nin Denmark"
  )


# Define the bounding box coordinates for the magnified area around Copenhagen
cph_xmin <- 12
cph_xmax <- 12.8
cph_ymin <- 55.5
cph_ymax <- 56

# Create the inset plot for the magnified area around Copenhagen
inset_plot_cph <- ggplot(data = denmark_municipalities) +
  geom_sf(aes(fill = price_bin), color = "black", size = 0.2,show.legend = FALSE) +
  # scale_fill_viridis_c(option = color_option_viridis, name = "Average Price (in millions)", na.value = "grey50", direction = -1, labels = scales::comma) +
  scale_fill_manual(values = color_palette, name = "Price Bins", na.value = "grey50") +  # Use defined color palette
  theme_minimal() +
  theme(
    axis.title = element_blank(),  # Remove axis titles
    axis.text = element_blank(),   # Remove axis labels
    axis.ticks = element_blank(),  # Remove axis ticks
    panel.grid = element_blank(),  # Remove panel grid
    # panel.border = element_blank() # Remove panel border
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  ) +
  coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax))
  # annotate("rect", xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax, color = "black", fill = NA)

# add the city points to the zoom plot
inset_plot_cph <- inset_plot_cph +
  geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city, shape = city), size = 2.5, stroke = 2, show.legend = FALSE) +
  scale_color_manual(values = professional_colors) +
  scale_shape_manual(values = c(16, 17, 4, 12, 15))   # Specify shapes



# Add the inset plot as an annotation to the main plot
inset_plot_cph <- main_plot +
  geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame
  annotation_custom(ggplotGrob(inset_plot_cph), xmin = cph_xmin*0.98, xmax = cph_xmax*1.21, ymin = cph_ymin*1.012, ymax = cph_ymax*1.034) + # the zoom plot position
  geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot
  annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow
  theme(
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  )

# Display the combined plot with cities using professional colors
inset_plot_cph

```


```{r}
path <- 'D:/Thesis/The_Thesis_paper/Thesis_latex/Figures/Housing_Data/test.png'
png(path, width = 2800, height = 2000, res = 300)
inset_plot_cph 
dev.off()
```
http://127.0.0.1:32585/chunk_output/1A9A0A8081fc76fc/77E1DCAD/cy6337w7ue0cr/000028.png?fixed_size=1

<!-- #### Plot price per square meter (municipality level) : -->

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all'} -->

<!-- ###################################### data prep -->

<!-- # read in shape file from GADM -->

<!-- denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp") -->

<!-- ``` -->

<!-- ```{r,message=FALSE, warning=FALSE, fig.width=10, fig.height=12} -->

<!-- # Drop rows where price_bin is "Missing" ---- Christiansø is not a municipality - only 98 municipalities -->

<!-- denmark_municipalities <- denmark_municipalities %>% -->

<!--   filter(NAME_2 != "Christiansø") -->

<!-- # create the new main dataset with only necessary columns -->

<!-- test_data <- data_filtered %>% -->

<!--   select("price","unit_living_space", "geo_longitude", "geo_latitude") -->

<!-- # calculate price per square meter -->

<!-- test_data$price_per_sqr_meter <- test_data$price/test_data$unit_living_space -->

<!-- # Convert data to sf object -->

<!-- data_sf <- st_as_sf(test_data, coords = c("geo_longitude", "geo_latitude"), crs = 4326) -->

<!-- # make sure both sets have the same coordinate reference system -->

<!-- denmark_municipalities <- st_transform(denmark_municipalities, crs = st_crs(data_sf)) -->

<!-- # do spatial join to associate points with municipalities -->

<!-- data_joined <- st_join(data_sf, denmark_municipalities, join = st_within) -->

<!-- # filter out >80000 dkk == 10400 euro -->

<!-- # data_joined <- data_joined[data_joined$price_per_sqr_meter<250000,] -->

<!-- # Calculate average price per square meter per municipality -->

<!-- average_prices <- data_joined %>% -->

<!--   group_by(NAME_2) %>% -->

<!--   summarize(average_price_sqrmeter = mean(price_per_sqr_meter, na.rm = TRUE))%>% -->

<!--   st_drop_geometry() -->

<!-- # Merge average prices back to the municipalities data -->

<!-- denmark_municipalities <- denmark_municipalities %>% -->

<!--   left_join(average_prices, by = "NAME_2") -->

<!-- #################################### the plot -->

<!-- # coordinates of biggest cities in Denmark -->

<!-- biggest_cities <- data.frame( -->

<!--   city = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"), -->

<!--   longitude = c(12.568337, 10.203921, 10.40237, 9.916664, 8.456197), -->

<!--   latitude = c(55.676098, 56.162939, 55.395941, 57.048, 55.476031) -->

<!-- ) -->

<!-- # Define professional colors -->

<!-- # professional_colors <- c("#2ca25f", "#99d8c9", "#e5f5e0", "#fd8d3c", "#e6550d") -->

<!-- # professional_colors <- c("#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3") -->

<!-- # professional_colors <- c("#3182bd", "#6baed6", "#9ecae1", "#c6dbef", "#eff3ff") -->

<!-- # professional_colors <- c("#8A9A5B", "#483C32", "#7B241C", "#3E517A", "#543005") -->

<!-- # professional_colors <- c("#943126", "#7B241C", "#7B241C", "#3E517A", "#543005") -->

<!-- # professional_colors <- c("#FF6666", "#FF1A1A", "#990000", "#FFB3B3", "#e6550d") -->

<!-- professional_colors <- c("#000000", "#A67f00", "#D3D3D3", "#3E517A", "#5D734E") -->

<!-- # # Create bins for average prices -->

<!-- # denmark_municipalities$price_bin <- cut( -->

<!-- #   denmark_municipalities$average_price_sqrmeter, -->

<!-- #   breaks = c(-Inf, 10000, 20000, 30000, 40000, 50000, 60000, 70000, Inf),  # Adjusted breaks -->

<!-- #   labels = c("<10k", "10k-20k", "20k-30k", "30k-40k", "40k-50k", "50k-60k", "60k-70k", ">70k"), -->

<!-- #   include.lowest = TRUE -->

<!-- # ) -->

<!-- # Define a color palette -->

<!-- # color_palette <- c("lightgrey", brewer.pal(8, "Blues")) -->

<!-- color_option_viridis <- "F" -->

<!-- # Plot the map with ggplot2 -->

<!-- main_plot <- ggplot(data = denmark_municipalities) + -->

<!--   geom_sf(aes(fill = average_price_sqrmeter), color = "black", size = 0.2) + -->

<!--   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n (filtered: 707.489 obs) \n", face = "bold"), na.value = "grey50", -->

<!--                        direction = -1, labels = scales::comma) + -->

<!--   theme_minimal() + -->

<!--   theme( -->

<!--     legend.position = "right", -->

<!--     legend.title = element_text(size = 12), -->

<!--     legend.text = element_text(size = 12), -->

<!--     plot.title = element_text(size = 16, face = "bold"), -->

<!--     plot.subtitle = element_text(size = 14), -->

<!--     axis.title = element_text(size = 12), # Increase the size of axis titles -->

<!--     axis.text = element_text(size = 8),   # Decrease the size of axis text -->

<!--     # axis.ticks = element_blank(), -->

<!--     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!--     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!--     # panel.grid = element_blank() -->

<!--     panel.grid.major = element_line(color = "lightgray", size = 0.15),  # Add light major grid lines -->

<!--     panel.grid.minor = element_blank()  # Hide minor grid lines -->

<!--   ) + -->

<!--   labs( -->

<!--     title = "Average Prices per Square Meter by Municipality in Denmark", -->

<!--     subtitle = "Prices are in Dansih krones", -->

<!--     caption = "Data Source: Calculation made by author", -->

<!--     x = "Longitude", -->

<!--     y = "Latitude" -->

<!--   ) -->

<!-- #### ADD THE POINTS -->

<!-- main_plot <- main_plot + -->

<!--   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5)+ #,shape = 4,stroke = 3.5) + -->

<!--   scale_color_manual(values = professional_colors) -->

<!-- # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- cph_xmin <- 12 -->

<!-- cph_xmax <- 12.8 -->

<!-- cph_ymin <- 55.5 -->

<!-- cph_ymax <- 56 -->

<!-- # Create the inset plot for the magnified area around Copenhagen -->

<!-- inset_plot_cph <- ggplot(data = denmark_municipalities) + -->

<!--   geom_sf(aes(fill = average_price_sqrmeter), color = "black", size = 0.2,show.legend = FALSE) + -->

<!--   scale_fill_viridis_c(option = color_option_viridis, name = "Average Price (in millions)", na.value = "grey50", -->

<!--                        direction = -1, labels = scales::comma) + -->

<!--   theme_minimal() + -->

<!--   theme( -->

<!--     axis.title = element_blank(),  # Remove axis titles -->

<!--     axis.text = element_blank(),   # Remove axis labels -->

<!--     axis.ticks = element_blank(),  # Remove axis ticks -->

<!--     panel.grid = element_blank(),  # Remove panel grid -->

<!--     # panel.border = element_blank() # Remove panel border -->

<!--     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!--   ) + -->

<!--   coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax)) -->

<!--   # annotate("rect", xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax, color = "black", fill = NA) -->

<!-- # add the city points to the zoom plot -->

<!-- inset_plot_cph <- inset_plot_cph + -->

<!--   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5, show.legend = FALSE)+ #,shape = 4,stroke = 3.5) + -->

<!--   scale_color_manual(values = professional_colors) -->

<!-- # Add the inset plot as an annotation to the main plot -->

<!-- inset_plot_cph <- main_plot + -->

<!--   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame -->

<!--   annotation_custom(ggplotGrob(inset_plot_cph), xmin = cph_xmin*1.0, xmax = cph_xmax*1.15, ymin = cph_ymin*1.009, ymax = cph_ymax*1.037) + # the zoom plot position -->

<!--   geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot -->

<!--   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!--   theme( -->

<!--     panel.border = element_rect(color = "black", fill = NA, size = 1), -->

<!--     plot.margin = margin(0, 0, 0, 0) -->

<!--   ) -->

<!-- # Display the combined plot with cities using professional colors -->

<!-- inset_plot_cph -->

<!-- ``` -->

## EPC data

::: para
There are two websites which offer open access to the EPC reports which are [sparenergi.dk](https://old.sparenergi.dk/forbruger/vaerktoejer/find-dit-energimaerke?utm_campaign=boligsiden&utm_medium=banner&utm_source=boligsiden&utm_content=8) and [boligejer.dk](https://boligejer.dk/).
The primary difference between the two sites it that sparenergi.dk delivers only the latest EPC report of a building to user, whereas boligejer.dk stores and provides access to all historical reports for buildings.
In addition, the Danish Energy Agency offers access to their EMO EPC database upon request.
To obtain the EPC data, the website boligejer.dk was chosen.
The reasons are threefold: first, there are less drawbacks when scraping the data; second, it gives access to both historic and latest EPC data for properties.
Lastly, it simplifies the process of merging with the housing data.

![Workflow diagram for EPC data](images/EPC_workflow_1000dpi.png){#fig-EPCworkflow .figure-top fig-align="center" width="100%" style="border: 2px solid silver;"}

Figure @fig-EPCworkflow shows the workflow of the data extraction process made to collect the EPC pdf files and extracting information from them.
Once the housing data is collected we utilize the ESR and municipality identification codes to search and download the pdf files from the website boligejer.dk.
During the data gathering process, it was observed that certain properties, particularly apartment buildings, had their EPC reports linked to the SFE (Samlet Fast Ejendom) code rather than the ESR code.
The SFE code is as an identification code for the entire buildings, whereas ESR code is specific to individual unit.
Similar to the ESR code, the SFE code is only unique in combination with the municipality code.
Consequently, to address this issue, we obtain the SFE codes for properties lacking EPC reports under their ESR codes by intercepting a specific HTTP GET request on the boligejer.dk website, where the SFE code of the dwelling unit is stored in a JSON file.Once obtained, we proceed in the same manner that we do with ESR codes.
After finishing our collection process of the files, we end up with 776.108 PDF files.

During the information extraction process we identify three major design differences in the reports over the period.
According to the data, the initial design in our sample, referred to as design 1, was used until around 2012, after which design 2 was introduced.
The most recent design, design 3, was adopted around the winter of 2021.
These designs not only differ in the design and layout but also in the type of information provided to the reader.

![Information Differences between EPC report designs](images/EPC_information_difference_by_designs_123_image.png){#fig-EPC_designs fig-align="center" width="65%" style="border: 2px solid silver;"}

Figure @fig-EPC_designs illustrates both the information we extract from each design and the differences between the designs in terms of the information provided.As shown in the figure, design 1 does not give potential energy label from profitable renovations.
Neither design 1 and 2 give standardized energy consumption in kWh.
Furthermore, design 3 does not include energy consumption saved from profitable renovations.
When it comes to the non-profitable renovations suggestions.
Moreover, non of the designs give estimations on the investment cost from implementing them.
Finally, design 3 does not give the amount of energy saved in source-specific units.

Majority of the information of interest is in text format for all EPC designs.
We extract the text using python and various libraries such as pyMuPDF and pdfplumber.
Once the text data is extracted we use regular expressions and pattern matching techniques in order to retrieve the relevant information from the text.
In design 2 we only use regular expressions as all necessary data in that design is represent in text format.
However, In design 3 all energy labels i.e. the registered EPC label, the potential EPC label after implementing profitable and non-profitable renovations, are in image format.
Moreover, In design 1 the registered EPC label is in image format but the potential energy label of building for implementing all renovation suggestions is in text format.
:::

### Extracting EPC labels {.unnumbered}

::: para
To extract the EPC labels in design 1 we train and run a optical character recognition (OCR) model to identify the registered EPC labels of buildings.
To train and run a OCR algorithm we used the library pytesseract which is a wrapper for Google's Tesseract-OCR Engine.
This is a open source tool developed by Google that converts images containing text to machine-readable text data.
The engine is pre-trained and employes advanced machine learning algorithms that can work out of the box for up to 100 languages.
We train the engine on 950 images to fine-tune the engine then we employ the Legact Tesseract model on design 1 pdf files.
In design 3, we used color matching to identify the labels by finding the unique RGB (Red, Green, Blue) code of the pixles of each EPC label image, we could determine both the current EPC label and the potential EPC label of the building after implementing either profitable or all renovations.
This approach was not used for design 1 because the images in those reports were designed in a way that made it too difficult to accurately identify the labels. 
Additionally, design 1 includes three minor layout changes over the time period that affected the positioning and the colors of the images, further complicating accurate label identification using color matching.
:::




### Standardizing energy variables {.unnumbered}

::: para
@fig-EPC_designs shows that the all the designs have some differences which impose certain challenges in making the data from each design comparable.
We address these differences in the following ways: first, we convert the source-specific energy consumption to a standardized energy consumption in kWh similar to design 3.
We achieve this by applying the calorific values for each energy sources that a building uses as outlined in the so-called EPC handbook for Denmark (Bekendtgørelse om Håndbog for Energikonsulenter) which is issued by the Danish Ministry of Climate, Energy, and Utilities (Klima-, Energi- og Forsyningsministeriet) [@klima-_energi-_og_forsyningsministeriet_bekendtgorelse_2021].
[Appendix 2](#appendix2) shows the calorific values used in this study.
Calorific value or heating value of a substance is a measure of how much energy is released for a specific amount of fuel is burned.
In the EPC handbook for Denmark the calorific value is expressed in kilowatt-hours per given unit of specified heat source, e.g. kWh/ton for wood fuels.
This metric allows us to compare different heating sources in the same unit i.e. kilowatt-hours.
It is worth noting that the calorific value is not a constant and it varies from time to time.
The value depends on several factors such as moisture and overall quality of the fuel.
As an example of the variation of the calorific value take natural gas as an example.
Natural gas primarily consists of methane, but it also contains other hydrocarbons such as ethane, propane and butane.
The calorific value is highly depended on the proportion of these components which may vary over time.
However, for simplicity, we will assume they are relatively constant during our sample period.
Next, we calculate the energy saved in source-specific units for design 3 by dividing the energy cost saved for each energy source that a building uses with the receptive prices stated in the reports.
Subsequently, we convert the values to kilo-watt hours using the same calorific values previously mentioned.
Finally, we use the conversion table @fig-conver to convert all the EPC labels for all different EPC schemes to the latest EPC scheme.
:::

### NLP: text classification {.unnumbered}

::: para
in relation to @wahlstrom_doing_2016 findings, home buyers might focus more on energy efficient systems rather then on energy efficiency indicators such as energy consumption.
Our data does account for the heating sources and certain energy systems but we do not account for green energy systems such as solar cells, solar heating or heat pumps in a building.
To account for this we utilize the technical description data that we take from the EPC reports.

The technical description is structured into predefined sub-chapters, each filled in with related descriptions made by the accredited experts conducting the reports.
These sub-chapters include sections on whether the building has or should have solar cells, solar heating, and heat pumps.
The issue, however, arises from the fact that the technical descriptions are written by different experts.
This applies also for the descriptions of the renovation suggestions.
:::

![Workflow diagram for building text classification models](images/TextClassification_workflow_Main_Image.png){#fig-TextClass .figure-top fig-align="center" width="100%" style="border: 2px solid silver;"}

::: para
What this means is that the text may vary significantly even though it conveys the same message.
Take for example the following three possible descriptions on heat pumps from the technical descriptions:

-   "Heat pumps are recommended to be installed"

-   "There are no heat pumps installed in the building. And this is a good choice because of reasons"

-   "Owners should think about installing heat pumps"

These three sentences express the same message in three different ways which is that the building does not have heat pumps installed.
This makes it difficult to accurately assess the entire sample to identify properties with installed heat pumps, solar cells or solar heating using only pattern matching with regular expressions.
Instead, we address this challenge by performing a Natural Language Processing (NLP) task called text classification.
Figure @fig-TextClass illustrates the workflow of building and training the text classification models.

We define three independent binary classification problems each for different green energy system i.e. one for predicting if building has solar cells, another for solar heating and the third for heat pumps.
In this sup-chapter, the term "model" will refer to a combination of the classifier, feature engineering method and sampling technique used.
Over the course of the whole process, for each classification problem, we will compare three different classifiers in combination with 4 different sampling methods, three of which account for sample imbalance, and 5 different feature engineering methods.
However, there are few exceptions with these combinations.
Naive Bayes doesn't run on negative values and both embedding have negative and positive input features.
Therefore, we will not use embeddings when using Naive bayes as a classifier.
Additionally, we only run SMOTE sampling method on a selected combination of classifiers and feature engineering methods because some combinations are to heavy to compute.
All-in-all we end up making 150 different models, 50 models for each classification problem.

All classification models for each of the three problems go through the same procedure as shown in @fig-TextClass.
We begin by splitting the technical description text for relevant chapters about the three heating systems.
Then we create unique training data for each classification problem, either manually or by analyzing sentence patterns using NLP libraries such as Spacy and NLTK in python.
Next we move on to pre-processing the text by converting the text to lower case and removing certain stop words using pre-defined stop-word lists for danish language, provided by NLTK library.
Our final step in the pre-processing phase is to tokenize and lemmatize the text using Spacy library.
Tokenization involves splitting a sentence or a paragraph, into words or tokens.
According to @jurafsky_speech_2024, lemmatization is defined as:

<p style="padding-left: 50px; padding-right: 50px;">

**"the task of determining that two words have the same root, despite their surface differences. For example, the words sang, sung, and sings are forms of the verb sing. The word sing is the common lemma of these words, and a lemmatizer maps from all of these to sing."** [@jurafsky_speech_2024, p. 5]

</p>

Ultimately, the purpose of lemmatizing the text is to standardize word forms to make it more straightforward to analyse and compare text.
:::

#### Feature extraction process: {.unnumbered}

::: para
Following the pre-processing step, we move to the feature engineering step where we transform the text into numerical values in order for the classifiers to quantify the data.
There are many different ways to transform text to numerical values, however, there is no one-size-fits-all consensus on which method to use.
The same applies to choosing the classifier to predict the labels.
It is a good practice to use different combination of methods and determine the best approach by optimizing for performance metrics like accuracy, recall and precision, or a combination of these metrics, as we will elaborate on later in this chapter.
For the feature engineering stage we will use 5 different technique which are bag of words, term frequency-inverse document frequency (TF-IDF) with unigram (1-grams) at word level, TF-IDF with bi-grams (2-grams) at word level, pre-trained word2vec embeddings and pre-trained fasttext embedding for danish language.

Bag of words transforms text to numerical vector were each value represents the frequency of each word in the document.
TF-IDF is a method that measures the importance of a term in a document relative to the collection of terms in the document.
To compute the TF-IDF we take the frequency of a term in a document e.g. in a paragraph and divide with the total number of terms in the paragraph.
The term can be defined as word or character.
In this study we will only be using word level TF-IDF due to computation performance.
Moreover, we use TF-IDF on both uni-gram and bi-gram.
With uni-gram the term is defined as a single word but with bi-gram we use a combination of 2 words.

We will also use pre-trained word2vec and fasttext embedding models for danish language.
The main distinction between these two pre-trained embeddings and the other methods mentioned earlier is that these embeddings contain vectors with semantic attribute.
Word embeddings map words to points in multidimensional semantic space and are derived from the distribution patterns of surrounding words.
The word2vec model that we use was compiled by Nicolai Hartvig Sørensen and uses the skip-gram algorithm with a window spanning 5 words around the central word.
The model was trained on data consisting of more than 1 billion words, resulting in 500 dimensional word embedding vectors (@sorensen_word2vec-model_nodate).
The pre-trained fasttext model was created by @grave2018learning The model was trained on data from common crawl and wikipedia, leveraging the Continuous Bag of Words (CBOW) algorithm and integrating character level n-grams of length 5 to generate 300 dimensional vectors.
:::

#### classifiers: {.unnumbered}

::: para
The next step is choosing the classifier to predict the labels.
There are many different machine learning algorithms that can be used as a classifier, however, many differ in accuracy or precision.
In this study we will use Naïve Bayes, logistic regression and linear support vector machines (SVM).
We chose Naive Bayes and logistic regression because they are simplistic, efficient, they offer clear interpretability because both can be interpreted in terms of probabilities and they are not computationally complex.
With that being said, these models have also shown to either out perform or maintain similar level of accuracy compared to more complex models (see e.g. studies by @shah_comparative_2020).
Additionally, we will also use a relatively more complex model called support vector machines (SVM).
SVM is a popular choice and has shown great results (see e.g. studies by @sun_strategies_2009 and @wahba_comparison_2022).
All classifiers in this study were implemented using the Scikit-learn library in python.
for more details about the classifiers see [Appendix 2](#appendix2).
:::

#### Training data & class imbalance: {.unnumbered}

::: para

![Observations from the training data per category for each classification problem](images/training_data_table.png){#fig-NLP_traindata .fig-align-center width="50%" style="border: 2px solid silver;"} 

Figure @fig-NLP_traindata illustrates the number of observations for each class in the training data, indicating that the data is relatively imbalanced.
In a binary classification setting, a dataset is considered unbalanced if there are significantly less observations in one class compared to the other class.
Many industries, including financial management, frequently deal with imbalanced data sets e.g. for fraud detection.
Therefore, imbalanced data is not unusual.
However, many of the machine learning algorithms used for classification problems are based on the assumption that both labels have similar mis-classifiaction costs.
Therefore predicted labels are assumed to come from a balanced distribution of labels.
This can lead to the classifier used becoming biased towards the majority class and give poor predictions for the minority class.

To account for this we will utilize 3 common ways which are over-sampling method, under-sampling method and Synthetic Minority Over-sampling Technique (SMOTE).
Over-sampling method involves randomly picking observations from the minority class and duplicating them until the observations between the two classes are balanced.
Similar to over-sampling, under-sampling randomly removes observations in the majority class until both classes have the same amount of observations.
Finally, The SMOTE method is a over-sampling technique where we create synthetic observations using the features from observations using the features from observations in the minority class.
This is done by selecting a random observations in the minority class and identifying k nearest neighboring observations.
The neighbors are other observations from the minority class which are closes to the observation selected in terms of feature values.
We select a random number between 0 and 1 as well as a random neighbor.
Then we calculate the difference between the neighbor and the observations selected and multiply that with the random number.
Finally, we add the result to the selected observation, making the synthetic observation a blend of the neighboring observation and the selected observation.
In this study when using SMOTE we will be using 5 neighbors for each selected observations.
All sampling methods are applied within the cross-validation process on they folds that are treated as the training data.
:::

#### Model training and valuation : cross validation and grid search {.unnumbered}

::: para
During the training process we use 5-fold cross-validation and GridSearchCV function from scikit-learn library in Python to optimize and fine-tune the models.Hyperparameters are configurations that are used to adjust the optimization of a classification algorithm.
In Naive Bayes classifier we tune different levels of the hyperparameter called alpha, which is a laplace smoothing parameter to handle zero probabilities.
In logistic regression classifier we tune different levels of the hyperparameter C which is the inverse of the regularization strength.
The hyperparameter C is a regularization method to prevent the model from overfitting by adding a penalty to the model's complexity.
Similar we tune the hyperparameter C in the SVM classifier.

During the training process, GridSearchCV conducts a search over specified hyperparameter values.
Each hyperparameter configuration is validated via 5-fold cross-validation, where the labelled data is randomly split into five groups.
Then one group is held as a hold out group and the model is trained on the remaining groups which we then use to predict the labels on the hold out group.
This process is repeated five times, ensuring each group serves as a validation set once.
Finally, the best hyperparameter combination is identified based on the highest average precision value across the five folds.
After training all 150 models and determining their best hyperparameters, we evaluate their performance based on accuracy, recall, precision, and F1 score.
Subsequently, we select the models for each classification problem by considering both the highest accuracy and achieving the best balance between recall and precision.

Accuracy represents the ratio between correctly predicted observations and the total number of observations.
The mathematical expression for accuracy is:

$$
Accuracy = \frac{TP+TN}{TP+TN+FP+FN}
$$ where TP denotes True positive observations, TN denotes true negatives observations, while FP and FN represent False positives and false negatives observations, respectively.

Recall measures the ratio between correctly predicted positive observations to the total number of positive observations.
It measures how well the model is able to correctly identify positive observations.
By maximizing recall we want to capture as many positive observations as possible.
The mathematical expression for recall is: $$
Recall = \frac{TP}{TP+FN}
$$

Precision represents the ratio between the correctly predicted observations and all observations identified as positive.
In other words, it tells us how many of the observations predicted as positive labels are actually positive.
By maximizing Precision we focus on minimizing false positives.
The mathematical expression for precision is: $$
Precision = \frac{TP}{TP+FP}
$$

Finally, F1 score is the harmonic mean of recall and precision.
It gives a balanced evaluation of a classifier's performance by accounting for both false positives and false negatives.

After running all the steps using different model specification for all the three classification problems we find that logistic regression and SVM have the best performance in terms of both accuracy and balance between recall and precision.
The differences in F1 score and accuracy between the two classifiers is marginal, regardless of the feature engineering methods or sampling approach used for these classifiers.The performance differences between the two classifiers using different sampling techniques are also marginal.
Interestingly, models that use bi-gram TF-IDF at the word level outperform all other feature extraction methods in terms of recall, precision, and accuracy, including pre-trained embeddings.
The text in all three classification problems tends to be relatively small and straightforward, favoring the simplicity and interpretability of TF-IDF.
While pre-trained embeddings are effective at capturing semantic connections, they may not provide significant benefits for the simple text used in this study.
See [Appendix 2](#appendix2) for the more detail on the results from the text classification models.

:::

#### Text classification: final result {.unnumbered}

::: para
By applying the Occam's razor principle, we select logistic regression as the classifier for all three classification problems, employing bi-gram TF-IDF at the word level as the feature engineering method and opting not to use any sampling method.

<p style="padding-left: 50px; padding-right: 50px;">

*Occam's razor principle, which states that "plurality should not be posited without necessity."* [@brian_duignan_occams_2024, para.1],

</p>

suggests that when dealing with competing hypotheses, the one with fewer assumptions should be preferred.
In simpler terms, it implies that the simplest explanation is usually the correct one.

We chose logistic regression for its efficiency, interpretability, and computational efficiency.
Furthermore, logistic regression provides probabilities of the outcome, allowing us to conduct robustness tests by varying threshold levels from the main model.
The main model systematically uses the threshold of 0.5 to classify observations into one of the two classes.
However, we will use 0.75 as our main threshold.
If the predicted probability is greater than or equal to 0.95 (i.e. 95%), the observation is assigned to the positive class; otherwise, it is classifies to the negative class.
Moreover, we use bi-gram TF-IDF word level method as it out performs all other methods.

Finally, we choose not to use any sampling methods.
as stated earlier sampling methods account for class imbalances and help detect minority class.
However, our result indicate no significant improvement from using sampling methods.
Moreover, both over-sampling and SMOTE methods used in this study do not really add any valuable information.
Furthermore, when using SMOTE there is a risk that the synthetic observations do not resemble the minority class.
Additionally, under-sampling method comes at the great cost of loosing valuable information.
In relation to that, @sun_strategies_2009 compared various number of different sampling methods to address imbalanced data.
They find that sampling methods did not improve the performance of their classifier and they argue that one should focus on setting an appropriate threshold rather then using sampling methods.
Details on the final text classification models used and the number of observations per category for each classification problem is shown in figure below @fig-summaryTextclass.
:::

```{r, message=FALSE, warning=FALSE, fig.width=4, fig.height=6}
#| label: fig-summaryTextclass
#| fig-cap: Summary statistics - Main Text classifiaction models 


columns_to_summarize <- c("Solarceller_pred_and_actual_85percent_threshold",
                          "Solvarme_pred_and_actual_85percent_threshold",
                          "Varmepumpe_pred_and_actual_85percent_threshold")

# make the dataframe for the summary
summary_table_TEXTclassification <- data.frame(Variable = character(),
                            True = integer(),
                            False = integer(),
                            stringsAsFactors = FALSE)

# Loop through each column and get frequency per category 
for (col in columns_to_summarize) {
  true_count <- sum(data[[col]] == 1, na.rm = TRUE)
  false_count <- sum(data[[col]] == 0, na.rm = TRUE)
  
  if (col == "Varmepumpe_pred_and_actual_85percent_threshold") {
    name <- "Heat pump exists (85% threshold):"
  } else if (col == "Solarceller_pred_and_actual_85percent_threshold") {
    name <- "Solar cells exists (85% threshold):"
  } else if (col == "Solvarme_pred_and_actual_85percent_threshold") {
    name <- "Solar heating exists (85% threshold):"
  }
  # print(paste("Column:", col, "Name:", name))
  summary_table_TEXTclassification <- rbind(summary_table_TEXTclassification, data.frame(Variable = name, True = true_count, False = false_count))
}

############## add characteristics of the models and their performance metrics

# add classifier
summary_table_TEXTclassification$Classifier <- c("Logistic Regression","Logistic Regression","Logistic Regression")
# add sampling method
summary_table_TEXTclassification$Feature_engineering <- c('TF-IDF bi-gram word level','TF-IDF bi-gram word level','TF-IDF bi-gram word level')
# add feature enginearing method
summary_table_TEXTclassification$Sampling_method <- c("No sampling","No sampling","No sampling")
# add recall
summary_table_TEXTclassification$Recall <- c(0.9845, 0.9564, 0.9700)
# add precision
summary_table_TEXTclassification$Precision <- c(0.9861, 0.9797, 0.9856)
# add f1 score
summary_table_TEXTclassification$F1_score <- c(0.9853, 0.9679, 0.9787)
# add accuracy
summary_table_TEXTclassification$Accuracy <- c(0.9881, 0.9936, 0.9947)

######################### make the table 

# Print the summary table
library(knitr)
library(kableExtra)

# Print the dataframe as a table
kable(summary_table_TEXTclassification, "html") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  column_spec(1, bold = TRUE)  # Bold the first column (Variable)
```

### EPC data: Summary statistics

::: {.callout-caution collapse="true"}
## Result in R - continous variables
```{r, message=FALSE, warning=FALSE}
#| label: fig-summaryNumeric_EPC
#| fig-cap: Summary statistics


data$EPC_D123_Feature_profit_renovations_total_cost_savings_1000dkk <- data$EPC_D123_Feature_profit_renovations_total_cost_savings/1000
data$EPC_D123_Feature_other_renovations_total_cost_savings_1000dkk <- data$EPC_D123_Feature_other_renovations_total_cost_savings/1000
data$EPC_D123_Feature_profit_renovations_total_investment_cost_10000dkk <- data$EPC_D123_Feature_profit_renovations_total_investment_cost/10000

suppressWarnings({

  selected_vars <- c(
    # continous variables:
    "EPC_D123_Total_Heating_Demand_in_kWh_Normalized_AdjustedForApartments", 
    "EPC_D123_Feature_Total_Annual_Energy_cost_digit_AdjustedForApartments",
    # 'EPC_D123_Feature_Total_nr_suggestions_profit_and_other_suggestions',
    
    "EPC_D123_Total_energy_saved_from_profit_renovation_Normalized_in_kWh", 
    # 'EPC_D123_Feature_profit_renovations_total_cost_savings',
    # "EPC_D123_Feature_other_renovations_total_cost_savings",
    'EPC_D123_Feature_profit_renovations_total_cost_savings_1000dkk',
    'EPC_D123_Feature_other_renovations_total_cost_savings_1000dkk',
    
    'EPC_D123_Feature_profit_renovations_total_investment_cost_10000dkk',
    "EPC_D123_Total_energy_cost_saved_allrenovations"  
    
  )

  test <- data %>%
    select(selected_vars)
  
  st(test, numformat = formatfunc(big.mark = ','), title = "Summary statistics : EPC data - continous variables")
  
})
```
:::


```{r, echo=FALSE, results='hide',fig.keep='all'}
# Remove variables to free space from above chunk
rm(
   selected_vars ,
   test 
)
# Trigger garbage collection to free up memory
gc()

```


::: {.callout-caution collapse="true"}
## Result in R - categorical variables
```{r, message=FALSE, warning=FALSE}
#| label: fig-summaryCategorical_EPC
#| fig-cap: Summary statistics

suppressWarnings({
  
  selected_vars <- c(
    #categorical variables: 
    "EPC_energy_sources_factors_15levels",
    "EPC_D123_Registered_energy_label",
    "EPC_D123_energy_label_all_reno",
    "EPC_D123_energy_label_profit_reno",
    'EPC_energy_sources_factors_15levels',
    "EPC_number_of_energy_sources_for_heat_used",
    'EPC_D123_LABEL_JUMP_current_to_allreno',
    
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation',
    'EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating'
    )
  
  test <- data %>%
    select(selected_vars)
  
  test$EPC_D123_LABEL_JUMP_current_to_allreno <- factor(test$EPC_D123_LABEL_JUMP_current_to_allreno)
  test$EPC_number_of_energy_sources_for_heat_used <- factor(test$EPC_number_of_energy_sources_for_heat_used)
  test$EPC_energy_sources_factors_15levels <- factor(data$EPC_energy_sources_factors_15levels)
  test$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label)
  test$EPC_D123_energy_label_all_reno <- factor(data$EPC_D123_energy_label_all_reno)
  test$EPC_D123_energy_label_profit_reno <- factor(data$EPC_D123_energy_label_profit_reno)
  test$EPC_energy_sources_factors_15levels <- factor(data$EPC_energy_sources_factors_15levels)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation)
  test$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating)
  
  st(test, title = "Summary statistics : EPC data - categorical variables")
})

```

```{r, echo=FALSE, results='hide',fig.keep='all'}

# Remove variables to free space from above chunk
rm(
   selected_vars ,
   test 
)
# Trigger garbage collection to free up memory
gc()

```
:::

![EPC Data summary statistic](images/plots_figures_Datasummary_literature/EPC_data_summaryStatistic.jpeg){.figure-top fig-align="center" width="75%" }

### EPC data: Visualization

#### Most frequent energy lable 4x4 km grid plot full sample {.unnumbered}

![Most frequent EPC label at 4x4 km grid level](images/grid_plots/4X4km_gridMap_EPC_labels.PNG){fig-align="center"}

```{r, echo=FALSE, results='hide',fig.keep='all'}

library(sf)

library(dplyr)

library(ggspatial) # for the north arrow

###################################### data prep

#-------------------------------------------- read in shape file from GADM

denmark_country <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_0.shp")

# Transform to a projected CRS  so its in km units

denmark_shapefile_utm <- st_transform(denmark_country, crs = 25832)

### --- do the same for the municipality borders

### Denmark municipalicty borders level 2

denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp")

# Transform to a projected CRS  so its in km units

denmark_municipalities <- st_transform(denmark_municipalities, crs = 4326)

```

```{r,message=FALSE, warning=FALSE,fig.width=10, fig.height=10}

#| label: fig-epcgrid

#| fig-cap: Most Frequent EPC label across 4x4km grids

# ==================================================================================

################################ FISH NET PLOT

# ==================================================================================

data$price_per_squareMeter <- data$price / data$unit_living_space

# ----------------------------------- set up housing data

# create the new main dataset with only necessary columns

price_5kmGrid <- data %>%

  select("price_per_squareMeter",

         "EPC_D123_Registered_energy_label",

         "building_year_built",

         # "advert_Total_days_on_market"

         "geo_longitude",

         "geo_latitude")

# energy label : current

set_levels <- c("A2020","A2015", "A2010", "B","C","D","E","F","G")

price_5kmGrid$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = set_levels)

# Convert data to sf object to 25832 the same as denmark shapefile

price_5kmGrid <- st_as_sf(price_5kmGrid, coords = c("geo_longitude", "geo_latitude"), crs = 4326)

# Transform to a projected CRS  so its in km units

price_5kmGrid <- st_transform(price_5kmGrid, crs = 25832)

# ---------------------------------- make the net

# Create a 4km x 4km grid over the bounding box of Denmark --- cellsize in meters

grid <- st_make_grid(denmark_shapefile_utm, cellsize = 4000, what = "polygons")

# Clip the grid to the boundaries of Denmark

grid_clipped <- st_intersection(grid, denmark_shapefile_utm)

# Convert grid to an sf object

grid_sf <- st_sf(grid_id = 1:length(grid_clipped), geometry = st_sfc(grid_clipped))

# ---------------------------------- calculate avg. price per square meter per 1km grid

# spatial join - set each point to relevant grid

joined <- st_join(price_5kmGrid, grid_sf, join = st_intersects)

# # Aggregate average price per square meter by grid cell

# average_price <- joined %>%

#   group_by(grid_id) %>%

#   summarize(avg_price = mean(price_per_squareMeter, na.rm = TRUE))

# Aggregate most frequent EPC label per grid cell

most_frequent_label <- joined %>%

  group_by(grid_id) %>%

  summarize(most_freq_label = names(sort(table(EPC_D123_Registered_energy_label), decreasing = TRUE))[1])

# Convert the sf object to a data frame

merged_data <- st_join(grid_sf, most_frequent_label, by = "grid_id", left = TRUE)

############################################################################################################

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  ----- plot :

## ====> convert the merge_Data back to the simple CRS system i.e. the 4326

# transform the main data back to CRS: 4326 - to make it easy to place stuff on map

merged_data_4326 <- st_transform(merged_data, crs = 4326)

color_option_viridis <- "F"

# professional_colors <- c("#2ECC71", "#F1C40F", "#FFFFFF", "#3498DB", "#000000")

################## set the area plot

# # Define custom colors for EPC labels

# # custom_colors <- c(

#   "A2020" = "#006400",  # Dark Green

#   "A2015" = "#228B22",  # Forest Green

#   "A2010" = "#7CFC00",  # Lawn Green

#   "B"     = "#ADFF2F",  # Green Yellow

#   "C"     = "#FFD700",  # Gold

#   "D"     = "#FF8C00",  # Dark Orange

#   "E"     = "#FFA500",  # Orange

#   "F"     = "#8B0000",  # Dark Red

#   "G"     = "#800080"   # Purple

# )

custom_colors <- c(

  "A2020" = "#228B22",

  "A2015" = "#00AD4C",
  
  "A2010" = "#9ACD42",

  "B" = "#98FA88",

  "C" = "#FFD700",

  "D" = "#FFA500",

  "E" = "#FF6F00",

  "F" = "#990000",

  "G" = "#7A599E"

)

# '#3CB371' (Medium Sea Green)

# '#66CDAA' (Medium Aquamarine)

# '#98FB98' (Pale Green)

# '#7CFC00' (Lawn Green)

# '#8FBC8F' (Dark Sea Green)

# '#9ACD32' (Yellow Green)

# Plotting the grid with most frequent EPC labels

main_plot <- ggplot() +

  geom_sf(data = merged_data_4326, aes(fill = most_freq_label), color = NA) +

  geom_sf(data = denmark_municipalities, fill = NA, color = "white") +

  scale_fill_manual(values = custom_colors,

                      name = "EPC Label",

                      na.value = "#4F4F4F",

                      breaks = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G",NA),
                      
                      labels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G", "No obs.") # Adding custom label for NA
                    ) +

  theme_minimal() +

  theme(

    legend.position = "right",

    legend.title = element_text(size = 12, face = "bold"),

    legend.text = element_text(size = 12),

    plot.title = element_text(size = 16, face = "bold"),

    plot.subtitle = element_text(size = 14),

    axis.title = element_text(size = 12), # Increase the size of axis titles

    axis.text = element_text(size = 8),   # Decrease the size of axis text

    axis.ticks.length = unit(0.15, "cm"),  # Set ticks length

    axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward

    panel.grid.major = element_blank(), # Remove major grid lines

    panel.grid.minor = element_blank(),  # Remove minor grid lines

    axis.line = element_line(color = "black", size = 0.3)

  ) +

  labs(

    # title = "Most Frequent EPC Labels at 5x5km Grid Level in Denmark",

    # subtitle = "Full dataset: 750672 obs.",

    # caption = "Data Source: Calculation made by author",

    x = "Longitude",

    y = "Latitude"

  )

# Define the bounding box coordinates for the magnified area around Copenhagen

cph_xmin <- 12

cph_xmax <- 12.8

cph_ymin <- 55.5

cph_ymax <- 56

# coordinates of biggest 5 cities in Denmark

biggest_cities <- data.frame(

  city = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"),

  longitude = c(12.568337, 10.203921, 10.40237, 9.916664, 8.456197),

  latitude = c(55.676098, 56.162939, 55.395941, 57.048, 55.476031)

)

# Create the inset plot for the magnified area around Copenhagen

inset_plot_cph <- ggplot() +

  geom_sf(data = merged_data_4326, aes(fill = most_freq_label), color = NA) +

  geom_sf(data = denmark_municipalities, fill = NA, color = "white") +

  scale_fill_manual(values = custom_colors,

                        name = "EPC Label",

                        na.value = "#4F4F4F",

                        breaks = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G","NA")) +  theme_minimal() +

  theme(

    axis.title = element_blank(),  # Remove axis titles

    axis.text = element_blank(),   # Remove axis labels

    axis.ticks = element_blank(),  # Remove axis ticks

    panel.grid = element_blank(),  # Remove panel grid

    # panel.border = element_blank() # Remove panel border

    panel.border = element_rect(color = "black", fill = NA, size = 1),

    legend.position = "none"      # Remove legend

  )+

  coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax))

# add the city points to the zoom plot

# inset_plot_cph <- inset_plot_cph +

#   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5, show.legend = FALSE)+ #,shape = 4,stroke = 3.5) +

#   scale_color_manual(values = professional_colors)

# Add the inset plot as an annotation to the main plot

inset_plot_cph <- main_plot +

  geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame

  annotation_custom(ggplotGrob(inset_plot_cph), xmin = cph_xmin*1.0, xmax = cph_xmax*1.15, ymin = cph_ymin*1.009, ymax = cph_ymax*1.037) + # the zoom plot position

  geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot

  annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow

  theme(

    panel.border = element_rect(color = "black", fill = NA, size = 1)

  )

# Display the combined plot with cities using professional colors

inset_plot_cph

# '#2F4F4F' (Dark Slate Grey)

# '#4F4F4F' (Dark Grey)

# '#696969' (Dim Grey)

# '#808080' (Grey)

# '#A9A9A9' (Dark Gray)

# '#2F2F2F' (Darker Grey)

# '#1C1C1C' (Very Dark Grey)

# '#0D0D0D' (Almost Black Grey)

# '#1A1A1A' (Charcoal Grey)

# '#333333' (Jet Grey)

```

```{r}
path <- 'D:/Thesis/The_Thesis_paper/Thesis_latex/Figures/EPC_data/EPC_labels_4x4km_grid.png'
png(path, width = 2800, height = 2000, res = 300)
inset_plot_cph
dev.off()
```





```{r, echo=FALSE, results='hide',fig.keep='all'}

# Remove variables to free space from above chunk

rm(inset_plot_cph,

   inset_plot_cph,

   biggest_cities,

   main_plot,

   merged_data,

   most_frequent_label,

   joined,

   grid_sf,

   grid_clipped,

   grid

   )

# Trigger garbage collection to free up memory

gc()

```


#### EPC labels : sample vs. population{.unnumbered}

The population data is taken from [Emoweb.dk](https://emoweb.dk/emostat) website and its the total number of EPC reports made in Denmark from 2010 to 2023.

```{r ,fig.align='center', message=FALSE, warning=FALSE,fig.width=10, fig.height=8}
#| label: fig-epcSamplePopulation
#| fig-cap: Number of EPC reports made in denmark from 2010 to 2023 and our sample across EPC labels. 



# Install and load required packages
# install.packages("ggpattern")
library(ggplot2)
library(dplyr)
library(scales)
library(ggimage)
library(ggpattern)

#taken from : https://emoweb.dk/emostat
# (2024 to 2006) - 2024-2011-2010-2008-2007-2006
# ---------------------------------------------
#A2020 = 17609 - 814 - 0 - 0 - 0 - 0              = 16795
#A2015 = 62883 -2297 - 0 - 0 - 0 - 0              = 60586
#A2010 = 42096 - 1458 -765 - 0 - 174 - 33         = 39666
#B = 82809 - 3463 - 5444 - 4608 - 2249 - 268      = 66777
#C = 268725 - 10025 - 8146 - 7447 - 7676 - 1395   = 234036
#D = 289862 - 7365 - 11799 - 10101 - 11399 - 2123 = 247075 
#E = 161288 - 2946 - 9337 - 8056 - 9059 - 2024    = 129866
#F = 99486 - 1335 - 7818 - 6564 - 7511 - 1874     = 74384 
#G = 87147 - 676 - 7533 - 7058 - 8723 - 2775      = 60382


# Population values
population_values <- data.frame(
  label = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"),
  count = c(16795,60586,39666,66777,234036,247075 ,129866,74384 ,60382)
)


# Count only the unique EPC reports per label
sample_counts <- data %>%
  distinct(EPC_D123_UNIQUE_EPC_REPORT_ID_NUMBER, .keep_all = TRUE) %>%
  count(EPC_D123_Registered_energy_label) %>%
  rename(label = EPC_D123_Registered_energy_label, count = n) %>%
  mutate(source = "Sample")


# Combine the data
combined_data <- bind_rows(sample_counts, population_values)
# fill na in source with "population"
combined_data <- combined_data %>%
  mutate(source = if_else(is.na(source), "Population", source))


# Ensure label is treated as a factor with the correct order
combined_data$label <- factor(combined_data$label, 
                              levels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"))


# Create a dataframe for the images of the labels
images_data <- data.frame(
  label = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"),
  image = paste0("images/epc_labels/", c("a2020.png", "a2015.png", "a2010.png", "b.png", "c.png", "d.png", "e.png", "f.png", "g.png"))
)



'#C2B280'
'#D2B48C'
'#E3C565'
'#EDC9AF'
'#F4A460'
'#5B8EA3'
'#537791'
'#486581'
'#3F5770'
'#2D3E4E'
'#A3BACC'
'#8FA6B8'
'#7D92A3'
'#6B7E8E'
'#5A6B7A'

# define the colors for the data sources
custom_colors <- c(
  "Sample" = "#3F5770",  
  "Population" = "#D3D3D1"
)




# Create the side-by-side bar plot with patterns
side_by_side_plot <- ggplot(combined_data, aes(x = label, y = count, fill = source, pattern = source)) +
  geom_bar_pattern(stat = "identity", position = position_dodge(width = 0.9), 
                   pattern_density = 0.1,
                   pattern_spacing = 0.02,
                   pattern_fill = "black",
                   pattern_angle = 45,
                   color = "white") +
  # scale_fill_manual(values = custom_colors) +
  scale_fill_manual(values = custom_colors, 
                  name = "Source", # Change the legend title
                  labels = c("Population", "Our Sample")) + # Change the legend labels
  scale_pattern_manual(values = c(Sample = "none", Population = "stripe")) +
  scale_y_continuous(labels = scales::comma_format(scale = 1 / 1000, suffix = "K"), 
                     breaks = seq(0, 300000, by = 30000)) +  # Adjusting breaks
  labs(
    # title = "Total EPC reports made \n in Denmark between 2010-2023 \n campared to our sample ",
    x = "Energy Label",
    y = "Count (in thousands)",
    fill = "Source",
    pattern = "Source"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 12, face = "bold"),  # Bold axis titles
    axis.text = element_text(size = 10),
    axis.line = element_line(color = "black"),  # Set black lines on x and y axis
    axis.line.x = element_blank(),  # Remove x-axis line
    axis.ticks = element_line(color = "black"),  # Set black tick marks
    axis.ticks.length = unit(0.2, "cm"),  # Set tick mark length
    axis.ticks.margin = unit(0.5, "cm"),  # Set margin between ticks and axis line
    panel.grid.major.x = element_blank(),  # Remove grid lines for x-axis
    panel.grid.minor.x = element_blank(),  # Remove minor grid lines for x-axis
    panel.grid.major.y = element_line(color = "grey", linewidth = 0.3),  # Set black grid lines for y-axis
    panel.grid.minor.y = element_blank(),  # Remove minor grid lines for y-axis
    legend.title = element_text(size = 12, face = "bold")  
  ) +
  guides(
    fill = guide_legend(override.aes = list(pattern = c("stripe","none"))), # make sure that the stripes show in the ledger !!!
    pattern = "none"
  )

# Add images to the x-axis
side_by_side_plot <- side_by_side_plot +
  geom_image(data = images_data, aes(x = label, y = -15000, image = image), size = 0.08, by = "width", inherit.aes = FALSE) +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())

# Print the plot
print(side_by_side_plot)
```

```{r}
path <- 'D:/Thesis/The_Thesis_paper/Thesis_latex/Figures/EPC_data/EPC_population_vs_sample.png'
png(path, width = 2800, height = 2000, res = 350)
side_by_side_plot
dev.off()
```





#### EPC labels v.s. property Age{.unnumbered}

```{r,fig.align='center', message=FALSE, warning=FALSE,fig.width=10, fig.height=8}

# Define the desired order for building_year_built_periodic_bins
desired_order <- c("below_1890", "1890-1930", "1931-1950", "1951-1960", 
                   "1961-1972", "1973-1978", "1979-1998", "1999-2006", 
                   "2007-2013", "2014-2023")

# Convert the variable to a factor with the specified levels in reverse order
data$building_year_built_periodic_bins <- factor(data$building_year_built_periodic_bins, levels = desired_order)

# factor labels
epc_order <- c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G")
epc_order <- c("G", "F", "E", "D", "C", "B", "A2010", "A2015", "A2020")
data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = epc_order)

# Calculate the proportions
data_prop <- data %>%
  group_by(building_year_built_periodic_bins, EPC_D123_Registered_energy_label) %>%
  summarise(count = n()) %>%
  mutate(proportion = count / sum(count))

epc_colors <- c(
  "A2020" = "#007344",
  "A2015" = "#009344",
  "A2010" = "#00AD5C",
  "B" = "#B5D334",
  "C" = "#FFD700",
  "D" = "#FFA500",
  "E" = "#FF6F00",
  "F" = "#990000",
  "G" = "#7D4A7D"
)


# plot:
ageplot <- ggplot(data_prop, aes(x = building_year_built_periodic_bins, y = proportion, fill = EPC_D123_Registered_energy_label)) +
  geom_bar(stat = "identity", position = "fill") +  # position = "fill" makes it proportional (0 to 100%)
  scale_y_continuous(labels = scales::percent_format()) +  # Format y-axis as percentages
  labs(
    # title = "Proportion of dwellings in each EPC label by construction period",
    x = "Construction period of dwelling",
    y = "Proportion",
    fill = "Energy Label"
  ) +
  scale_fill_manual(values = epc_colors) +  # Apply custom colors
  scale_x_discrete(labels = c("below_1890" = "before 1890")) +  # Change label in the plot
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 12, face = "bold"),  # Bold axis titles
    axis.text = element_text(size = 10),
    axis.text.x = element_text(angle = 30, hjust = 1),  # Rotate x-axis labels by 30 degrees
    legend.title = element_text(face = "bold")  # Bold legend title

  ) + # add the text to bars
  geom_text(aes(label = ifelse(proportion > 0.1, scales::percent(proportion, accuracy = 1), "")), 
            position = position_fill(vjust = 0.5), 
            color = "#FFFFF0", 
            size = 3,
            fontface = "bold")
ageplot

```

```{r}
path <- 'D:/Thesis/The_Thesis_paper/Thesis_latex/Figures/EPC_data/EPC_and_age_plot_withNumbers.png'
png(path, width = 2800, height = 2000, res = 300)
ageplot
dev.off()
```


```{r, echo=FALSE, results='hide',fig.keep='all'}


# Remove variables to free space from above chunk
rm(
   data_prop 
   )
# Trigger garbage collection to free up memory
gc()

```

#### EPC labels v.s Time on market {.unnumbered}

```{r,fig.align='center',message=FALSE, warning=FALSE,fig.width=10, fig.height=6}

library(lubridate)

data$sale_Date <- as.Date(data$sale_Date)

# Create new column sale_quarter
data <- data %>%
  mutate(sale_quarter = paste0("Q", quarter(sale_Date)),
         sale_year_quarter = paste(sale_Year, sale_quarter, sep = "_"))

# Calculate the average time on market per year and per energy label category
average_time_on_market_quarter <- data %>%
  group_by(sale_year_quarter, EPC_D123_Registered_energy_label) %>%
  summarise(avg_days_on_market = mean(advert_Newest_Advert_days_on_market, na.rm = TRUE)) %>%
  mutate(sale_year_quarter = factor(sale_year_quarter, levels = unique(sale_year_quarter)))

average_time_on_market_quarter$EPC_D123_Registered_energy_label <- factor(average_time_on_market_quarter$EPC_D123_Registered_energy_label, levels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"))

average_time_on_market_quarter$sale_year_quarter <- factor(average_time_on_market_quarter$sale_year_quarter)


# set EPC label colors 
custom_colors <- c(
  "A2020" = "#006400",  
  "A2015" = "#228B22",  
  "A2010" = "#66CDAA",   
  "B" = "#90EA00",      
  "C" = "#FAE123",       
  "D" = "#FFA500",      
  "E" = "#FF6A00",      
  "F" = "#D32F2F",      
  "G" = "#800080"       
)

ggplot(average_time_on_market_quarter, aes(x = sale_year_quarter, y = avg_days_on_market, color = EPC_D123_Registered_energy_label, group = EPC_D123_Registered_energy_label)) +
  geom_line(size = 1.2) +  # Increase line thickness
  scale_color_manual(values = custom_colors) +  # Use custom colors
  labs(
    title = "Average Days on Market by Sale Year Quarter",
    x = "Sale Year Quarter",
    y = "Average Days on Market",
    color = "Energy Label"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.ticks.x = element_line(color = "black"),  # Add ticks outward
    axis.ticks.length.x = unit(0.5, "cm")  # Set length of ticks
  )+
    scale_x_discrete(breaks = unique(average_time_on_market_quarter$sale_year_quarter)[c(TRUE, FALSE, FALSE)])+  # Display every third value on x-axis
    guides(color = guide_legend(override.aes = list(size = 8)))  # Increase legend icon size



```

```{r,fig.align='center',message=FALSE, warning=FALSE,fig.width=10, fig.height=6}

library(RColorBrewer)

data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, 
                              levels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"))

###################################################
# TOTAL time on market plot 
##################################################

# Calculate the average time on market per year and per energy label category
average_time_on_market <- data %>%
  group_by(sale_Year, EPC_D123_Registered_energy_label) %>%
  summarise(avg_days_on_market = mean(advert_Newest_Advert_days_on_market, na.rm = TRUE))


# set EPC label colors 
custom_colors <- c(
  "A2020" = "#006400",  
  "A2015" = "#228B22",  
  "A2010" = "#66CDAA",   
  "B" = "#90EA00",      
  "C" = "#FAE123",       
  "D" = "#FFA500",      
  "E" = "#FF6A00",      
  "F" = "#D32F2F",      
  "G" = "#800080"       
)
# Plot the data
TOTAL_timeonmarket_plot <- ggplot(average_time_on_market, aes(x = sale_Year, y = avg_days_on_market, color = EPC_D123_Registered_energy_label)) +
  geom_line(size = 1.2) +  # Increase line thickness
  scale_color_manual(values = custom_colors) +  # Use custom colors
  scale_y_continuous(breaks = seq(0, max(average_time_on_market$avg_days_on_market, na.rm = TRUE), by = 25)) +  
  scale_x_continuous(breaks = seq(min(average_time_on_market$sale_Year, na.rm = TRUE), max(average_time_on_market$sale_Year, na.rm = TRUE), by = 1)) +  
  labs(
    title = "Average Time on Market \n per Year by Energy Label",
    x = "Year",
    y = "Average Days on Market",
    color = "Energy Label:"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    panel.grid.minor.x = element_blank(),
    axis.text.x = element_text(angle = 30, hjust = 1)  # Rotate x-axis labels by 30 degrees
  )

TOTAL_timeonmarket_plot

```

```{r, echo=FALSE, results='hide',fig.keep='all'}


# Remove variables to free space from above chunk
rm(
   average_time_on_market, 
   TOTAL_timeonmarket_plot
   )
# Trigger garbage collection to free up memory
gc()

```

#### Average price per square meter by EPC labels


```{r,fig.align='center',message=FALSE, warning=FALSE,fig.width=10, fig.height=6}

library(RColorBrewer)

data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, 
                              levels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"))


data$avg_price_sqr <- data$price/data$unit_living_space

data$sale_Year <- as.numeric(as.character(data$sale_Year))

data <- data %>%
  filter(RowID_MAIN_boliga_ROW_ID_unitID != "a3c6d473-8940-416b-a81d-119eef9edf6b")



###################################################
# Avgerage price per square meter per epc label
##################################################

# Calculate the average time on market per year and per energy label category
average_price_epc <- data %>%
  group_by(sale_Year, EPC_D123_Registered_energy_label) %>%
  summarise(avg_price = mean(avg_price_sqr, na.rm = TRUE))

# average_price_epc$sale_Year <- as.numeric(as.character(average_price_epc$sale_Year))

# set EPC label colors 
custom_colors <- c(
  "A2020" = "#006400",  
  "A2015" = "#228B22",  
  "A2010" = "#66CDAA",   
  "B" = "#90EA00",      
  "C" = "#FAE123",       
  "D" = "#FFA500",      
  "E" = "#FF6A00",      
  "F" = "#D32F2F",      
  "G" = "#800080"       
)
# Plot the data
avg_price_plot <- ggplot(average_price_epc, aes(x = sale_Year, y = avg_price, color = EPC_D123_Registered_energy_label)) +
  geom_line(size = 1.2) +  # Increase line thickness
  scale_color_manual(values = custom_colors) +  # Use custom colors
  # scale_y_continuous(breaks = seq(0, max(average_price_epc$avg_price, na.rm = TRUE), by = 25)) +  
  scale_x_continuous(breaks = seq(min(average_price_epc$sale_Year, na.rm = TRUE), max(average_price_epc$sale_Year, na.rm = TRUE), by = 1)) +
  labs(
    title = "Average Price per square meter \n by Energy label",
    x = "Year",
    y = "Average price per square meter",
    color = "Energy Label:"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    panel.grid.minor.x = element_blank(),
    axis.text.x = element_text(angle = 30, hjust = 1)  # Rotate x-axis labels by 30 degrees
  )

avg_price_plot

```


#### Average price per EPC label - boxplot

```{r,fig.align='center',message=FALSE, warning=FALSE,fig.width=10, fig.height=6}

library(RColorBrewer)
library(ggimage)

data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, 
                              levels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"))


data$avg_price_sqr <- data$price/data$unit_living_space

data$sale_Year <- as.numeric(as.character(data$sale_Year))

data <- data %>%
  filter(RowID_MAIN_boliga_ROW_ID_unitID != "a3c6d473-8940-416b-a81d-119eef9edf6b")


# Create a dataframe for the images of the labels
images_data <- data.frame(
  label = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"),
  image = paste0("images/epc_labels/", c("a2020.png", "a2015.png", "a2010.png", "b.png", "c.png", "d.png", "e.png", "f.png", "g.png"))
)


###################################################
# Avgerage price per square meter per epc label
##################################################

# Calculate the average time on market per year and per energy label category
average_price_epc <- data %>%
  group_by(sale_Year, EPC_D123_Registered_energy_label) %>%
  summarise(avg_price = mean(avg_price_sqr, na.rm = TRUE))

# average_price_epc$sale_Year <- as.numeric(as.character(average_price_epc$sale_Year))

# set EPC label colors 
custom_colors <- c(
  "A2020" = "#006400",  
  "A2015" = "#228B22",  
  "A2010" = "#66CDAA",   
  "B" = "#90EA00",      
  "C" = "#FAE123",       
  "D" = "#FFA500",      
  "E" = "#FF6A00",      
  "F" = "#D32F2F",      
  "G" = "#800080"       
)

# Plot the data as box plots
avg_price_plot <- ggplot(data, aes(x = EPC_D123_Registered_energy_label, y = avg_price_sqr, fill = EPC_D123_Registered_energy_label)) +
  geom_boxplot(alpha = 0.7) +  # Box plot with no outliers
  scale_fill_manual(values = custom_colors) +  # Use custom colors
  scale_y_continuous(labels = scales::label_number(scale = 1e-3, suffix = "k")) +  # Format y-axis in thousands
  labs(
    # title = "Average Price per Square Meter by Energy Label",
    x = "Energy Label",
    y = "Average Price per Square Meter"
    # fill = "Energy Label:"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.title = element_text(size = 12, face = "bold"),
    axis.text = element_text(size = 10),
    legend.title = element_blank(),# element_text(size = 12),
    legend.text = element_blank(), # element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for better readability
    panel.grid.minor = element_blank(),
    legend.position = "none"  # Remove legend
  )

# Add images to the x-axis
side_by_side_plot <- avg_price_plot +
  geom_image(data = images_data, aes(x = label, y = -15000, image = image), size = 0.08, by = "width", inherit.aes = FALSE) +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())

side_by_side_plot

```

```{r}
path <- 'D:/Thesis/The_Thesis_paper/Thesis_latex/Figures/EPC_data/Average_price_per_SquareMeter_by_EPC_label.png'
png(path, width = 2800, height = 2000, res = 300)
side_by_side_plot
dev.off()
```



## Geographical data

::: para
--------- where and how did you get the data geofabrik and valhalla and population density

To control for surrounding characteristics of properties i.e. neighborhood characteristics we construct variables from geographical data.
We begin by constructing dummy variables characterizing the area surrounding the properties such as highways, train tracks, forests and the ocean.
These dummy variables are created by creating a 100 meter buffer i.e. circle with radius of 100 meters, around the coordinates of properties and if a point of an object of interest falls within the buffer zone then the dummy variable gets the value 1 else 0.
Note, the coordinates of the properties was obtained when scraping the boliga website.
To define the area of properties i.e. neighborhood can be a bit tricky task as there is no consensus on the definition on what constitutes a neighborhood in terms of meters or kilometers.
Through out this paper we will use a 100 meter buffer size and we will also use different buffer sizes as robustness test.
To create these dummy variables we use the Geofabrik OSM dataset for Denmark which is compiled data from OpenStreetMap [@geofabrik_gmbh_denmark_nodate].\
Next we calculate the road distance in minutes from the capital i.e.
Copenhagen and the radius of the surface area from a 30 minute isochrone with a car of each property.

An isochrone represents a surface area which is reachable from given point within a specific time threshold.
The intuition of taking the radius from the isochrone area is to construct a simple proxy variable to represent accessibility.
We took inspiration from @biazzo_general_2019 paper when creating our accessibility variable.
The accessibility variable used in this paper will therefore represent the radius of the surface area for each dwelling at a 30 minute time threshold with a car.
In relation to this @wahlstrom_doing_2016 used an accessibility index to account for potential spatial autocorrelations, however, they compute their accessibility as the travel time between municipalities with respect to the population of municipality of destination.

To compute both our accessibility variable and the road travel time to Copenhagen in minutes for each dwelling, we utilized a docker image of the Valhalla Route Engine.
Valhalla, an open-source route engine, provides a range of tools for geographical data analysis, including the calculation of isochrones for points of interest and the travel time in minutes between two points [@valhalla_developers_valhalla_nodate].

In addition, we incorporate the average population density of Denmark at a 1km grid level.
Eurostat provides access to population density at grid level for from four census years: 2006, 2011, 2018 and 2021 [@eurostat_population_nodate].
We aggregate the data from all census years, resulting in our population density variable representing the average population density at 1km grid level over the specified period.
:::

#### GEO data: Summary statistics {.unnumbered}



::: {.callout-caution collapse="true"}
## Result in R - continous variables
```{r, message=FALSE, warning=FALSE}
#| label: fig-summaryNumeric_GEO
#| fig-cap: Summary statistics:continuous variables

suppressWarnings({
  # library(vtable)
  # library(vroom)
  # library(dplyr)
  # library(sf)
  # library(ggspatial) # for the north arrow
  # library(ggplot2)
  # #  path
  # path <- 'D:/Thesis/Data/3_EDA_and_filtering/Final_set/Final_version3_NEW_Final_dataset_MasterThesis.csv'
  # 
  # data <- vroom(path)

  
  selected_vars <- c(
    # "geo_buffer_50meters_forest_distance_meters_DUMMY",                                                      
    # "geo_buffer_50meters_park_distance_meters_DUMMY",                                                        
    # "geo_buffer_50meters_industrial_distance_meters_DUMMY",                                                  
    # "geo_buffer_50meters_recreationGround_distance_meters_DUMMY",                                            
    # "geo_buffer_50meters_natureReserve_distance_meters_DUMMY",                                               
    # "geo_buffer_50meters_wetland_distance_meters_DUMMY",                                                     
    # "geo_buffer_50meters_Ocean_or_beach_distance_meters_DUMMY",                                              
    # "geo_buffer_50meters_water_or_resovoir_distance_meters_DUMMY",                                           
    # "geo_buffer_50meters_river_or_stream_or_canal_distance_meters_DUMMY",                                    
    # "geo_buffer_50meters_meadow_or_scrub_or_heath_distance_meters_DUMMY",                                    
    # "geo_buffer_50meters_Motorway_or_trunk_or_primary_distance_meters_DUMMY",                                
    # "geo_buffer_50meters_Rail_or_lightRail_distance_meters_DUMMY", 
    'valhalla_isochrone_AUTO_30min_Radius_inMeters',
    'valhalla_distance_to_copenhagen_AUTO_in_min',
    'POPDensity_Mean_POP_per_gridCell'
    )
  

  test <- data %>%
    select(selected_vars)
  
  st(test, numformat = formatfunc(big.mark = ','), title = "Summary statistics : EPC data - continous variables")
})

```
:::

```{r, echo=FALSE, results='hide',fig.keep='all'}


# Remove variables to free space from above chunk
rm(
   selected_vars, 
   test
   )
# Trigger garbage collection to free up memory
gc()

```


::: {.callout-caution collapse="true"}
## Result in R - categorical variable
```{r, message=FALSE, warning=FALSE}
#| label: fig-summaryCategorical_GEO
#| fig-cap: Summary statistics:Categorical variables

suppressWarnings({
  # library(vtable)
  # library(vroom)
  # library(dplyr)
  # library(sf)
  # library(ggspatial) # for the north arrow
  # library(ggplot2)
  # #  path
  # path <- 'D:/Thesis/Data/3_EDA_and_filtering/Final_set/Final_version3_NEW_Final_dataset_MasterThesis.csv'
  # 
  # data <- vroom(path)

  
  selected_vars <- c(
    "geo_buffer_100meters_forest_DUMMY",
    "geo_buffer_100meters_park_DUMMY",
    "geo_buffer_100meters_industrial_DUMMY",
    "geo_buffer_100meters_natureReserve_DUMMY",
    "geo_buffer_100meters_wetland_DUMMY",
    "geo_buffer_100meters_Ocean_or_beach_DUMMY",
    "geo_buffer_100meters_water_or_resovoir_DUMMY",
    "geo_buffer_100meters_river_or_stream_or_canal_DUMMY",
    "geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY",
    "geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY",
    "geo_buffer_100meters_Rail_or_lightRail_DUMMY"
    # 'valhalla_isochrone_AUTO_30min_Radius_inMeters',
    # 'valhalla_distance_to_copenhagen_AUTO_in_min',
    # 'POPDensity_Mean_POP_per_gridCell'
    )
  

  
  test <- data %>%
    select(selected_vars)
  
  # factor the variables
  test$geo_buffer_100meters_forest_DUMMY <- factor(data$geo_buffer_100meters_forest_DUMMY)
  test$geo_buffer_100meters_park_DUMMY <- factor(data$geo_buffer_100meters_park_DUMMY)
  test$geo_buffer_100meters_industrial_DUMMY <- factor(data$geo_buffer_100meters_industrial_DUMMY)
  test$geo_buffer_100meters_natureReserve_DUMMY <- factor(data$geo_buffer_100meters_natureReserve_DUMMY)
  test$geo_buffer_100meters_wetland_DUMMY <- factor(data$geo_buffer_100meters_wetland_DUMMY)
  test$geo_buffer_100meters_Ocean_or_beach_DUMMY <- factor(data$geo_buffer_100meters_Ocean_or_beach_DUMMY)
  test$geo_buffer_100meters_water_or_resovoir_DUMMY <- factor(data$geo_buffer_100meters_water_or_resovoir_DUMMY)
  test$geo_buffer_100meters_river_or_stream_or_canal_DUMMY <- factor(data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY)
  test$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY <- factor(data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY)
  test$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY <- factor(data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY)
  test$geo_buffer_100meters_Rail_or_lightRail_DUMMY <- factor(data$geo_buffer_100meters_Rail_or_lightRail_DUMMY)
  
  st(test, numformat = formatfunc(big.mark = ','), title = "Summary statistics : GEO data - Categorical variables")
})


```

:::


```{r, echo=FALSE, results='hide',fig.keep='all'}


# Remove variables to free space from above chunk
rm(
   selected_vars, 
   test
   )
# Trigger garbage collection to free up memory
gc()

```


![Geographical Data summary statistic](images/plots_figures_Datasummary_literature/Geographical_data_summaryStatistic.jpeg){.figure-top fig-align="center" width="75%" }


# Emperical Framework

## The hedonic model
::: para
The primary methods utilised to quantify the premium or capitalisation of energy efficient amenities are either through the discrete choice framework or a hedonic approach following Rosen (1974), A New Approach to Consumer Theory on JSTOR (n.d.) and (Brown \& Rosen, 1982). In both these methodologies, it is assumed that the market is competitive with a short-term fixed supply. Moreover, consumers maximise their utility function by weighing a home's attributes, price and individual trades while staying within budget constraints. Most literature estimating price premiums on energy efficiency labels or energy performance utilises a hedonic model, and this thesis will do the same.

 <!-- — show formula of the function. -->
The hedonic model is essentially regressions of house value again characteristics of the unit that determine the value. As a simple example, the dwelling price function can be computed as follows:

$$V = f(X,G,Q,E)$$


Where V represents the market value of the property (here transaction price); X is a vector of variables describing property characteristics; G is a vector of geographical factors which describes the surroundings of the property and any location attributes (e.g., distance to the central business district, etc.). Q is a vector of variables quantifying the quality/condition of the property, and E represents a vector of energy-efficient variables.
To quantify the attributes effect on price in an econometrics setting, the majority of studies employ a hedonic regression, as will we. As Figure 4 shows, most studies use a logarithmic transformation for their dependent variable, as demonstrated below:

$$
\ln(V) = \beta_{0} + \beta_{1} \mathbf{X} + \beta_{2} \mathbf{G} + \beta_{3} \mathbf{Q} + \beta_{4} \mathbf{E} + e
$$

Where e is the error term caputing unobserved factors affecting property prices. 
Malpezzi (2002) points out that the log-linear form has a couple of advantages. Among the benefits he points out is the fact that taking the logarithm of the dependent variable offers a more straightforward and more appealing interpretation. As an example, if the coefficient of a variable representing energy efficiency, such as the label B, is 0,065, then the approximation of the percentage change can be derived using the method constructed by Halvorsen \& Palmquist (1980), which is $e^{coefficient}-1$. This means that energy label B will add 6.72\% more value to the property. Furthermore, by transforming the dependent variable using natural logarithms, we can reduce the issue of heteroskedasticity. In statistics, heteroskedasticity arises when the error term has varying variance across different levels of the independent variables—for example, considering a regression model where we want to predict housing prices based on dwelling size. Let's assume that our data shows that the price varies a lot more for smaller properties than for more significant properties. If we fail to account for this heteroskedasticity, then the standard errors of our coefficients will be incorrect and lead to biased estimates, making us give misleading conclusions.

<!-- % ————————– —— -## Models limitations -->
In an ideal setting, we would like to observe house prices of identical properties over time and rewind to manipulate their energy performance to different levels, observing the resulting price changes. However, such experiments are not feasible in reality. Instead, we rely on statistical methods and data on various factors that constitute the properties attributes, including energy performance, to estimate how changes in these factors affect house prices. We will turn to the Ordinary Least Square (OLS) regression for statistical methods. A standard tool to quantify how changes, such as improving energy efficiency, affect property prices. However, as with any statistical analysis, specific problems may arise and must be addressed before conclusions can be reached without the risk of biased estimations. One problem is that this study relies on a sample that is not randomised. When a sample lacks randomisation, there is a risk of biased estimated effects, which can significantly affect the conclusion drawn from the study. The degree of bias hinges on the correlation between the error term and the independent variable, e.g. energy performance of the property. If the error term correlates with the variable, it introduces endogeneity, which can skew the results. This correlation can lead to either overestimating or underestimating the variable coefficient.

Moreover, to quantify the causal effect of a variable, for example, energy performance, one must consider other valued attributes of the property. However, given equation Equation 1, energy performance (E) might be linked to the presence or absence of various energy-efficient attributes within the property. These features typically encompass lighting and heating systems, insulation quality, water heating, window glazing and construction years. This suggests that there is a correlation between Q and E. Consequently, even if we were to add variety of variables into our estimation, we run the risk of introducing potential multicollinearity to our estimates.

Furthermore, another significant challenge in estimating the causal effect is omitted variable bias. Omitted variable bias occurs when important variables are not accounted for in the model. In other words, if we do not account for a variable that influences both the sales price and the property's energy performance, then we will incorporate that effect into the variable of interest and thereby either overestimate or underestimate the true effect. Take, for instance, energy performance and construction year. These two variables often correlate, in particular now that building standards have changed such that new buildings must be within a specific energy performance range. Construction years can positively affect the sales price of the property and its energy performance. However, when a variable, such as construction year, is omitted from the regression model, then we introduce the risk of overestimating or underestimating the impact of energy performance.

A number of scholars have pointed out that the traditional hedonic model suffers from sample selection bias (see, e.g. Stenvall et al., 2022c ; Wilhelmsson, 2019b ; Næss-Schmidt et al., 2015b). This is a bias that occurs when using non-random data for statistical analysis. As Stenvall et al. (2022c) point out in their study, energy-efficient and non-energy-efficient properties might differ in terms of characteristics, i.e. energy, efficient properties might have unique attributes that distinguish them from properties that do not prioritise energy efficiency. Therefore, the causal effect might be distributed non-randomly. In general, one can expect that older buildings tend to have lower energy efficiency than newer buildings. Consequently, as stated by Stenvall et al. (2022c), when performing analyses, there arises a potential discrepancy between the two groups, i.e. energy, efficient and non-energy efficient properties, in relation to the age of the property. Even though one does control for age, there remains uncertainty regarding the accuracy of the model's representation of this relationship. This uncertainty extends to the structure of the relationship, whether it's linear or non-linear.

It is crucial to acknowledge the challenges faced with when conducting a statistical analysis, as they can pose significant challenges to the interpretation of results. Throughout this thesis, it is imperative to remain mindful of these biases. Next, we shift our focus on the empirical strategy best suited for addressing various challenges outlined above.

:::

## Estimation Strategy
::: para
We will begin by estimating the impact of EPC labels has on transaction prices to determine if consumers are willing to pay more for energy efficient dwelling. To do this, an OLS regression with fixed-effects is estimated. This model will lay the foundation as our baseline model and resemble majority of regressions from the literature, particularly studies by Næss-Schmidt et al. (2015c) and Wahlström (2016b). For the baseline model, we begin by estimating a parsimonious version of the baseline model, then gradually introduce various control variables, resulting in the final form of our baseline regression equation as follows:

$$
\ln(P_{izt}) = \beta EE_{i} + \mathbf{\gamma X_{i}} + \mathbf{\delta Q_{i}} + \mathbf{\eta G_{i}} + \boldsymbol{\tau_{t}} + \boldsymbol{\mu_{z}} +  \epsilon_{izt}
$$

The dependent variable \( Ln(P_{izt}) \) denotes the natural logarithm of the transaction price of dwelling \( i \) at four digit postal code \( z \) at month \( t\). The variable of interest is denoted as \( EE_{i} \) and represents the EPC label of dwelling \( i \). Vector \( \mathbf{X_{i}} \) contains structural characteristics of property, such as living space, number of rooms and floors. The vector \( \mathbf{Q_{i}} \) contains factors quantifying the general condition of the property, such as construction year and year of significant renovation. The structure of the variables from the \( \mathbf{X_{i}} \) and \( \mathbf{G_{i}} \) aligns with the majority of the literature. For example, we follow the approach of Jensen et al. (2016) by structuring the year of construction for properties into periodic bins. Jensen et al. grouped the years into periods reflecting both building tradition and energy performance. The only difference between our variable and theirs is an additional bin for the newer years, as our sample spans a longer period. By structuring the variable, as well as other continuous variables, in a categorical format, we are able to capture non-linear effects. Furthermore, \( \mathbf{G_{i}} \) represents the neighbourhood structure of properties. The vector comprises several geographical characteristics, including population density at 1km grid level. All continuous control variables have been logarithmized. The previous chapter, Chapter 4: Data, presents details on all the variables used in the regressions throughout the paper, including their structural forms.

% fixed effects :
The sample of this analysis spans a long period of time, raising concerns about temporal variation in property prices over the time period. Factors such as seasonality, economic condition and policy changes all have the potential to impact property prices. To account for this, we include month and year fixed effects, denoted as $\boldsymbol{\tau_{t}}$. Moreover, as many of the studies pointed out in the literature review, location plays a vital role as a determinant of property prices. Even though we account for some neighbourhood characteristics, there is still great risk of unobserved heterogeneity in local market conditions such as school districts, demographic characteristics or other neighbourhood amenities that we do not account for. Therefore, we include 4 digit postal code fixed effects, denoted as $\boldsymbol{\mu_{z}}$, to control for spatially correlated factors that can influence property prices. With it we reduce omitted variable bias and improve the robustness of the estimated effects. 

As pointed out in the introduction, the majority of papers do not incorporate additional information in their analysis from the EPC reports related to the renovation potential. In order to deepen our understanding of the impact of energy efficiency on property prices, the baseline model is extended by incorporating additional information derived from the EPC reports, specifically related to energy-efficient renovation potential. Thus, we add the vector $\mathbf{\phi EER_{i}}$ to equation 3, resulting in the final regression equation taking the following form:  

$$
\ln(P_{izt}) = \beta EE_{i} + \mathbf{\phi EER_{i}} + \mathbf{\gamma X_{i}} + \mathbf{\delta Q_{i}} + \mathbf{\eta G_{i}} + \boldsymbol{\tau_{t}} + \boldsymbol{\mu_{z}} + \boldsymbol{\upsilon_{zt}} + \epsilon_{izt}
$$

Here,the vector $\mathbf{\phi EER_{i}}$ denotes a set of property specific control variables related to their renovation potential as specified by the following equation:

$$
\mathbf{\phi EER_{i}} = \phi_{1} LabelJump_{i} + \phi_{2} TECS_Profit_{i} + \phi_{2} TECS_NonProfit_{i} + \phi_{4} TICProfit_{i} + \mathbf{\phi_{5} RSDummy_{i}}
$$

where $LabelJump_{i}$ is a categorical variable representing the number of EPC labels a property would advance from its current label upon implementing all renovation suggestions made in the EPC report. $TECS{i}$ represents the total energy cost saved for property from implementing all renovation suggestions, while $TICProfit_{i}$ represents the total investment cost needed to implement the  profitable renovation suggestions. Finally, the vector $\mathbf{RSDummy_{i}}$ contains dummy variables indicating the types of renovations that are required, such as renovating the roof or attic renovation, renovating the building walls or conversion to district heating. $\mathbf{\phi EER_{i}}$ allows us to capture the static role of the EPC label while also considering the evolving potential for increased energy efficiency and further energy savings. This allows us to determine if home buyers are willing to pay a premium for homes that are already energy efficient as well as those that offer potential for further enhancements in energy efficiency. As a result, we obtain a more thorough study of the economic gains associated with energy efficiency in the housing market. Furthermore, these factors assist to account for potential endogeneity and omitted variable bias caused by unobserved renovation characteristics. 
Moreover, housing market can vary significantly not just by area, but also over time within the same area. For example, certain areas might experience seasonal demand fluctuations, infrastructure developments or local economic changes that impact housing prices differently over time. By interacting the month and postal code fixed effects we account for localised temporal trends in housing prices. This further mitigates omitted variable bias which arise from factors that vary both by location and over time. The interaction is denoted as $\boldsymbol{\upsilon_{zt}}$

Furthermore, As discussed in chapter \ref{chap:literatureReview}, all related empirical studies on the Danish housing market have focused exclusively on detached houses. On the other hand, as shown in \ref{subchap:housing_data}, our unique dataset encompasses a diverse range of property types. These property types differ both in structural characteristics and market dynamics. as a result, it is critical to recognize that the impact might vary significantly between property types. The model specified in equation \ref{eq:finalRegression} was estimated across different property type segments to assess this hypothesis. Finally, we will run various robustness tests to check the robustness of our results. 

:::






# Results

```{r, echo=FALSE, results='hide',fig.keep='all'}

################################################ remove all variables in memory so far 
rm(list = ls())
# Trigger garbage collection to free up memory
gc()

################################################# read in the dataframe 
path <- 'D:/Thesis/Data/Thesis_main_dataset_FINALE.csv'

data <- vroom(path)
data <- data[!is.na(data$valhalla_distance_to_copenhagen_AUTO_in_min), ]
data <- data %>%
  filter(RowID_MAIN_boliga_ROW_ID_unitID != "a3c6d473-8940-416b-a81d-119eef9edf6b")


# data <- data[!is.na(data$EPC_D123_Total_energy_saved_from_profit_renovation_Normalized_in_kWh),]
# 
data$EPC_D123_Feature_profit_renovations_total_cost_savings_10000dkk <- data$EPC_D123_Feature_profit_renovations_total_cost_savings/10000
data$EPC_D123_Feature_other_renovations_total_cost_savings_10000dkk <- data$EPC_D123_Feature_other_renovations_total_cost_savings/10000

data$EPC_D123_Total_energy_cost_saved_allrenovations_1000dkk <- data$EPC_D123_Total_energy_cost_saved_allrenovations/1000

data$EPC_D123_Feature_profit_renovations_total_investment_cost_100000dkk <- data$EPC_D123_Feature_profit_renovations_total_investment_cost/100000

```

<!-- **NOTES ON FILTERING FROM LITERATURE** -->

<!-- -   Denmark, @jensen_market_2016 : -->
<!--     -   filtered price - normal property 40\<= price per m\^2 \<=6700 euros -->
<!--     -   removed obs. with total prices \> 1.075.000 euros -->
<!-- -   Denmark, @naess-schmidt_homes_2015 : -->
<!--     -   filtered price, size of house, disposable income of buyer which are more than 3 standard deviations from mean -->
<!-- -   Germany, @taruttis_estimating_2022 : -->
<!--     -   remove outliers on 1st and 99th percentiles of asking price -->

<!-- For the categorical variables we set the hold-ot or reference categories as follows: (**this applies for all regressions**) -->

<!-- -   **property_type_BBR** -->
<!--     -   Reference group : Detached-house -->
<!-- -   **building_walls_material** -->
<!--     -   Reference group :Bricks -->
<!-- -   **building_roof_material** -->
<!--     -   Reference group : Fibercement with asbest -->
<!-- -   **building_number_of_rooms_categorical** -->
<!--     -   Reference group : 4 -->
<!-- -   **building_number_of_toilets_categorical** -->
<!--     -   Reference group : 1 -->
<!-- -   **EPC_D123_Registered_energy_label** -->
<!--     -   Reference group : D -->
<!-- -   **EPC_energy_sources_factors_15levels** -->
<!--     -   Reference group : -->
<!-- -   **building_renovation_categorial_5levels** -->
<!--     -   Reference group :Not Renovated -->

<!-- **Moreover, I use the full sample i.e. 750.672 for all regressions , excluding the regressions for market segments** -->

```{r,message=FALSE, warning=FALSE}
#| label: fig-result_factoringVariables
#| fig-cap: result_factoringVariables

################################################################
# -------------- FACTOR VARIABLES !
################################################################

# property type
set_levels = c("Detached-house","Rowhouse","Apartment","Duplex")
data$property_type_BBR <- factor(data$property_type_BBR, levels = set_levels)

# walls material
set_levels = c("Bricks","Timber","lightweight concrete blocks", "concrete","Other_Materials","Timber Framing","Fibercement without asbest","metal")
data$building_walls_material <- factor(data$building_walls_material,levels = set_levels)

# roof material
set_levels = c("Fibercement with asbest","Metal", "Bricks", "concrete tiles", "Fibercement without asbest", "Low-slope roofing felt", "High-slope roofing felt", "Other_materials", "Thatched roof")
data$building_roof_material <- factor(data$building_roof_material,levels = set_levels)

# sold before built dummy
data$dummy_sold_before_built <- factor(data$dummy_sold_before_built)

# number of rooms
set_levels = c("4","5","3","6","2","7",">7","1","no_rooms")
data$building_number_of_rooms_categorical <- factor(data$building_number_of_rooms_categorical, levels = set_levels)

# bathroom
data$building_number_of_bathrooms_categorical <- factor(data$building_number_of_bathrooms_categorical)

# toilette 
# set_levels = c('1','2','3', '4')
# data$building_number_of_toilets_categorical <- ifelse(is.na(data$building_number_of_toilets_categorical), 0, data$building_number_of_toilets_categorical)
data$building_number_of_toilets_categorical <- factor(data$building_number_of_toilets_categorical)

# # floor quantity building
set_levels = c( "1-floor","5 to 10-floors","2-floors","3-floors","4-floors","11 to 15 floors","more than 15 floors")
data$building_floor_quantity_in_building_Categorical_7levels <- factor(data$building_floor_quantity_in_building_Categorical_7levels, levels = set_levels)

# year built categorical 
set_levels = c("1951-1960",  "1890-1930", "1961-1972" , "1931-1950" , "2007-2013" , "1999-2006" , "2014-2023" ,"below_1890" ,"1979-1998", "1973-1978")
data$building_year_built_periodic_bins <- factor(data$building_year_built_periodic_bins, levels = set_levels)

# renovations
set_levels = c("Not Renovated",">20","11-20","0-5","6-10")
data$building_renovation_categorial_5levels <- factor(data$building_renovation_categorial_5levels, levels = set_levels)


data$dummy_garage_builtin <- factor(data$dummy_garage_builtin)
data$dummy_garage_detached <- factor(data$dummy_garage_detached)
data$dummy_outhouse_builtin <- factor(data$dummy_outhouse_builtin)
data$dummy_outhouse_detached <- factor(data$dummy_outhouse_detached)
data$dummy_carport_builtin <- factor(data$dummy_carport_builtin)
data$dummy_carport_detached <- factor(data$dummy_carport_detached)
data$dummy_conservatory_builtin <- factor(data$dummy_conservatory_builtin)
data$dummy_conservatory_detached <- factor(data$dummy_conservatory_detached)
data$dummy_Greenhouse_exists <- factor(data$dummy_Greenhouse_exists)
data$dummy_basement_exists <- factor(data$dummy_basement_exists)
data$dummy_swimming_pool_exists <- factor(data$dummy_swimming_pool_exists)

data$dummy_boiler_exists <- factor(data$dummy_boiler_exists)
data$dummy_woodStove_exists <- factor(data$dummy_woodStove_exists)
data$dummy_oilStove_exists <- factor(data$dummy_oilStove_exists)
data$dummy_masonaryHeater_exists <- factor(data$dummy_masonaryHeater_exists)
data$dummy_fireplace_exists <- factor(data$dummy_fireplace_exists)


# energy label : current 
set_levels <- c("D","A2020","A2015",  "A2010", "B","C","E","F","G")
data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = set_levels)

# energy label profit reno
set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G")
data$EPC_D123_energy_label_profit_reno <- factor(data$EPC_D123_energy_label_profit_reno, levels = set_levels)

# energy label all reno
set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G")
data$EPC_D123_energy_label_all_reno <- factor(data$EPC_D123_energy_label_all_reno, levels = set_levels)



set_levels <- c('District heating','Natural gas', 'Oil' ,'Wood and District heating', 'Wood pellets','Wood and electricity', 'Electricity and Wood pellets', 'Electricity and District heating', 'Electricity and Natural gas', 'Electricity', 'Wood', 'Unknown', 'Other source combination','Electricity and Oil')    
data$EPC_energy_sources_factors_15levels <- factor(data$EPC_energy_sources_factors_15levels, levels = set_levels)


data$geo_buffer_100meters_forest_DUMMY <- factor(data$geo_buffer_100meters_forest_DUMMY)
data$geo_buffer_100meters_park_DUMMY <- factor(data$geo_buffer_100meters_park_DUMMY)
data$geo_buffer_100meters_industrial_DUMMY <- factor(data$geo_buffer_100meters_industrial_DUMMY)
data$geo_buffer_100meters_recreationGround_DUMMY <- factor(data$geo_buffer_100meters_recreationGround_DUMMY)
data$geo_buffer_100meters_natureReserve_DUMMY <- factor(data$geo_buffer_100meters_natureReserve_DUMMY)
data$geo_buffer_100meters_wetland_DUMMY <- factor(data$geo_buffer_100meters_wetland_DUMMY)
data$geo_buffer_100meters_Ocean_or_beach_DUMMY <- factor(data$geo_buffer_100meters_Ocean_or_beach_DUMMY)
data$geo_buffer_100meters_water_or_resovoir_DUMMY <- factor(data$geo_buffer_100meters_water_or_resovoir_DUMMY)
data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY <- factor(data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY)
data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY <- factor(data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY)
data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY <- factor(data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY)
data$geo_buffer_100meters_Rail_or_lightRail_DUMMY <- factor(data$geo_buffer_100meters_Rail_or_lightRail_DUMMY)

data$Varmepumpe_pred_and_actual_85percent_threshold <- factor(data$Varmepumpe_pred_and_actual_85percent_threshold)
data$Solarceller_pred_and_actual_85percent_threshold <- factor(data$Solarceller_pred_and_actual_85percent_threshold)
data$Solvarme_pred_and_actual_85percent_threshold <- factor(data$Solvarme_pred_and_actual_85percent_threshold)


## suggestion dummies 
data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic)                                                 
data$EPC_D123_Profit_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_walls)
data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells)
data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system)
data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system)
data$EPC_D123_Profit_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_floor)
data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump)
data$EPC_D123_Profit_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_other)
data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating)
data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation)
data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating)
data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic)
data$EPC_D123_Other_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_walls)
data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells)
data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system)
data$EPC_D123_Other_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_water_system)
data$EPC_D123_Other_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_floor)
data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump)
data$EPC_D123_Other_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_other)
data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating)
data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation)
data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating)
 

#### the total suggestions 
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating)


# Create month of sale variable
data$sale_Date <- as.Date(data$sale_Date)
data$Sale_month <- format(data$sale_Date, "%Y-%m")

# step up:
data$sale_Year <- factor(data$sale_Year)
data$Sale_month <- factor(data$Sale_month)
data$geo_zipcode_4digits <- factor(data$geo_zipcode_4digits)


# create interactions 
data$Sale_year_month <- interaction(data$sale_Year, data$Sale_month)
data$Sale_Time_place <- interaction(data$Sale_year_month, data$geo_zipcode_4digits)

```


<!-- ```{r} -->
<!-- #================================================= test: make lotzie categorical -->
<!-- # Define the breaks and labels for the categories -->
<!-- breaks <- c(-Inf, 0, 100, seq(200, 1000, by=100), Inf) -->
<!-- labels <- c("Zero",  -->
<!--             "1-100",  -->
<!--             paste(seq(101, 901, by=100), seq(200, 1000, by=100), sep="-"), -->
<!--             "1001+") -->

<!-- # Create the categorical variable -->
<!-- data$lotsize_cat <- cut(data$lotsize,  -->
<!--                         breaks=breaks,  -->
<!--                         labels=labels,  -->
<!--                         include.lowest=TRUE,  -->
<!--                         right=FALSE) -->

<!-- data$lotsize_cat[data$lotsize == 0] <- "Zero" -->



<!-- ``` -->




## Main result
::: para
The key results of the analysis are summarized in table 5. Models 1 to 4 estimate equation 3, incorporating additional control variables and fixed effect, until reaching the complete specification of equation 5 in model 6. All models show highly significant EPC label effects across at 0.01% level. Model 1 has a parsimonious specification , the model includes only EPC labels and basic property characteristics to establish a baseline understanding.  


As highlighted in section 4 (set chapter EPC data),there is a noticeable relationship between energy-efficient labels and the year of construction. While newer properties generally exhibit better energy efficiency due to updated building standards, relying soly on construction year may not fully capture all aspects of energy efficiency, given potential changes over a building's lifecycle until its sale.Therefore, additional factors are added in model 2 such as energy related attributes, roof and wall material of property, along with the timing of significant property renovations categorized over periodic intervals. Moreover, one might argue that the number of rooms is insufficient, as it leaves out important quality details, such as presence of a garage, conservatory, pool etc. Therefore, in model 3 we add additional structural features such as if property has detached or built-in garage, outhouse or carport as well as swimming pool. Finally, Fine grained geographical characteristics of property surroundings are added in model 4 to further control for micro factors.   

Excluding model 2, the relationship between EPC labels and property prices strengthens as more property characteristics and external features are considered, showing an upward trend. With the label D as the reference category, Model 4, the main specification for Equation 3, reveals that properties with A2020, A2015, and A2010 labels command average price premiums of 18.6%, 16.4%, and 11.3%, respectively, compared to properties with a D label. Additionally, properties labelled B and C transact at an average premium of 7.6% and 4.7%, respectively. In contrast, properties with less energy-efficient labels E, F, and G are sold at a price discount of 7.9%, 15.8% and 36.5%, respectively. From model 4, we obtain an $R^2$ of 0.6485, indicating that the model can explain 64.85% of the variance in property prices, reflecting a strong overall fit. However, we obtain a within $R^2$ of 0.382 which shows that we capture 38.2% of the variation in property prices within the fixed effects clusters. The low within $R^2$ suggests significant residual variation within these groups, implying that while the fixed effects account for some local and temporal factors, unobserved influences remain.

The price premiums found in model 4 for labels A2020, A2015 and A2010, as well as the price discounts for labels F and G found in model 4, are significantly higher than the label effects reported by @jensen_market_2016 and @naess-schmidt_homes_2015. This discrepancy can be attributed to several factors: our study incorporates more comprehensive control variables, treats the three A labels as individual groups rather than a single group, spans a much longer time period, and includes a significantly larger sample size.

As noted in the literature review (referenced in Chapter X), few studies have explored additional features from EPC reports, such as renovation suggestions and energy-efficiency potential. Considering economic rationale, one might assume that home buyers evaluate properties not only by their current energy efficiency but also by their potential for future enhancements as a long-term investment. Therefore, Model 5 and 6 incorporate additional characteristics taken from the EPC reports, as detailed in the estimation strategy chapter (add chapter number), to assess the potential for improving property energy efficiency through renovations suggested in the reports. Furthermore, leveraging our unique dataset enables comprehensive coverage across the entire country. However, given the nationwide sample, it is imperative to recognize the potential market dynamics over time within specific areas. Therefore, Model 6 introduces an interaction fixed effect between time and 4-digit postal code fixed effects. 

<!-- % -------------------------- model 6 -->
<!-- % price premiums and discounts -->

With the added renovation characteristics we see a significant drop in the labels effect, particularly for energy-efficient labels. From our final model, model 6, we find that once renovation potential indicators are accounted for, the price premium for energy-efficient labels A2020, A2015 and A2010, compared to label D, are measured at 7.7%, 6.4% and 2.6%, respectively. Additionally, labels B and C are sold on average at a 2.2% and 2.0% higher price than a D labelled property, respectively, whereas properties with labels E, F and G are sold for an average discount of 6.2%, 12.5%, 28.7%, respectively. 

<!-- % energy sources and systems -->

Aside from the energy-efficient labels, we find that consumers are concerned about the energy source and systems. Properties with natural gas, oil, or a mix of electricity and oil are sold at an average discount of 2.6%, 10.6%, and 12.9%, respectively, compared to properties relying solely on district heating as a heat source. Conversely, properties with only electricity or a mix of electricity and district heating as a heat sources are sold at average premiums of 1.9% and 5.4% compared to properties relying only on district heating. Furthermore, we find that properties with solar-heating, solar-cells or heat pump installed are sold, on average, with a price premium of 1.9%, 3.3%, and 0.7%, respectively. However, the effect from heat pumps is relatively unstable across models 3 to 6, indicating that the effect may not be robust. In the chapter Robustness testing we will investigate this further.    

<!-- % renovation variables -->
In contrast to the energy sources and systems, we find that consumers pay a significant attention not only on the present condition and characteristics of the property but also on the future potentials in terms of energy efficiency of the property. In model 6, the effect from the potential energy label a property can revise from implementing all renovation suggestions stated in the EPC reports shows a clear non linear relationship. In comparison to properties without potential energy label stated in the reports, we find that the effect from a one letter increase in the potential energy label from implementing all stated renovation suggestions has a fairly marginal price premium of only 0.4%. However, as the potential energy label gets higher the higher positive effect there is on the property prices but as soon as we reach a four letter increase the effect starts to diminish and starts to have a negative effect on property prices once we reach a six letter increase or greater. This indicates that while home buyers appreciate energy efficiency potential, there comes a point where further increases in energy label rating potential might not justify higher property value. Instead, a significantly higher rating potential may signal a greater need for renovations, leading to a negative impact. 

Furthermore, in models 5 and 6, the impact of the total energy cost saved from implementing all renovation suggestions and the estimated investment cost from implementing profitable renovations are both negative and highly significant. One might have expected that the signaling effect of potential energy savings would yield a positive impact. However, the effect of both variables on property prices is considerably modest and inelastic, suggesting that potential home buyers may not prioritize the estimated energy cost savings or the expenses associated with recommended renovations. On the other hand, with regards to the types of renovations recommended in the reports, we observe that several categories have significant effect on property prices. For instance, properties with proposed upgrades to district heating sell for an average 7.8% higher price then those that don't. District heating relies on existing infrastructure, which then only requires adjusting the heating system, making this option highly valued by home buyers. Moreover, properties that have suggestions related to the windows or the doors are sold at an average discount of -5.3% lower price than those with no windows or door suggestions.

Additionally, while home-buyers generally perceive heat pumps to add value to a property, the requirement to install them for higher energy efficiency negatively impacts property prices. This could be do to significant upfront expenses, including equipment and labour cost, which may discourage buyers. However, its worth noting, that our indicator for heat pumps include all types of heat pumps. In future studies, it may be valuable to distinguis between different types of heat pumps, such as vertical ground source heat pumps, horizontal ground source heat pumps, and air source heat pumps. These types can vary considerably in terms of labor, installation, and equipment costs.

One explanation for why we find that the types of renovations have a significantly higher impact on property prices than the estimated energy saving cost and investment cost might be that consumers paying more attention to broader renovation characteristics as the estimated cost benefits and investment expenses are too general. In addition,  both the estimated energy consumption and energy savings may not necessarily reflect the home-buyers' energy consumption patterns. Therefore, consumers pay less attention on the given estimates and more on the broader characteristics. This goes in line with Christensen et al. (2014b) findings that the estimated cost benefits and investment expenses in the reports have limited impact for energy-efficient renovations. 

<!-- % -------------------------- conclude  -->

Overall, the results from the table show interesting trends regarding energy efficiency and property prices. In models 1 to 4, where we successively add control variables related to property features and neighborhood characteristics, the price premium and price discount increases, excluding model 2. However, once we introduce renovation potential features of properties in model 5, we observe a significantly lower price premium for energy-efficient labels and the price discount for non-energy-efficient labels. The effect diminishes further when we include the interaction fixed effect between time and 4-digit postal code, emphasizing the importance of including comprehensive property characteristics in hedonic pricing models, as the previous impact of EPC labels on property prices was most likely confounded by the underlying renovation potential.  

:::





::: {.callout-caution collapse="true"}
## Result from R :

```{r,message=FALSE, warning=FALSE,fig.width=12, fig.height=10}
#| label: fig-pricepremium
#| fig-cap: result_pricepremium


library(modelsummary)
library(fixest)
library(sandwich)



#######################################################################
# ----------------->>>  model 1:  basic characteristics 
#######################################################################

model_1 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       # factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # 
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                   
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
                       
                       # EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       # Varmepumpe_pred_and_actual_85percent_threshold+
                       # Solarceller_pred_and_actual_85percent_threshold+
                       # Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       # dummy_garage_builtin+
                       # dummy_garage_detached+
                       # dummy_outhouse_builtin+
                       # dummy_outhouse_detached+
                       # dummy_carport_builtin+
                       # dummy_carport_detached+
                       # dummy_conservatory_builtin+
                       # dummy_conservatory_detached+
                       # dummy_Greenhouse_exists+
                       # dummy_basement_exists+
                       # dummy_swimming_pool_exists+
                       # dummy_boiler_exists+
                       # dummy_woodStove_exists+
                       # dummy_oilStove_exists+
                       # dummy_masonaryHeater_exists+
                       # dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       # building_walls_material+
                       # building_roof_material+
                       building_year_built_periodic_bins
                       # building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       # log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       # log(POPDensity_Mean_POP_per_gridCell)+
                       # log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       # geo_buffer_100meters_forest_DUMMY+
                       # geo_buffer_100meters_park_DUMMY+
                       # geo_buffer_100meters_industrial_DUMMY+
                       # geo_buffer_100meters_natureReserve_DUMMY+
                       # geo_buffer_100meters_wetland_DUMMY+
                       # geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       # geo_buffer_100meters_water_or_resovoir_DUMMY+
                       # geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       # geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       # geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       # geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits, data=data, vcov = "HC1")

#######################################################################
# ----------------->>>  model 2:  add more condition indicators
#######################################################################

model_2 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       # factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # 
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                   
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       # dummy_garage_builtin+
                       # dummy_garage_detached+
                       # dummy_outhouse_builtin+
                       # dummy_outhouse_detached+
                       # dummy_carport_builtin+
                       # dummy_carport_detached+
                       # dummy_conservatory_builtin+
                       # dummy_conservatory_detached+
                       # dummy_Greenhouse_exists+
                       # dummy_basement_exists+
                       # dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels
                       
                       #-------------------------------------- GEO VARIABLES 
                       # log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       # log(POPDensity_Mean_POP_per_gridCell)+
                       # log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       # geo_buffer_100meters_forest_DUMMY+
                       # geo_buffer_100meters_park_DUMMY+
                       # geo_buffer_100meters_industrial_DUMMY+
                       # geo_buffer_100meters_natureReserve_DUMMY+
                       # geo_buffer_100meters_wetland_DUMMY+
                       # geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       # geo_buffer_100meters_water_or_resovoir_DUMMY+
                       # geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       # geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       # geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       # geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits, data=data, vcov = "HC1")

#######################################################################
# ----------------->>>  model 3:  add more structural amneties
#######################################################################

model_3 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       # factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # 
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                   
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels
                       
                       #-------------------------------------- GEO VARIABLES 
                       # log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       # log(POPDensity_Mean_POP_per_gridCell)+
                       # log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       # geo_buffer_100meters_forest_DUMMY+
                       # geo_buffer_100meters_park_DUMMY+
                       # geo_buffer_100meters_industrial_DUMMY+
                       # geo_buffer_100meters_natureReserve_DUMMY+
                       # geo_buffer_100meters_wetland_DUMMY+
                       # geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       # geo_buffer_100meters_water_or_resovoir_DUMMY+
                       # geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       # geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       # geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       # geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits, data=data, vcov = "HC1")

#######################################################################
# ----------------->>>  model 4:  Add neightbourhood attributes
#######################################################################

model_4 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       # factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # 
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                   
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       # EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits, data=data, vcov = "HC1")


#######################################################################
# ----------------->>>  model 5:  Add renovation potential attributes
#######################################################################

model_5 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # 
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits, data=data, vcov = "HC1")


#######################################################################
# ----------------->>>  model 6:  Add additional fixed effect - interacting time and place i.e. zip code
#######################################################################

model_6 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")





# ============================================================
# ----------------->>>  make table 
# ============================================================

models <- list("Model 1:" = model_1,
               "Model 2:" = model_2,
               "Model 3:" = model_3,
               "Model 4:" = model_4,
               "Model 5:" = model_5,
               "Model 6:" = model_6
               # "Model 7:" = model_7,
               # "Model 8:" = model_8,
               # "Model 9:" = model_9,
               # "Model 10:" = model_10,
               # "Model 11:" = model_11
               )

addon_map <- data.frame(
  raw = c("nobs", "r.squared", "adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), #, "aic", "bic", "dw"),
  clean = c("N.Obs.", "R2", "R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), #, "AIC", "BIC", "Durbin-Watson"),
  fmt = c(0, 4, 4, 4, 4, 4)#, 4, 4, 4)
)

# Create the rows of the fixed effects in the table
timeFE        <- c("Time FE",'YES','YES','YES','YES','YES','YES')#,'YES','YES','YES','YES','YES')
placeFE      <- c("4 digit zip FE" ,'YES','YES','YES','YES','YES','YES')#,'YES','YES','YES','YES','YES')
timeplaceFE  <- c("Time & place Interaction" ,"NO", "NO","NO","NO", "NO","YES")#,'YES','YES','YES','YES',"YES")

dfFE <- data.frame(timeFE, placeFE,timeplaceFE)

# change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly
dfFE_new <- as.data.frame(t(dfFE))

# Run Modelsummary()
modelsummary(models,
             stars = c("*" = .1, "**" = .05, "***" = .01),
             gof_map=addon_map,
             title = "Dependent Variable: log(price)",
             add_rows = dfFE_new
             )#,coef_map=coef)


```
:::

![Main results](images/Results/main_result_part1.jpeg){.figure-top fig-align="center" width="75%" }
![Main results](images/Results/main_result_part_2.jpeg){.figure-top fig-align="center" width="75%" }


```{r}
 
# Remove variables to free space from above chunk
rm(
   model_1 ,
   model_2 ,
   model_3 ,
   model_4,
   model_5,
   model_6
   )
# Trigger garbage collection to free up memory
gc()
```



## Market segment: Property type

::: para

In this chapter the relationship between energy efficiency and property prices across different property types will be explores using our unique dataset, which includes a divers range of properties. Unlike prior studies that focused solely on detached houses, our analysis encompasses detached houses, row houses, duplexes, and apartments. We estimate a model specification equivalent to Equation 4 (ADD CROSSREF) for all the subgroups. Model 2 estimates are for detached houses, Model 3 for row houses, Model 4 for duplexes, and Model 5 for apartments. The results are presented in Table [Add table number]. 

% EPC labels 
The results show that most EPC labels have the expected signs and are significant at the 1% level, with some exceptions in models 2 and 3, i.e. for duplexes and apartments. For apartments, we find that label C is statistically insignificant. In model 4, labels A2010, B, C and E are found to be insignificant, whereas labels A2020 and G are significant at the 5% level, and labels A2015 and F are significant at the 10% level. Additionally, the results for the duplex sample shows a far less significance in all variables accounted for compared to other property types. These inconsistencies in model 4 may be due to the significantly smaller sample size (8.236 observations), which could affect the reliability of the results. Consequently, this chapter focuses mainly on detached houses, apartments, and row houses.

The impact of EPC labls on property prices varies significantly across property types. Detached houses exhibit the highest price premiums for energy-efficient labels. Compared to label D, home buyers of detached houses are willing to pay a premium 15.2%, 16.6%, 9.9%, and 8.7% more for labels A2020, A2015, A2010, and B, respectively. For apartments, the price premiums for energy-efficient labels are much lower, with buyers willing to pay 3.7% more for labels A2020, A2015, and B, and 5.4% more for label A2010. Row houses show label effects that are relatively consistent with the full sample.

A notable trend is the diminishing returns on energy efficiency labels across the property type segment. For detached houses and row houses, the price premium diminishes once the most energy-efficient label is achieved. Similarly, for apartments, the price premium decreases for labels A2015 and A2020, where the premium is nearly equivalent to that of the B label, with only marginal differences. This pattern indicates that as buildings get more energy-efficient, the additional advantages acquired by home buyers tend to diminish. Moving from a D to an A classification delivers significant utility gains; however, any upgrades within the A category may result in declining returns. In other words, if a property reaches a certain level of efficiency, future renovations may not considerably improve its appeal, or the increased efficiency may not convert into a corresponding rise in perceived value.



<!-- % Energy source and systems  -->

The price impact from different heating sources and systems also varies across property types. In comparison to district heating, we find that for detached houses and apartments it seems that district heating is mainly preferred. For detached houses there is only one heating source that trumps district heating and thats wood pellets which give a price premium of 3.5% compared to district heating. For apartments, the preference for district heating is less pronounced. Apartments heated with district heating and electricity, only electricity, or electricity and wood pellets are sold at premiums of 2%, 7.1%, and 39.2%, respectively. For apartments, the preference for district heating is less pronounced.  Apartments with both district heating and electricity are sold at a 2% premium, those with only electricity at a 7.1% premium, and those with electricity and wood pellets at a 39.2% premium. The price premium for apartments heated with both electricity and wood pellets seems unusually high, indicating potentially missing information in our analysis. Row houses and duplexes show no sign of price premiums for other heating sources compared to district heating. Moreover, properties using fossil fuel as main energy source are found to be sold on average at a lower price compared to those with district heating. Specifically, detached houses and apartments are sold at a price discount of 7.8% and 3.7%, respectively. Properties with oil as the primary heat source see price discounts of 14.3% for detached houses, 6.6% for duplexes and 5.1% for apartments.

Interestingly, our results indicate that the market for apartments is the only property market which acknowledges a value in heat pumps whereas the effect of the presence of heat pumps in other property types are statistically insignificant. we find that apartments are sold on average at a higher price of 1.1% if they come with a heat pump. For solar heating and solar cells we find that the presence of these heating systems is only valued for detached houses and apartments. A detached house is sold on average at a 1.4% higher price if they have solar cells whereas apartments are sold on average at a 2.4% higher price. If solar heating system is present in a detached house we find that the house is sold on average at a 0.6% higher price and for apartments the premium is 1.1%. Although we find price premium for these components our results indicate that their importance is lower than that of the heating source in both detached houses and apartments.

<!-- % renovation characteristics  -->

Finally, the effect of energy-efficiency potential on property prices differs across property types. In terms of energy label potential from implementing all renovation suggestions, we find only a significant price impact for detached houses and partially for apartments. Similar to our full sample Model, having the ability to go up by one or two EPC labels has a positive effect on prices for detached houses, but once a property reaches the potential to go up by three or greater EPC labels, the effect becomes negative, leading to lower property prices. We only find that one-letter and three-letter increase has a significant price effect for apartments. Surprisingly, the results indicate that apartments with one-letter improvement potential have a negative effect on prices, whereas the potential to move up by three labels has a positive effect on apartment prices. One might have expected that the price effect from the potential of a one-letter increase would either be insignificant or marginal. The negative price effect may arise because potential buyers do not perceive a single-letter improvement as enough benefits to justify the potential costs associated with it, whereas a three-letter improvement could signify a more substantial and worthwhile upgrade.

Moreover we find similar anomaly in terms of total investment cost and total energy cost across property types. Again, the variables are only effective for detached houses and apartments. Interestingly, while increased estimated investment costs for profitable renovations have a negative impact on detached house prices, higher potential total energy savings yield a positive effect. This pattern aligns with economic theory, where perceived increases in energy savings costs are positively correlated, while increased investment costs have a negative impact. However, unlike the effect found in the full sample, the effect from total energy costs saved for detached houses is significant at 10% level. Conversely, this trend is flipped for apartments, where higher expected investment expenditures for profitable renovations have a positive impact on unit pricing, while potential total energy cost savings show a negative effect. This result does strike as relatively odd one yet its worth noting that estimated investment cost for profitable renovations and total cost saved from all renovations are at building level. Unlike detached houses, the estimated energy cost saved and investment cost for profitable renovations for aparments are for the whole apartment block. Therefore the cost and benefits are shared across the entire building. This collective arrangement may influence how these benefits are perceived. Overall, regardless of property type—detached house or apartment— the impacts of investment and energy cost benefits are relatively inelastic. However, the implications for property prices resulting from renovation potential in these segments necessitate further investigation. 

<!-- % ------ apartment v.s. detached houses -->

Overall, we find significant differences between apartments and other property types, particularly between apartments and detached houses. The major differences in the effects between these two can be explained in several factors. Detached houses usually comprise of one or two household income which means that energy costs and potential renovation costs bare a higher weight on the wallet then for those investing in apartments as detached houses are far more diverse in structure and size whereas apartments are fairly homogeneous. Moreover, apartments, by their nature, often share walls and infrastructure, which limits the extent to which individual units can implement energy-saving technologies independently. Whereas, flexibility of energy efficiency improvements are typically more apparent in detached houses. in contrast to this, energy costs and efficiency is aggregated at building level for apartments. While any improvements in the building infrastructure can benefit all residents, individual unit owners may not directly perceive or control these benefits. This collective assessment can lead to a perception that personal investments in energy-efficient apartment, as indicated by its EPC label, may not yield a proportional financial return compared to detached houses. Leading to the effect of EPC labels being more inelastic compared to the EPC label effect for detached-houses. Overall, the result appear to indicate that energy efficiency indicators and renovation potential toward energy efficiency differs across different property types. Nevertheless, these result sm ust further be corroborated to assure that the effects are actually significantly different from each other. 
:::


::: {.callout-caution collapse="true"}
## Result from R :


```{r, message=FALSE, warning=FALSE}

data$EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted <- data$EPC_D123_Feature_profit_renovations_total_cost_savings_Adjusted + data$EPC_D123_Feature_other_renovations_total_cost_savings_Adjusted



#######################################################################
# ----------------->>> Full sample
#######################################################################

model_1 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_other_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_100000dkk+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       # dummy_garage_detached_and_builtin+
                       # dummy_outhouse_detached_and_builtin+
                       # dummy_carport_detached_and_builtin+
                       # dummy_conservatory_detached_and_builtin+

                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")


#######################################################################
# ----------------->>>  Detached house
#######################################################################

model_2 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                   
                       # EPC_D123_Feature_profit_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_other_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_100000dkk+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       # property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data[data$property_type_BBR=="Detached-house",], vcov = "HC1")

#######################################################################
# ----------------->>>  Rowhouse
#######################################################################

model_3 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # EPC_D123_Feature_profit_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_other_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_100000dkk+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       # property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data[data$property_type_BBR=="Rowhouse",], vcov = "HC1")


#######################################################################
# ----------------->>>  Duplex
#######################################################################

model_4 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                   
                       # EPC_D123_Feature_profit_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_other_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_100000dkk+
                   
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       # property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data[data$property_type_BBR=="Duplex",], vcov = "HC1")


#######################################################################
# ----------------->>>  Apartments
#######################################################################
model_5 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # EPC_D123_Feature_profit_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_other_renovations_total_cost_savings_10000dkk +
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_100000dkk+
                       # 
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                       # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       # property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY

                       | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data = data[data$property_type_BBR == "Apartment", ], vcov = "HC1")



# ============================================================
# ----------------->>>  make table 
# ============================================================

models <- list("Model 1: Full sample" = model_1 ,
               "Model 2: Detached-Houses" = model_2 ,
               "Model 3: Rowhouses" = model_3 ,
               "Model 4: Duplex" = model_4,
               "Model 5: Apartments" = model_5
               )

addon_map <- data.frame(
  raw = c("nobs", "r.squared", "adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), #, "aic", "bic", "dw"),
  clean = c("N.Obs.", "R2", "R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), #, "AIC", "BIC", "Durbin-Watson"),
  fmt = c(0, 4, 4, 4, 4, 4)#, 4, 4, 4)
)

# Create the rows of the fixed effects in the table
timeFE        <- c("Time FE",'YES','YES','YES','YES','YES')
placeFE      <- c("4 digit zip FE" ,'YES','YES','YES','YES','YES')
timeplaceFE  <- c("Time & place Interaction" ,"YES", "YES","YES","YES", "YES")

dfFE <- data.frame(timeFE, placeFE,timeplaceFE)

# change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly
dfFE_new <- as.data.frame(t(dfFE))

# Run Modelsummary()
modelsummary(models,
             stars = c("*" = .1, "**" = .05, "***" = .01),
             gof_map=addon_map,
             title = "Dependent Variable: log(price)",
             add_rows = dfFE_new
             )#,coef_map=coef)

```
:::

![Property type segment](images/Results/market_Segment_propertyType_part1.jpeg){.figure-top fig-align="center" width="75%" }
![Property type segment](images/Results/market_Segment_propertyType_part_2.jpeg){.figure-top fig-align="center" width="75%" }



## Policy effect ?

::: para
<!-- Notes: -->
<!-- -   Policy that sets additional restrictions on new buildings and restrictions on buildings renovations -->
<!--     -   A push to make sure that renovations truly improves energy efficiency of buildings -->
<!--     -   restrictions on the conditions of renovations e.g. if ventilation or windows are changed then they must meet certain standards -->
<!--     -   Policy set in place on 1. January 2018 -->
<!--     -   [link 1](https://www.odyssee-mure.eu/publications/efficiency-trends-policies-profiles/denmark.html) -->
<!--     -   [link 2](https://stateofgreen.com/en/news/a-brief-introduction-to-denmarks-green-ambitions-policies-and-initiatives/) -->
<!--     -   [link 3](https://vancouvereconomic.com/wp-content/uploads/2023/01/Danish-Energy-Requirements-Regulations.pdf) -->
<!-- -   Emperical strategy : -->
<!--     -   Do similar as @jensen_market_2016 by splitting at the date of the policy and compare before and after regressions results -->

Denmark introduced a policy on 1 of January, 2018 that imposed greater energy efficiency restrictions for new buildings as well as tightre renovation standards on existing properties. The objective of this policy is to promote the development of energy-efficient properties and ensure that renovations made on existing properties improve in overall energy performance. In this chapter we will explore whether the implementation of this policy has influenced home buyers' views on energy-efficient properties and their potential for energy efficiency. 

Following the empirical strategy outlined by @jensen_market_2016, we will divide our sample according to the policy implementation date. Model 1 will contain observations before to the policy took place, whereas Model 2 will include observations after the policy is implemented. Both models will represent equation 4. The results are presented in Table (ADD TABLE NUMBER).

Notably, before the implementation of the policy, label A2020 is found to be be negative yet statistically insignificant and labels A2010 and B are only significant at 10% level. Notably, the label A2020, which was initially negative and statistically insignificant, gains a price premium of 6.2% compared to label D post-policy. Before the policy the highest premium is found for properties labelled A2015 with a premium of 5.1% compared to label D. However, after the policy's implementation, all energy-efficient labels, excluding A2015, saw a significant increase in price premiums. The premium for label A2015 decreased, likely due to a significant push towards higher-tier energy-efficient labels after the policy was enacted.

In addition to the changes in the label effect, we also observe a significant change in home buyers perception towards energy sources. While some energy sources experienced only marginal changes, others exhibit significant shifts. For instance, in comparison to district heating, properties heated solely with oil or with a combination of oil and electricity were sold at an average discount of 9.3% and 10.7%, respectively, before the policy. After the policy's implementation, these discounts increased to 12.5% and 14.8%, respectively. With that being said, the price premium for green energy components heating pumps, solar cells and solar heating exhibit a decline in the premium. Overall, this result indicates that the implementation of the policy has not only shifted home buyers toward more energy efficient properties but also towards focusing more on green energy sources, particularly for district heating. However, this shift appears to have reduced the attention given to other green energy components such as heat pumps, solar cells, and solar heating.

The policy also significantly impacted the perceived energy efficiency potential of properties. Following the policy's implementation, customers put a larger value on the energy efficiency potential of properties, resulting in a higher price premium for higher-potential EPC stickers. While there were some changes in the types of renovations valued by consumers, these changes are relatively minor or negligible.

Overall, the results indicate that the policy has significantly influenced home buyers' preferences and market dynamics. The policy has fostered a clear trend towards greater value placed on energy-efficient properties, particularly those with higher EPC labels and potential for energy savings.


::: {.callout-caution collapse="true"}
## Result from R :

```{r,message=FALSE, warning=FALSE}
#| label: fig-policy
#| fig-cap: result_policy


# cutoff date
cutoff_date <- as.Date("2018-01-01")

# Split the dataframe into two based on the sale_Date
data_before_jan2018 <- subset(data, sale_Date <= cutoff_date)
data_after_jan2018 <- subset(data, sale_Date > cutoff_date)



#######################################################################
# ----------------->>>  before
#######################################################################


# run regression :
model_1 <- feols(log(price) ~
                 #-------------------------------------- EPC DATA                        
                 EPC_D123_Registered_energy_label+
             
                 # -----------------------  renovation variables 
                 factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                 log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                 log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
             
                 # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
             
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
             
                 EPC_energy_sources_factors_15levels+
             
                 #-------------------------------------- TEXT CLASSIFICATION
                 Varmepumpe_pred_and_actual_85percent_threshold+
                 Solarceller_pred_and_actual_85percent_threshold+
                 Solvarme_pred_and_actual_85percent_threshold+
                 
                 #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                 log(unit_living_space)+
                 property_type_BBR+
                 dummy_sold_before_built+
                 building_number_of_rooms_categorical+
                 building_number_of_bathrooms_categorical+
                 building_number_of_toilets_categorical+
                 building_floor_quantity_in_building_Categorical_7levels+
             
                 dummy_garage_builtin+
                 dummy_garage_detached+
                 dummy_outhouse_builtin+
                 dummy_outhouse_detached+
                 dummy_carport_builtin+
                 dummy_carport_detached+
                 dummy_conservatory_builtin+
                 dummy_conservatory_detached+
                 dummy_Greenhouse_exists+
                 dummy_basement_exists+
                 dummy_swimming_pool_exists+
                 dummy_boiler_exists+
                 dummy_woodStove_exists+
                 dummy_oilStove_exists+
                 dummy_masonaryHeater_exists+
                 dummy_fireplace_exists+
                  
                 #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                 building_walls_material+
                 building_roof_material+
                 building_year_built_periodic_bins+
                 building_renovation_categorial_5levels+
                 
                 #-------------------------------------- GEO VARIABLES 
                 log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                 log(POPDensity_Mean_POP_per_gridCell)+
                 log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                 geo_buffer_100meters_forest_DUMMY+
                 geo_buffer_100meters_park_DUMMY+
                 geo_buffer_100meters_industrial_DUMMY+
                 geo_buffer_100meters_natureReserve_DUMMY+
                 geo_buffer_100meters_wetland_DUMMY+
                 geo_buffer_100meters_Ocean_or_beach_DUMMY+
                 geo_buffer_100meters_water_or_resovoir_DUMMY+
                 geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                 geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                 geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                 geo_buffer_100meters_Rail_or_lightRail_DUMMY
           
                | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data_before_jan2018, vcov = "HC1")





#######################################################################
# ----------------->>>  after policy
#######################################################################


# run regression :

# run regression :

model_2 <- feols(log(price) ~
                 #-------------------------------------- EPC DATA                        
                 EPC_D123_Registered_energy_label+
             
                 # -----------------------  renovation variables 
                 factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                 log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                 log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
             
                 # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
             
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
             
                 EPC_energy_sources_factors_15levels+
             
                 #-------------------------------------- TEXT CLASSIFICATION
                 Varmepumpe_pred_and_actual_85percent_threshold+
                 Solarceller_pred_and_actual_85percent_threshold+
                 Solvarme_pred_and_actual_85percent_threshold+
                 
                 #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                 log(unit_living_space)+
                 property_type_BBR+
                 dummy_sold_before_built+
                 building_number_of_rooms_categorical+
                 building_number_of_bathrooms_categorical+
                 building_number_of_toilets_categorical+
                 building_floor_quantity_in_building_Categorical_7levels+
             
                 dummy_garage_builtin+
                 dummy_garage_detached+
                 dummy_outhouse_builtin+
                 dummy_outhouse_detached+
                 dummy_carport_builtin+
                 dummy_carport_detached+
                 dummy_conservatory_builtin+
                 dummy_conservatory_detached+
                 dummy_Greenhouse_exists+
                 dummy_basement_exists+
                 dummy_swimming_pool_exists+
                 dummy_boiler_exists+
                 dummy_woodStove_exists+
                 dummy_oilStove_exists+
                 dummy_masonaryHeater_exists+
                 dummy_fireplace_exists+
                  
                 #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                 building_walls_material+
                 building_roof_material+
                 building_year_built_periodic_bins+
                 building_renovation_categorial_5levels+
                 
                 #-------------------------------------- GEO VARIABLES 
                 log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                 log(POPDensity_Mean_POP_per_gridCell)+
                 log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                 geo_buffer_100meters_forest_DUMMY+
                 geo_buffer_100meters_park_DUMMY+
                 geo_buffer_100meters_industrial_DUMMY+
                 geo_buffer_100meters_natureReserve_DUMMY+
                 geo_buffer_100meters_wetland_DUMMY+
                 geo_buffer_100meters_Ocean_or_beach_DUMMY+
                 geo_buffer_100meters_water_or_resovoir_DUMMY+
                 geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                 geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                 geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                 geo_buffer_100meters_Rail_or_lightRail_DUMMY
           
                | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data_after_jan2018, vcov = "HC1")




# ---------------- MODEL SUMMARY -------------------

models <- list("Before policy"= model_1, 
               "After policy" = model_2
               # "2 years before policy" = model_3,
               # "2 years after policy" = model_4
               )

# addon_map <- data.frame(raw = c("nobs", "adj.r.squared"),
#                       clean = c("N.Obs.", "R2Adj."),
#                       fmt = c(0, 3))

addon_map <- data.frame(raw = c("nobs", "r.squared","adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"),
                      clean = c("N.Obs.","R2" ,"R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"),
                      fmt = c(0, 4,4,4,4,4))

# ---- ADD THE FIXED EFFECTS TEXT
timeFE        <- c("Time FE",'YES','YES')#,'YES','YES')
placeFE      <- c("4 digit zip FE" ,'YES','YES')#,'YES','YES')
timeplaceFE  <- c("Time & place Interaction" ,'YES','YES')#,'YES','YES')

dfFE <- data.frame(timeFE, placeFE,timeplaceFE)

# change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly
dfFE_new <- as.data.frame(t(dfFE))

# Run Modelsummary()
modelsummary(models,
             stars = c("*" = .1, "**" = .05, "***" = .01),
             gof_map=addon_map,
             title = "Dependent Variable: log(price)",
             add_rows = dfFE_new
             )#,coef_map=coef)
```

:::

![Policy effect](images/Results/Policy_effect_part_1.jpeg){.figure-top fig-align="center" width="75%" }
![Polict effect](images/Results/Policy_effect_part_2.jpeg){.figure-top fig-align="center" width="75%" }




## Robustnes tests

::: par
```{r, message=FALSE, warning=FALSE}
############################################# restart to make sure it doesnt crash 

library(vtable)
library(vroom)
library(dplyr)
library(sf)
library(ggspatial) # for the north arrow
library(ggplot2)

library(modelsummary)
library(fixest)
library(sandwich)

rm(list = ls())
# Trigger garbage collection to free up memory
gc()


# Read in main datafile
path <- 'D:/Thesis/Data/Thesis_main_dataset_FINALE.csv'

# path <- 'D:/Thesis/Data/3_EDA_and_filtering/Final_set/rebuild/Thesis_main_dataset_FINALE.csv'

data <- vroom(path)

data <- data[!is.na(data$valhalla_distance_to_copenhagen_AUTO_in_min), ]
data <- data %>%
  filter(RowID_MAIN_boliga_ROW_ID_unitID != "a3c6d473-8940-416b-a81d-119eef9edf6b")


################################################################
# -------------- FACTOR VARIABLES !
################################################################


# property type
set_levels = c("Detached-house","Rowhouse","Apartment","Duplex")
data$property_type_BBR <- factor(data$property_type_BBR, levels = set_levels)

# walls material
set_levels = c("Bricks","Timber","lightweight concrete blocks", "concrete","Other_Materials","Timber Framing","Fibercement without asbest","metal")
data$building_walls_material <- factor(data$building_walls_material,levels = set_levels)

# roof material
set_levels = c("Fibercement with asbest","Metal", "Bricks", "concrete tiles", "Fibercement without asbest", "Low-slope roofing felt", "High-slope roofing felt", "Other_materials", "Thatched roof")
data$building_roof_material <- factor(data$building_roof_material,levels = set_levels)

# sold before built dummy
data$dummy_sold_before_built <- factor(data$dummy_sold_before_built)

# number of rooms
set_levels = c("4","5","3","6","2","7",">7","1","no_rooms")
data$building_number_of_rooms_categorical <- factor(data$building_number_of_rooms_categorical, levels = set_levels)

# bathroom
data$building_number_of_bathrooms_categorical <- factor(data$building_number_of_bathrooms_categorical)

# toilette 
# set_levels = c('1','2','3', '4')
# data$building_number_of_toilets_categorical <- ifelse(is.na(data$building_number_of_toilets_categorical), 0, data$building_number_of_toilets_categorical)
data$building_number_of_toilets_categorical <- factor(data$building_number_of_toilets_categorical)

# # floor quantity building
set_levels = c( "1-floor","5 to 10-floors","2-floors","3-floors","4-floors","11 to 15 floors","more than 15 floors")
data$building_floor_quantity_in_building_Categorical_7levels <- factor(data$building_floor_quantity_in_building_Categorical_7levels, levels = set_levels)

# year built categorical 
set_levels = c("1951-1960",  "1890-1930", "1961-1972" , "1931-1950" , "2007-2013" , "1999-2006" , "2014-2023" ,"below_1890" ,"1979-1998", "1973-1978")
data$building_year_built_periodic_bins <- factor(data$building_year_built_periodic_bins, levels = set_levels)

# renovations
set_levels = c("Not Renovated",">20","11-20","0-5","6-10")
data$building_renovation_categorial_5levels <- factor(data$building_renovation_categorial_5levels, levels = set_levels)


data$dummy_garage_builtin <- factor(data$dummy_garage_builtin)
data$dummy_garage_detached <- factor(data$dummy_garage_detached)
data$dummy_outhouse_builtin <- factor(data$dummy_outhouse_builtin)
data$dummy_outhouse_detached <- factor(data$dummy_outhouse_detached)
data$dummy_carport_builtin <- factor(data$dummy_carport_builtin)
data$dummy_carport_detached <- factor(data$dummy_carport_detached)
data$dummy_conservatory_builtin <- factor(data$dummy_conservatory_builtin)
data$dummy_conservatory_detached <- factor(data$dummy_conservatory_detached)
data$dummy_Greenhouse_exists <- factor(data$dummy_Greenhouse_exists)
data$dummy_basement_exists <- factor(data$dummy_basement_exists)
data$dummy_swimming_pool_exists <- factor(data$dummy_swimming_pool_exists)

data$dummy_boiler_exists <- factor(data$dummy_boiler_exists)
data$dummy_woodStove_exists <- factor(data$dummy_woodStove_exists)
data$dummy_oilStove_exists <- factor(data$dummy_oilStove_exists)
data$dummy_masonaryHeater_exists <- factor(data$dummy_masonaryHeater_exists)
data$dummy_fireplace_exists <- factor(data$dummy_fireplace_exists)


# energy label : current 
set_levels <- c("D","A2020","A2015",  "A2010", "B","C","E","F","G")
data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = set_levels)

# energy label profit reno
set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G")
data$EPC_D123_energy_label_profit_reno <- factor(data$EPC_D123_energy_label_profit_reno, levels = set_levels)

# energy label all reno
set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G")
data$EPC_D123_energy_label_all_reno <- factor(data$EPC_D123_energy_label_all_reno, levels = set_levels)



set_levels <- c('District heating','Natural gas', 'Oil' ,'Wood and District heating', 'Wood pellets','Wood and electricity', 'Electricity and Wood pellets', 'Electricity and District heating', 'Electricity and Natural gas', 'Electricity', 'Wood', 'Unknown', 'Other source combination','Electricity and Oil')    
data$EPC_energy_sources_factors_15levels <- factor(data$EPC_energy_sources_factors_15levels, levels = set_levels)


data$geo_buffer_100meters_forest_DUMMY <- factor(data$geo_buffer_100meters_forest_DUMMY)
data$geo_buffer_100meters_park_DUMMY <- factor(data$geo_buffer_100meters_park_DUMMY)
data$geo_buffer_100meters_industrial_DUMMY <- factor(data$geo_buffer_100meters_industrial_DUMMY)
data$geo_buffer_100meters_recreationGround_DUMMY <- factor(data$geo_buffer_100meters_recreationGround_DUMMY)
data$geo_buffer_100meters_natureReserve_DUMMY <- factor(data$geo_buffer_100meters_natureReserve_DUMMY)
data$geo_buffer_100meters_wetland_DUMMY <- factor(data$geo_buffer_100meters_wetland_DUMMY)
data$geo_buffer_100meters_Ocean_or_beach_DUMMY <- factor(data$geo_buffer_100meters_Ocean_or_beach_DUMMY)
data$geo_buffer_100meters_water_or_resovoir_DUMMY <- factor(data$geo_buffer_100meters_water_or_resovoir_DUMMY)
data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY <- factor(data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY)
data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY <- factor(data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY)
data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY <- factor(data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY)
data$geo_buffer_100meters_Rail_or_lightRail_DUMMY <- factor(data$geo_buffer_100meters_Rail_or_lightRail_DUMMY)

data$Varmepumpe_pred_and_actual_85percent_threshold <- factor(data$Varmepumpe_pred_and_actual_85percent_threshold)
data$Solarceller_pred_and_actual_85percent_threshold <- factor(data$Solarceller_pred_and_actual_85percent_threshold)
data$Solvarme_pred_and_actual_85percent_threshold <- factor(data$Solvarme_pred_and_actual_85percent_threshold)


## suggestion dummies 
data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic)                                                 
data$EPC_D123_Profit_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_walls)
data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells)
data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system)
data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system)
data$EPC_D123_Profit_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_floor)
data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump)
data$EPC_D123_Profit_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_other)
data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating)
data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation)
data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating)
data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic)
data$EPC_D123_Other_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_walls)
data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells)
data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system)
data$EPC_D123_Other_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_water_system)
data$EPC_D123_Other_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_floor)
data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump)
data$EPC_D123_Other_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_other)
data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating)
data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation)
data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating)
 

#### the total suggestions 
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating)


# Create month of sale variable
data$sale_Date <- as.Date(data$sale_Date)
data$Sale_month <- format(data$sale_Date, "%Y-%m")

# step up:
data$sale_Year <- factor(data$sale_Year)
data$Sale_month <- factor(data$Sale_month)
data$geo_zipcode_4digits <- factor(data$geo_zipcode_4digits)


# create interactions 
data$Sale_year_month <- interaction(data$sale_Year, data$Sale_month)
data$Sale_Time_place <- interaction(data$Sale_year_month, data$geo_zipcode_4digits)


################################################
# select only necessary variable for the 6 models 
# 
# List of columns to select
selected_columns <- c(
                      'sale_Date',
                      "price",
                      "EPC_D123_Registered_energy_label",
                      "EPC_D123_LABEL_JUMP_current_to_allreno",
                      "EPC_D123_Feature_profit_renovations_total_investment_cost",
                      "EPC_D123_Total_energy_cost_saved_allrenovations",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation",
                      "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating",
                      "EPC_energy_sources_factors_15levels",
                      "Varmepumpe_pred_and_actual_85percent_threshold",
                      "Solarceller_pred_and_actual_85percent_threshold",
                      "Solvarme_pred_and_actual_85percent_threshold",
                      "unit_living_space",
                      "dummy_sold_before_built",
                      "building_number_of_rooms_categorical",
                      "building_number_of_bathrooms_categorical",
                      "building_number_of_toilets_categorical",
                      "building_floor_quantity_in_building_Categorical_7levels",
                      "dummy_garage_builtin",
                      "dummy_garage_detached",
                      "dummy_outhouse_builtin",
                      "dummy_outhouse_detached",
                      "dummy_carport_builtin",
                      "dummy_carport_detached",
                      "dummy_conservatory_builtin",
                      "dummy_conservatory_detached",
                      "dummy_Greenhouse_exists",
                      "dummy_basement_exists",
                      "dummy_swimming_pool_exists",
                      "dummy_boiler_exists",
                      "dummy_woodStove_exists",
                      "dummy_oilStove_exists",
                      "dummy_masonaryHeater_exists",
                      "dummy_fireplace_exists",
                      "building_walls_material",
                      "building_roof_material",
                      "building_year_built_periodic_bins",
                      "building_renovation_categorial_5levels",
                      "valhalla_distance_to_copenhagen_AUTO_in_min",
                      "POPDensity_Mean_POP_per_gridCell",
                      "valhalla_isochrone_AUTO_30min_Radius_inMeters",
                      "geo_buffer_100meters_forest_DUMMY",
                      "geo_buffer_100meters_park_DUMMY",
                      "geo_buffer_100meters_industrial_DUMMY",
                      "geo_buffer_100meters_natureReserve_DUMMY",
                      "geo_buffer_100meters_wetland_DUMMY",
                      "geo_buffer_100meters_Ocean_or_beach_DUMMY",
                      "geo_buffer_100meters_water_or_resovoir_DUMMY",
                      "geo_buffer_100meters_river_or_stream_or_canal_DUMMY",
                      "geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY",
                      "geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY",
                      "geo_buffer_100meters_Rail_or_lightRail_DUMMY",
                      "Sale_year_month",
                      "geo_zipcode_4digits",
                      "Sale_Time_place",
                      'EPC_D123_Total_Heating_Demand_in_kWh_Normalized_AdjustedForApartments',
                      'advert_Newest_Advert_days_on_market',
                      'property_type_BBR',
                      "Varmepumpe_pred_and_actual_90percent_threshold",                               
                      "Varmepumpe_pred_and_actual_95percent_threshold",                               
                      "Varmepumpe_pred_and_actual_96percent_threshold",                               
                      "Varmepumpe_pred_and_actual_97percent_threshold",                               
                      "Varmepumpe_pred_and_actual_98percent_threshold", 
                      "Varmepumpe_pred_and_actual_99percent_threshold", 
                      "Solarceller_pred_and_actual_90percent_threshold",                              
                      "Solarceller_pred_and_actual_95percent_threshold",                              
                      "Solarceller_pred_and_actual_96percent_threshold",                              
                      "Solarceller_pred_and_actual_97percent_threshold",                              
                      "Solarceller_pred_and_actual_98percent_threshold",                              
                      "Solarceller_pred_and_actual_99percent_threshold",
                      "Solvarme_pred_and_actual_90percent_threshold",                                 
                      "Solvarme_pred_and_actual_95percent_threshold",                                 
                      "Solvarme_pred_and_actual_96percent_threshold",                                 
                      "Solvarme_pred_and_actual_97percent_threshold",                                 
                      "Solvarme_pred_and_actual_98percent_threshold",                                 
                      "Solvarme_pred_and_actual_99percent_threshold"
                      )

# Select only the specified columns
data <- data[, selected_columns]


```


In this chapter we will assess the robustness and address potential limitations of the main analysis, we conducted several alterations to the model and its variables. These modifications aim to validate the stability and reliability of our final specification, as detailed in Equation 4. Table (ADD TABLE NUMBER) displays the results, with Model 1 representing the main specification of Equation 4 (as shown in Table 3, Model 6).

<!-- % outliers - remove obs. by control and dependent variable -->
In models 2 to 4, we alter control and dependent variables by removing potential outliers and data errors to see how robust our main results are. In model 2, we remove observations with sales prices more significant than 10 million DKK (EUR 1.3 million), and in model 3, we exclude observations where the price per square meter is less than  DKK (EUR 39) or greater than  95.000 DKK (EUR 12.350). In Model 4, we remove observations based on control variables, properties where the energy source is unknown, properties with more than four bathrooms or no bathroom, properties with more than four bathrooms and properties with more than seven or no rooms. In model 5, we combine all the criteria from models 2 to 4. From models 2 to 5, all key variables do not seem to change drastically in terms of significance and sign; however, similar to the EPC effects, when we analysed the property type segment, we found that on average, the most energy-efficient EPC label does not seem to out performe lesser energy-efficient labels compared to label D. Moreover, when it comes to the models fit in model 5 we obtain a within $R^2$ of up to 0.527, compared to 0.442 in our main result (model 6, table 2). This means that in model 5, we can explain 52.7\% of the variation within the fixed-effects clusters. This result further suggests a potential non-linear relationship between energy efficiency and property prices. While energy-efficient properties are generally valued higher than non-energy-efficient ones, there appears to be a threshold beyond which additional efficiency does not translate into additional property value.

<!-- % energy consumption -->
Furthermore, we utilise the energy consumption of dwellings. In this context, \( EE_{i} \) in equation 4 will represent the natural logarithm of the estimated energy consumption per year of dwelling i in kWh. The reason for using energy consumption is to test if the findings align with one another, which, in that case, increases confidence in the validity of the findings. After all, if a price premium is found for energy efficient labels, where the main determinant of these labels is estimated energy consumption, then one would expect that energy consumption would show similar results, i.e. higher consumption would lead to higher discounts in prices. However, if that is not the case, then one explanation might be that the signalling effect from the labels is of greater importance to consumers as they do not necessarily assume to use the same amount of energy as the reports state. This argument aligns with what Wahlström (2016) points out in their study. However, for this argument to hold, we must assume that the energy-efficient labels are truly capturing the label effect and not incorporating other potential effects, e.g. from potential omitted variables or measurement errors. Another explanation would simply be that the difference between the two depicts a potential bias or measurement error in our regression. The results are shown in model 6 and support the findings from the main results. Energy consumption has a negative effect on property prices and is significant at 1\% level. Based on the result, a 1\% increase in energy consumption leads to a decrease in prices of 9.7\%. This result shows that energy consumption is quite elastic. It is worth mentioning that from our data extraction process from the EPC reports, we could not extract energy consumption for all properties due to data errors and because many reports do not report estimated energy consumption. This means that when using energy consumption, our sample contains 582.690 observations, which is about 20\% less than our full sample in our main result.

Next, we mitigate potential bias related to the price-demand relationship by using the time on the market as a proxy for demand. This approach addresses the potential issue where lower transaction prices might correlate with longer selling time due to lower demand. By analyzing how quickly energy-efficient houses sell, in addition to their selling prices, we can ensure that the observed effects of energy efficiency are consistent and not solely driven by price mechanisms. The result is shown in model 7, which further complements our main finding and the previous findings regarding the non-linearity between energy efficiency and property prices. That is, using time on the market as an alternative measure, we observe that A2010 properties sell the fastest, followed by A2020 and A2015, reinforcing the observed non-linear relationship. Model 7 shows that labels A2020, A2015 and A2010 are sold on average 31, 24 and 34 days faster than D labelled properties, whereas properties with labels B and C are sold on average 18 and 16 days faster. Conversely, properties labeled E, F, and G, which are not energy efficient, take on average 13, 22, and 26 days longer to sell compared to D-labeled properties. Additionally, these results align with insights provided by real estate agents as detailed in the [ADD CHAPTER NUMBER] section of the EPBD and Danish EPC Scheme.
:::

![Robustnes Testing](images/Results/Robustes_Testing_part_1.jpeg){.figure-top fig-align="center" width="75%" }
![Robustnes Testing](images/Results/Robustes_Testing_part_2.jpeg){.figure-top fig-align="center" width="75%" }


::: {.callout-caution collapse="true"}
## Result from R :

```{r, message=FALSE, warning=FALSE}

#######################################################################
# ----------------->>> Main model
#######################################################################

model_1 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")



#######################################################################
# ----------------->>>  model 2: filter price < 10.000.000 (1.300.000 EUR)
#######################################################################

# Filter based on the ratio
filtered_data <- data[data$price <= 11500000, ]


model_2 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=filtered_data, vcov = "HC1")



#######################################################################
# ----------------->>>  model 3: filter price per square meter  300<= X <= 95000 dkk (39 to 9100 eur)
#######################################################################
# Calculate price per unit living space
data$price_per_unit_living_space <- data$price / data$unit_living_space

# Define lower and upper bounds for the ratio
ratio_lower_bound <- 300
ratio_upper_bound <- 95000

# Filter based on the ratio
filtered_data <- data[data$price_per_unit_living_space >= ratio_lower_bound &
                      data$price_per_unit_living_space <= ratio_upper_bound, ]


model_3 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=filtered_data, vcov = "HC1")



#######################################################################
# ----------------->>>  model 4: eliminate properties by characteristics
#######################################################################

# Remove categories >7 and no_rooms from building_number_of_rooms_categorical
filtered_data <- subset(data, building_number_of_rooms_categorical != ">7" & 
                              building_number_of_rooms_categorical != "no_rooms")

# Remove categories "greater than 4" and "no bathrooms" from building_number_of_bathrooms_categorical
filtered_data <- subset(filtered_data, building_number_of_bathrooms_categorical != "greater than 4" & 
                                         building_number_of_bathrooms_categorical != "no bathrooms")

# Remove category "greater than 4 toilets" from building_number_of_toilets_categorical
filtered_data <- subset(filtered_data, building_number_of_toilets_categorical != "greater than 4 toilets")

# Remove category "Unknown" from EPC_energy_sources_factors_15levels
filtered_data <- subset(filtered_data, EPC_energy_sources_factors_15levels != "Unknown")



model_4 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=filtered_data, vcov = "HC1")


#######################################################################
# ----------------->>>  model 5: Combine models 2-4
#######################################################################

# ------------------------- Filter based on the TOTAL PRICE
filtered_data <- data[data$price <= 11500000, ]

# ----------------------------- filter price per square meter
# Define lower and upper bounds for the ratio
ratio_lower_bound <- 300
ratio_upper_bound <- 95000

# Filter based on the ratio
filtered_data <- filtered_data[filtered_data$price_per_unit_living_space >= ratio_lower_bound &
                               filtered_data$price_per_unit_living_space <= ratio_upper_bound, ]

# ----------------------------- filter by property characteristics 

# Remove categories >7 and no_rooms from building_number_of_rooms_categorical
filtered_data <- subset(filtered_data, building_number_of_rooms_categorical != ">7" & 
                              building_number_of_rooms_categorical != "no_rooms")

# Remove categories "greater than 4" and "no bathrooms" from building_number_of_bathrooms_categorical
filtered_data <- subset(filtered_data, building_number_of_bathrooms_categorical != "greater than 4" & 
                                         building_number_of_bathrooms_categorical != "no bathrooms")

# Remove category "greater than 4 toilets" from building_number_of_toilets_categorical
filtered_data <- subset(filtered_data, building_number_of_toilets_categorical != "greater than 4 toilets")

# Remove category "Unknown" from EPC_energy_sources_factors_15levels
filtered_data <- subset(filtered_data, EPC_energy_sources_factors_15levels != "Unknown")





model_5 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=filtered_data, vcov = "HC1")



#######################################################################
# ----------------->>> Model 6 set energy consumption as dependent variable
#######################################################################
model_6 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       # EPC_D123_Registered_energy_label+
                       log(EPC_D123_Total_Heating_Demand_in_kWh_Normalized_AdjustedForApartments)+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")





#######################################################################
# ----------------->>>  model 7: set time on the market as dependent variable
#######################################################################
model_7 <- feols(advert_Newest_Advert_days_on_market ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       # this works !!! INTERACTION
                       # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       # log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Total_energy_cost_saved_allrenovations+
                   
                       # EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted+
                       # EPC_D123_Total_energy_cost_saved_allrenovations_Adjusted*EPC_D123_Feature_profit_renovations_total_investment_cost_Adjusted+
                       # # ----
                       # EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # EPC_D123_Feature_other_renovations_total_cost_savings+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost+
                       # EPC_D123_Feature_profit_renovations_total_investment_cost*EPC_D123_Feature_profit_renovations_total_cost_savings+
                       # 
                 
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")



# ============================================================
# ----------------->>>  make table 
# ============================================================

models <- list("Model 1:" = model_1,
               "Model 2:" = model_2,
               "Model 3:" = model_3,
               "Model 4:" = model_4,
               "Model 5:" = model_5,
               "Model 6:" = model_6,
               "Model 7:" = model_7
               # "Model 8:" = model_8,
               # "Model 9:" = model_9,
               # "Model 10:" = model_10,
               # "Model 11:" = model_11
               )

addon_map <- data.frame(
  raw = c("nobs", "r.squared", "adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), #, "aic", "bic", "dw"),
  clean = c("N.Obs.", "R2", "R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), #, "AIC", "BIC", "Durbin-Watson"),
  fmt = c(0, 4, 4, 4, 4, 4)#, 4, 4, 4)
)

# Create the rows of the fixed effects in the table
timeFE        <- c("Time FE",'YES','YES','YES','YES','YES','YES','YES')#,'YES','YES','YES','YES','YES')
placeFE      <- c("4 digit zip FE" ,'YES','YES','YES','YES','YES','YES','YES')#,'YES','YES','YES','YES','YES')
timeplaceFE  <- c("Time & place Interaction" ,"YES", "YES","YES","YES", "YES","YES",'YES')#,'YES','YES','YES','YES',"YES")

dfFE <- data.frame(timeFE, placeFE,timeplaceFE)

# change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly
dfFE_new <- as.data.frame(t(dfFE))

# Run Modelsummary()
modelsummary(models,
             stars = c("*" = .1, "**" = .05, "***" = .01),
             gof_map=addon_map,
             title = "Dependent Variable: log(price)",
             add_rows = dfFE_new
             )#,coef_map=coef)




```
:::

::: para
Finally, we assess the robustness of the observed price premium for solar heating, solar cells, and heat pumps as reported in the main results (Model 6, Table 2). We do this by running multiple models representing equation 4 where we continuously increasing the probability threshold for the three variables. The findings are shown in table (ADD TABLE NUMBER). As before, model 1 represents the main results with 85\% threshold for the three variables. For Models 2 through 7, thresholds were increased to 95\%, 96\%, 97\%, 98\% and 99\%, respectively. For Solar heating and solar cells the coefficients are fairly stable with only minor changes and significant at 1\% level in all accounts. Interestingly, as we increase the threshold for solar cells the premium increase and ranges from 3.35\% to 4.48\%. Whereas for solar heating the premium decreases as we increase the threshold where the premium ranges 1\% to 1.9\%. For heat pumps, the significance level shifts from 1\% in Model 1 to 5\% for thresholds of 95\% to 97\%, then returns to 1\% at the 98\% and 99\% thresholds. However, the coefficient for heat pumps shows minor changes ranging from 0.40\% to 0.72\%. Moreover, the coefficient for other key variables and control variables do not seem to change significantly as the threshold increases. Its worth noting that although increasing the threshold does sharpen the variable by decreasing false positive observations it comes at the cost of potentially increasing False negatives. However, regardless of the threshold, we find that all components have a positive effect on property prices, although heat pumps are fairly inelastic in all cases. 
:::

::: {.callout-caution collapse="true"}
## Result from R :

```{r}

rm(list = ls())
# Trigger garbage collection to free up memory
gc()


# Read in main datafile
path <- 'D:/Thesis/Data/Thesis_main_dataset_FINALE.csv'

# path <- 'D:/Thesis/Data/3_EDA_and_filtering/Final_set/rebuild/Thesis_main_dataset_FINALE.csv'

data <- vroom(path)

data <- data[!is.na(data$valhalla_distance_to_copenhagen_AUTO_in_min), ]
data <- data %>%
  filter(RowID_MAIN_boliga_ROW_ID_unitID != "a3c6d473-8940-416b-a81d-119eef9edf6b")

################################################################
# -------------- FACTOR VARIABLES !
################################################################


# property type
set_levels = c("Detached-house","Rowhouse","Apartment","Duplex")
data$property_type_BBR <- factor(data$property_type_BBR, levels = set_levels)

# walls material
set_levels = c("Bricks","Timber","lightweight concrete blocks", "concrete","Other_Materials","Timber Framing","Fibercement without asbest","metal")
data$building_walls_material <- factor(data$building_walls_material,levels = set_levels)

# roof material
set_levels = c("Fibercement with asbest","Metal", "Bricks", "concrete tiles", "Fibercement without asbest", "Low-slope roofing felt", "High-slope roofing felt", "Other_materials", "Thatched roof")
data$building_roof_material <- factor(data$building_roof_material,levels = set_levels)

# sold before built dummy
data$dummy_sold_before_built <- factor(data$dummy_sold_before_built)

# number of rooms
set_levels = c("4","5","3","6","2","7",">7","1","no_rooms")
data$building_number_of_rooms_categorical <- factor(data$building_number_of_rooms_categorical, levels = set_levels)

# bathroom
data$building_number_of_bathrooms_categorical <- factor(data$building_number_of_bathrooms_categorical)

# toilette 
# set_levels = c('1','2','3', '4')
# data$building_number_of_toilets_categorical <- ifelse(is.na(data$building_number_of_toilets_categorical), 0, data$building_number_of_toilets_categorical)
data$building_number_of_toilets_categorical <- factor(data$building_number_of_toilets_categorical)

# # floor quantity building
set_levels = c( "1-floor","5 to 10-floors","2-floors","3-floors","4-floors","11 to 15 floors","more than 15 floors")
data$building_floor_quantity_in_building_Categorical_7levels <- factor(data$building_floor_quantity_in_building_Categorical_7levels, levels = set_levels)

# year built categorical 
set_levels = c("1951-1960",  "1890-1930", "1961-1972" , "1931-1950" , "2007-2013" , "1999-2006" , "2014-2023" ,"below_1890" ,"1979-1998", "1973-1978")
data$building_year_built_periodic_bins <- factor(data$building_year_built_periodic_bins, levels = set_levels)

# renovations
set_levels = c("Not Renovated",">20","11-20","0-5","6-10")
data$building_renovation_categorial_5levels <- factor(data$building_renovation_categorial_5levels, levels = set_levels)


data$dummy_garage_builtin <- factor(data$dummy_garage_builtin)
data$dummy_garage_detached <- factor(data$dummy_garage_detached)
data$dummy_outhouse_builtin <- factor(data$dummy_outhouse_builtin)
data$dummy_outhouse_detached <- factor(data$dummy_outhouse_detached)
data$dummy_carport_builtin <- factor(data$dummy_carport_builtin)
data$dummy_carport_detached <- factor(data$dummy_carport_detached)
data$dummy_conservatory_builtin <- factor(data$dummy_conservatory_builtin)
data$dummy_conservatory_detached <- factor(data$dummy_conservatory_detached)
data$dummy_Greenhouse_exists <- factor(data$dummy_Greenhouse_exists)
data$dummy_basement_exists <- factor(data$dummy_basement_exists)
data$dummy_swimming_pool_exists <- factor(data$dummy_swimming_pool_exists)

data$dummy_boiler_exists <- factor(data$dummy_boiler_exists)
data$dummy_woodStove_exists <- factor(data$dummy_woodStove_exists)
data$dummy_oilStove_exists <- factor(data$dummy_oilStove_exists)
data$dummy_masonaryHeater_exists <- factor(data$dummy_masonaryHeater_exists)
data$dummy_fireplace_exists <- factor(data$dummy_fireplace_exists)


# energy label : current 
set_levels <- c("D","A2020","A2015",  "A2010", "B","C","E","F","G")
data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = set_levels)

# energy label profit reno
set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G")
data$EPC_D123_energy_label_profit_reno <- factor(data$EPC_D123_energy_label_profit_reno, levels = set_levels)

# energy label all reno
set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G")
data$EPC_D123_energy_label_all_reno <- factor(data$EPC_D123_energy_label_all_reno, levels = set_levels)



set_levels <- c('District heating','Natural gas', 'Oil' ,'Wood and District heating', 'Wood pellets','Wood and electricity', 'Electricity and Wood pellets', 'Electricity and District heating', 'Electricity and Natural gas', 'Electricity', 'Wood', 'Unknown', 'Other source combination','Electricity and Oil')    
data$EPC_energy_sources_factors_15levels <- factor(data$EPC_energy_sources_factors_15levels, levels = set_levels)


data$geo_buffer_100meters_forest_DUMMY <- factor(data$geo_buffer_100meters_forest_DUMMY)
data$geo_buffer_100meters_park_DUMMY <- factor(data$geo_buffer_100meters_park_DUMMY)
data$geo_buffer_100meters_industrial_DUMMY <- factor(data$geo_buffer_100meters_industrial_DUMMY)
data$geo_buffer_100meters_recreationGround_DUMMY <- factor(data$geo_buffer_100meters_recreationGround_DUMMY)
data$geo_buffer_100meters_natureReserve_DUMMY <- factor(data$geo_buffer_100meters_natureReserve_DUMMY)
data$geo_buffer_100meters_wetland_DUMMY <- factor(data$geo_buffer_100meters_wetland_DUMMY)
data$geo_buffer_100meters_Ocean_or_beach_DUMMY <- factor(data$geo_buffer_100meters_Ocean_or_beach_DUMMY)
data$geo_buffer_100meters_water_or_resovoir_DUMMY <- factor(data$geo_buffer_100meters_water_or_resovoir_DUMMY)
data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY <- factor(data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY)
data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY <- factor(data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY)
data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY <- factor(data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY)
data$geo_buffer_100meters_Rail_or_lightRail_DUMMY <- factor(data$geo_buffer_100meters_Rail_or_lightRail_DUMMY)

data$Varmepumpe_pred_and_actual_85percent_threshold <- factor(data$Varmepumpe_pred_and_actual_85percent_threshold)
data$Solarceller_pred_and_actual_85percent_threshold <- factor(data$Solarceller_pred_and_actual_85percent_threshold)
data$Solvarme_pred_and_actual_85percent_threshold <- factor(data$Solvarme_pred_and_actual_85percent_threshold)


## suggestion dummies 
data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic)                                                 
data$EPC_D123_Profit_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_walls)
data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells)
data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system)
data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system)
data$EPC_D123_Profit_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_floor)
data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump)
data$EPC_D123_Profit_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_other)
data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating)
data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation)
data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating)
data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic)
data$EPC_D123_Other_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_walls)
data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells)
data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system)
data$EPC_D123_Other_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_water_system)
data$EPC_D123_Other_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_floor)
data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump)
data$EPC_D123_Other_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_other)
data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating)
data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation)
data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating)
 

#### the total suggestions 
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dumy_walls <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation)
data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating)


# Create month of sale variable
data$sale_Date <- as.Date(data$sale_Date)
data$Sale_month <- format(data$sale_Date, "%Y-%m")

# step up:
data$sale_Year <- factor(data$sale_Year)
data$Sale_month <- factor(data$Sale_month)
data$geo_zipcode_4digits <- factor(data$geo_zipcode_4digits)


# create interactions 
data$Sale_year_month <- interaction(data$sale_Year, data$Sale_month)
data$Sale_Time_place <- interaction(data$Sale_year_month, data$geo_zipcode_4digits)



##################################################################################################
# ----------------->>>  text classification models sensitivity check
##################################################################################################

#######################################################################
# ----------------->>> Label 85% threshold Main model
#######################################################################

model_1 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+

                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_85percent_threshold+
                       Solarceller_pred_and_actual_85percent_threshold+
                       Solvarme_pred_and_actual_85percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")


#######################################################################
# ----------------->>> Label 90% threshold Main model
#######################################################################

model_2 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+

                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_90percent_threshold+
                       Solarceller_pred_and_actual_90percent_threshold+
                       Solvarme_pred_and_actual_90percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")



#######################################################################
# ----------------->>> Label 95% threshold Main model
#######################################################################

model_3 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+

                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_95percent_threshold+
                       Solarceller_pred_and_actual_95percent_threshold+
                       Solvarme_pred_and_actual_95percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")


#######################################################################
# ----------------->>> Label 97% threshold Main model
#######################################################################

model_4 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+

                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_96percent_threshold+
                       Solarceller_pred_and_actual_96percent_threshold+
                       Solvarme_pred_and_actual_96percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")


#######################################################################
# ----------------->>> Label 97% threshold Main model
#######################################################################

model_5 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+

                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_97percent_threshold+
                       Solarceller_pred_and_actual_97percent_threshold+
                       Solvarme_pred_and_actual_97percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")



#######################################################################
# ----------------->>> Label 98% threshold Main model
#######################################################################

model_6 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+

                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_98percent_threshold+
                       Solarceller_pred_and_actual_98percent_threshold+
                       Solvarme_pred_and_actual_98percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")



#######################################################################
# ----------------->>> Label 99% threshold Main model
#######################################################################

model_7 <- feols(log(price) ~
                       #-------------------------------------- EPC DATA                        
                       EPC_D123_Registered_energy_label+
                   
                       # -----------------------  renovation variables 
                       factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                       log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                       log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
                   
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                       EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+
                       
                       EPC_energy_sources_factors_15levels+
                   
                       #-------------------------------------- TEXT CLASSIFICATION
                       Varmepumpe_pred_and_actual_99percent_threshold+
                       Solarceller_pred_and_actual_99percent_threshold+
                       Solvarme_pred_and_actual_99percent_threshold+
                       
                       #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                       log(unit_living_space)+
                       property_type_BBR+
                       dummy_sold_before_built+
                       building_number_of_rooms_categorical+
                       building_number_of_bathrooms_categorical+
                       building_number_of_toilets_categorical+
                       building_floor_quantity_in_building_Categorical_7levels+
                   
                       dummy_garage_builtin+
                       dummy_garage_detached+
                       dummy_outhouse_builtin+
                       dummy_outhouse_detached+
                       dummy_carport_builtin+
                       dummy_carport_detached+
                       dummy_conservatory_builtin+
                       dummy_conservatory_detached+
                       dummy_Greenhouse_exists+
                       dummy_basement_exists+
                       dummy_swimming_pool_exists+
                       dummy_boiler_exists+
                       dummy_woodStove_exists+
                       dummy_oilStove_exists+
                       dummy_masonaryHeater_exists+
                       dummy_fireplace_exists+
                        
                       #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                       building_walls_material+
                       building_roof_material+
                       building_year_built_periodic_bins+
                       building_renovation_categorial_5levels+
                       
                       #-------------------------------------- GEO VARIABLES 
                       log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                       log(POPDensity_Mean_POP_per_gridCell)+
                       log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                       geo_buffer_100meters_forest_DUMMY+
                       geo_buffer_100meters_park_DUMMY+
                       geo_buffer_100meters_industrial_DUMMY+
                       geo_buffer_100meters_natureReserve_DUMMY+
                       geo_buffer_100meters_wetland_DUMMY+
                       geo_buffer_100meters_Ocean_or_beach_DUMMY+
                       geo_buffer_100meters_water_or_resovoir_DUMMY+
                       geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                       geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                       geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                       geo_buffer_100meters_Rail_or_lightRail_DUMMY
                 
                      | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data, vcov = "HC1")



# ============================================================
# ----------------->>>  make table 
# ============================================================

models <- list("Model 1:" = model_1,
               "Model 2:" = model_2,
               "Model 3:" = model_3,
               "Model 4:" = model_4,
               "Model 5:" = model_5,
               "Model 6:" = model_6,
               "Model 7:" = model_7
               # "Model 8:" = model_8,
               # "Model 9:" = model_9,
               # "Model 10:" = model_10,
               # "Model 11:" = model_11
               )

addon_map <- data.frame(
  raw = c("nobs", "r.squared", "adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), #, "aic", "bic", "dw"),
  clean = c("N.Obs.", "R2", "R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), #, "AIC", "BIC", "Durbin-Watson"),
  fmt = c(0, 4, 4, 4, 4, 4)#, 4, 4, 4)
)

# Create the rows of the fixed effects in the table
timeFE        <- c("Time FE",'YES','YES','YES','YES','YES','YES','YES')#,'YES','YES','YES','YES','YES')
placeFE      <- c("4 digit zip FE" ,'YES','YES','YES','YES','YES','YES','YES')#,'YES','YES','YES','YES','YES')
timeplaceFE  <- c("Time & place Interaction" ,"YES", "YES","YES","YES", "YES","YES",'YES')#,'YES','YES','YES','YES',"YES")

dfFE <- data.frame(timeFE, placeFE,timeplaceFE)

# change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly
dfFE_new <- as.data.frame(t(dfFE))

# Run Modelsummary()
modelsummary(models,
             stars = c("*" = .1, "**" = .05, "***" = .01),
             gof_map=addon_map,
             title = "Dependent Variable: log(price)",
             add_rows = dfFE_new
             )#,coef_map=coef)



```
:::

![Text classification - robustness testing](images/Results/text_classification_robustnesTest.jpeg){.figure-top fig-align="center" width="75%" }






# Conclusion 

::: para
This research conducted in this thesis set out to investigate whether home-buyers are inattentive towards energy efficiency by utilizing a unique and comprehensive dataset. The dataset was constructed from scratch by extracting and merging valuable information from 776.106 EPC reports and over 2.2 million property transaction. leading to the main dataset utilized being of 728.812 transaction of residential properties in Denmark spanning from 1. July 2010 to 2023. With the unique dataset we made an innovative effort to understand the Danish housing market's dynamics in relation to energy efficiency. Through the meticulous extraction of information using regular expressions, OCR, and NLP techniques, and the subsequent merging with transaction data from boliga.dk, we have been able to create an unprecedentedly detailed dataset allowing us to conduct a multifaceted analysis that accounts for various property types and a range of factors influencing property prices and  address many issues that are not tackled by the bulk of the empirical literature. 
The primary contribution of this study is threefold. First, unlike previous studies, which, to the best of our knowledge, have only looked at detached homes, this study broadens its reach to include all residential property types in Denmark. This gives a comprehensive overview of the housing sector's diverse structural characteristics and market dynamics. Second, our study goes beyond just energy labels and usage by incorporating additional information from EPC reports on energy-efficient renovation potential. This allows us to investigate if home buyers not only pay premiums for energy-efficient properties but also consider the potential energy-efficiency of property from suggested renovation. Thirdly, we evaluated the impact of tighter building regulations introduced in January 2018, which set higher energy performance standards for new buildings and stricter regulation towards renovations on existing properties.

the results show that energy performance significantly influences property prices in Denmark. Specifically, our findings reveal notable price premiums for energy-efficient properties, suggesting that home buyers are willing to pay higher price for energy-efficient properties. This finding aligns with the broader literature on the topic. Moreover, with the inclusion of renovation potential, we find that home buyers also significantly value properties with great potential for energy efficiency. Furthermore, by accounting for energy-efficient potential of properties the label effect significantly changes. This result underscores the dynamic nature of housing preferences, where anticipation of future energy improvements plays a pivotal role in property valuation. Conversely, ignoring these factors may result in overestimating the  influence from EPC labels on property prices.

Moreover, by disaggregating our main model by property type segment, we find evidence of a potential non-linear relationship towards energy-efficient properties. Interestingly, a notable trend is the diminishing returns on energy efficiency labels across property type segments. In comparison to label D, our results suggest that although a price premium is found for more energy-efficient properties, this premium declines as the property becomes more energy-efficient. Our robustness tests further complement these findings, indicating that at a certain point, additional efficiency does not translate into additional perceived value.

Finally, we examing the effects of the stricter building regulations that came to force in 2018. Our result indicate that the policy did have a significant impact on home buyers' preferences and market dynamics. Moreover, energy-efficient properties, particularly those with higher energy performance certificates (EPC) like label A2020, saw increased price premiums after the policy took force, reflecting a growing consumer preference for higher energy efficiency. Additionally, the policy increased the value of properties with higher energy efficiency potential and increased demand for district heating. Overall, our findings demonstrate that the regulation did help with shifting the housing market towards prioritizing energy efficiency.  

Despite the comprehensive nature of our dataset and our efforts to account for a wide range of factors, suc has geographical characteristics and property quality indicators, we can still not be certain of our analysis being clear from potential omitted-variable bias. As an example, factors such as neighborhood socioeconomic status, local school quality and crime rate might also influence property prices but are not fully accounted for in our analysis. Considering that these factors might affect our estimates, it might be interesting to further improve the findings of this these by including these factors for further research. Moreover, although a high dimensional fixed effects hedonic price model was used in this thesis to provide more accurate estimates and mitigate potential bias, we still face the issue of being unable to properly disentangle supply and demand effects. Thus, it might be of interest to further investigate this to properly separate the demand and supply effects to see if the effects claimed in this thesis still hold.   

In conclusion, this thesis offers significant insights into the relationship between property prices and energy efficiency in Denmark. By leveraging a uniquely detailed dataset and employing a high dimensional fixed effects hedonic model, our result appear to show that energy efficiency plays a significant role as a determinant for property prices, both in terms of current efficiency of properties and potential efficiency for future development. Moreover, this thesis also shows how policies promoting for energy efficiency can further nurture a positive trend towards more efficiency in the housing market
:::




# References {.unnumbered}

::: {#refs}
:::





# Appendix 1 : Literature Review {#appendix1 .unnumbered}

+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Authors                               | Country        | Country Area         | Price                                                | Repeated Sales | Sample period                       | Observations     | Findings Advantages                                                                                                                                                                  |
+=======================================+================+======================+======================================================+================+=====================================+==================+======================================================================================================================================================================================+
| @naess-schmidt_homes_2015             | Denmark        | Whole Country        | -   Transaction price                                | NO             | 2006-2014                           | 355.000          | -   Find significant price premium for energy efficient EPC labels and discount for non-energy efficient EPC labels                                                                  |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @jensen_market_2016                   | Denmark        | Whole country        | -   Transaction price                                | NO             | 2007-2012                           | 117.483          | -   Find significant price premium for energy efficient EPC labels and discount for non-energy efficient EPC labels                                                                  |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  | -   Find that the effects are significantly greater after the EPC became mandatory to display                                                                                        |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @wilhelmsson_how_2023                 | Sweden         | Stockholm            | -   Transaction price                                | NO             | 2012-2018                           | 5.200            | -   Finds price premium for energy efficient properties                                                                                                                              |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @stenvall_does_2022                   | Sweden         | -   Malmö            | -   Transaction price                                | NO             | 2019                                | 21.696           | -   find significant price premium for energy efficient tenant-owned apartments                                                                                                      |
|                                       |                | -   Göteborg         |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Linköping        |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Stockholm        |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Luleå            |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Umeå             |                                                      |                |                                     |                  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @wilhelmsson_energy_2019              | Sweden         | Whole Country        | -   Transaction price                                | NO             | 2013-2018                           | 100.000          | -   Finds significant price premium for energy efficient EPC labels                                                                                                                  |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @wahlstrom_doing_2016                 | Sweden         | Whole Country        | -   Transaction price                                | NO             | 2009-2010                           | 69.698           | -   find no significant price premium for energy efficient property                                                                                                                  |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  | -   find significant price premium for property components that improve energy efficiency                                                                                            |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @cerin_energy_2014                    | Sweden         | -   Gothenburg,      | -   Transaction price                                | NO             | 2009-2010                           | 67.559           | -   Finds significant energy price premium for energy efficient property                                                                                                             |
|                                       |                | -   Malmö            |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Stockholm        |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Lund             |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Umeå             |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Gävle            |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Östersund        |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Uppsala          |                                                      |                |                                     |                  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @hogberg_impact_2013                  | Sweden         | Stockholm            | -   Transaction price                                | NO             | 2009                                | 1.073            | -   Finds significant energy price premium for energy efficient property                                                                                                             |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @khazal_energy_2023                   | Norway         | Whole Country        | -   listed price                                     | YES            | -   listed price data               | -   Listed price | -   Find both price premium and premium on rent for energy efficient properties                                                                                                      |
|                                       |                |                      |                                                      |                |     -   January 2010- December 2017 |                  |                                                                                                                                                                                      |
|                                       |                |                      | -   listed Rent                                      |                | -   Listed rent                     |     -   750.000  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |     -   January 2011-September 2017 |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     | -   Listed rent  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |     -   670.000  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @olaussen_energy_2019                 | Norway         | Oslo                 | -   Transaction price                                | YES            | 2000-2014                           | 4.397            | -   find little to now effect                                                                                                                                                        |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @olaussen_energy_2017                 | Norway         | Oslo                 | -   Transaction price                                | YES            | 2000-2014                           | 3.912            | -   Find now price premium                                                                                                                                                           |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @fuerst_green_2016                    | Finland        | -   Helsinki         | -   Transaction price                                | NO             | 2009-2012                           | 6.194            | -   Find significant price premium for energy efficient EPC labels                                                                                                                   |
|                                       |                | -   Espoo            |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Vantaa           |                                                      |                |                                     |                  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @brounen_economics_2011               | Netherlands    | Whole Country        | -   Transaction price                                | NO             | 2008- August 2009                   | 177.318          | -   Find price premium for energy efficient EPC labels and price discount for non-energy efficient EPC labels                                                                        |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @fuerst_energy_2016                   | Wales          | Whole Country        | -   Transaction price                                | YES            | 2003 - February 2014                | 191.544          | -   find price premium for energy efficient property                                                                                                                                 |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @de_ayala_price_2016                  | Spain          | Whole Country        | -   Stated price by owner                            | NO             | 2013                                | 1.507            | -   find price premium for energy efficient property                                                                                                                                 |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @marmolejo-duarte_uneven_2019         | Spain          | Barcelona            | -   listed price                                     | NO             | 2015                                | 3.479            | -   Find price premium for energy efficient EPC properties, however the effect becomes mixed with added controls                                                                     |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @hyland_value_2013                    | Ireland        | Whole Country        | -   listed price                                     | NO             | 2008-2012                           | -   Listed price | -   Find both price premium and discount for energy efficient and non-energy efficient EPC labels                                                                                    |
|                                       |                |                      |                                                      |                |                                     |                  | -   Find lower premium for listed rent compared to listed sale price                                                                                                                 |
|                                       |                |                      | -   listed rents                                     |                |                                     |     -   397.258  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     | -   Listed Rent  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |     -   888.211  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @mccord_spatial_2020                  | Ireland        | Belfast              | -   Transaction price                                | NO             | April 2013 - July 2014              | 1478             | -   Find that EPC labels effect prices but it varies depending on property location                                                                                                  |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  | -   Find that the EPC labels effects on prices follow both patterns of spatial clustering and randomness                                                                             |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @taruttis_estimating_2022             | Germany        | Whole Country        | -   listed price                                     | NO             | 2014-2018                           | 422.242          | -   Find significant price premium effect for energy efficient properties                                                                                                            |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @fuerst_does_2015                     | England        | Whole Country        | -   Transaction prices                               | YES            | 1995-2012                           | 333.095          | -   Find significant price premium effect from energy efficient EPC labels and discount for non-energy efficient labels                                                              |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @fregonara_energy_2017                | Italy          | Turin                | -   Transaction prices                               | NO             | 2011-2014                           | 879              | -   find no significant effect from energy efficient labels on prices                                                                                                                |
|                                       |                |                      | -   listing prices                                   |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      | -   difference between listing and transaction price |                |                                     |                  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @copiello_price_2023                  | Italy          | Padua                | -   listed price                                     | NO             | March 2022 - July 2022              | 321              | -   Find high price premiums for energy efficient EPC labelled properties and discounts for non-energy efficient EPC labelled properties                                             |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @barreca_epc_2021                     | Italy          | Turin                | -   listed price                                     | NO             | 2015-2018                           | 2092             | -   Find significant price premium for energy efficient EPC labels and price discount for non-energy efficient EPC labels                                                            |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @dellanna_epc_2019                    | -   Italy      | -   Turin            | -   listed price                                     | NO             | 2014-2018                           | 3224             | -   They find price premium for energy efficient EPC labelled properties in both Turin and Barcelona                                                                                 |
|                                       | -   Spain      | -   Barcelona        |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  | -   Property market in Turin value Energy efficient labels higher than in Barcelona                                                                                                  |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @bio_intelligence_service_energy_2013 | Austria        | -   Vienna           | -   listed price                                     | NO             | July - December 2012                | -   listed price | -   find price premium for energy efficient EPC labels                                                                                                                               |
|                                       |                | -   Lower Austria    |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      | -   listed rents                                     |                |                                     |     -   1.189    |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     | -   listed rents |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |     -   1.026    |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @bio_intelligence_service_energy_2013 | Belgium        | -   Brussels-Capital | -   Listed price                                     | NO             | Second half of year 2012            | -   listed price | -   find price premium for energy efficient EPC Index (CPEB score) on both listed rents and listed sales prices                                                                      |
|                                       |                | -   Flanders         |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                | -   Walloia          | -   listed rents                                     |                |                                     |     -   18.200   |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     | -   listed rents |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |     -   8.076    |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @bio_intelligence_service_energy_2013 | France         | -   Lille            | -   Transaction price                                | NO             | January 2011- October 2012          | 3718             | -   find price premium for energy efficient EPC labels                                                                                                                               |
|                                       |                | -   Marseille        |                                                      |                |                                     |                  |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @bio_intelligence_service_energy_2013 | Ireland        | Whole Country        | -   Listed price                                     | NO             | 2008-2012                           | -   listed price | -   find price premium for properties with energy efficient EPC labels in both sales prices and rental rates                                                                         |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      | -   listed rents                                     |                |                                     |     -   20.000   |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     | -   listed rents |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |                  |                                                                                                                                                                                      |
|                                       |                |                      |                                                      |                |                                     |     -   28.000   |                                                                                                                                                                                      |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| @bio_intelligence_service_energy_2013 | United Kingdom | Oxford               | -   Transaction Price                                | NO             | February 2012 - September 2012      | 253              | -   Dont find significant effect from energy efficient labels on property prices. However, they find significant effect from potential EPC label after renovation on property prices |
+---------------------------------------+----------------+----------------------+------------------------------------------------------+----------------+-------------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

: Rough overview of the main literature related to EPC and property prices.

# Appendix 2 : Policy effect assessment ? {#appendix2 .unnumbered}







# Appendix 3 : EPC Text classification {#appendix2 .unnumbered}

## Calorific Value table

[![Calorific Values used to standardize all energy consumption related variables](images/Calorific_values_table.PNG){.figure-top fig-align="center" width="100%" style="border: 2px solid silver;"}](https://www.retsinformation.dk/eli/lta/2021/939)\^1

\^1 This table displays the calorific values used to standardize all energy consumption related variables.
Source: [@klima-_energi-_og_forsyningsministeriet_bekendtgorelse_2021].

## Classifiers {.unnumbered}

## Text classification results {.unnumbered}

![Text classifiaction for Solar cells - Results from all models (sorted by f1 score)](images/Appendix_Solarcells_models_results.PNG){.figure-top fig-align="center" width="100%" style="border: 2px solid silver;"}

![Text classifiaction for Solar heating system - Results from all models (sorted by f1 score)](images/Appendix_Solvarme_models_results.PNG){.figure-top fig-align="center" width="100%" style="border: 2px solid silver;"}

![Text classifiaction for Heat pump system - Results from all models (sorted by f1 score)](images/Appendix_Varmepumpe_models_results.PNG){.figure-top fig-align="center" width="100%" style="border: 2px solid silver;"}


# Appendix 4: Robustness test- policy effect 

```{r,message=FALSE, warning=FALSE}
#| label: fig-policy
#| fig-cap: result_policy

# 
# # cutoff date
# cutoff_date <- as.Date("2018-01-01")
# 
# # Split the dataframe into two based on the sale_Date
# data_before_jan2018 <- subset(data, sale_Date <= cutoff_date)
# data_after_jan2018 <- subset(data, sale_Date > cutoff_date)

# Cutoff date
cutoff_date <- as.Date("2018-01-01")

# Define the date range for 3 years before and after the cutoff date
start_date <- cutoff_date - 4 * 365
end_date <- cutoff_date + 4 * 365

# Split the dataframe into two based on the sale_Date
data_before_jan2018 <- subset(data, sale_Date > start_date & sale_Date <= cutoff_date)
data_after_jan2018 <- subset(data, sale_Date > cutoff_date & sale_Date <= end_date)


#######################################################################
# ----------------->>>  before
#######################################################################


# run regression :
model_1 <- feols(log(price) ~
                 #-------------------------------------- EPC DATA                        
                 EPC_D123_Registered_energy_label+
             
                 # -----------------------  renovation variables 
                 factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                 log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                 log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
             
                 # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
             
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
             
                 EPC_energy_sources_factors_15levels+
             
                 #-------------------------------------- TEXT CLASSIFICATION
                 Varmepumpe_pred_and_actual_85percent_threshold+
                 Solarceller_pred_and_actual_85percent_threshold+
                 Solvarme_pred_and_actual_85percent_threshold+
                 
                 #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                 log(unit_living_space)+
                 property_type_BBR+
                 dummy_sold_before_built+
                 building_number_of_rooms_categorical+
                 building_number_of_bathrooms_categorical+
                 building_number_of_toilets_categorical+
                 building_floor_quantity_in_building_Categorical_7levels+
             
                 dummy_garage_builtin+
                 dummy_garage_detached+
                 dummy_outhouse_builtin+
                 dummy_outhouse_detached+
                 dummy_carport_builtin+
                 dummy_carport_detached+
                 dummy_conservatory_builtin+
                 dummy_conservatory_detached+
                 dummy_Greenhouse_exists+
                 dummy_basement_exists+
                 dummy_swimming_pool_exists+
                 dummy_boiler_exists+
                 dummy_woodStove_exists+
                 dummy_oilStove_exists+
                 dummy_masonaryHeater_exists+
                 dummy_fireplace_exists+
                  
                 #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                 building_walls_material+
                 building_roof_material+
                 building_year_built_periodic_bins+
                 building_renovation_categorial_5levels+
                 
                 #-------------------------------------- GEO VARIABLES 
                 log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                 log(POPDensity_Mean_POP_per_gridCell)+
                 log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                 geo_buffer_100meters_forest_DUMMY+
                 geo_buffer_100meters_park_DUMMY+
                 geo_buffer_100meters_industrial_DUMMY+
                 geo_buffer_100meters_natureReserve_DUMMY+
                 geo_buffer_100meters_wetland_DUMMY+
                 geo_buffer_100meters_Ocean_or_beach_DUMMY+
                 geo_buffer_100meters_water_or_resovoir_DUMMY+
                 geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                 geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                 geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                 geo_buffer_100meters_Rail_or_lightRail_DUMMY
           
                | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data_before_jan2018, vcov = "HC1")





#######################################################################
# ----------------->>>  after policy
#######################################################################


# run regression :

# run regression :

model_2 <- feols(log(price) ~
                 #-------------------------------------- EPC DATA                        
                 EPC_D123_Registered_energy_label+
             
                 # -----------------------  renovation variables 
                 factor(EPC_D123_LABEL_JUMP_current_to_allreno)+
                 log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
                 log(EPC_D123_Total_energy_cost_saved_allrenovations+1)+
             
                 # log(EPC_D123_Feature_profit_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_other_renovations_total_cost_savings+1)+
                 # log(EPC_D123_Feature_profit_renovations_total_investment_cost+1)+
             
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+
                 EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ 
             
                 EPC_energy_sources_factors_15levels+
             
                 #-------------------------------------- TEXT CLASSIFICATION
                 Varmepumpe_pred_and_actual_85percent_threshold+
                 Solarceller_pred_and_actual_85percent_threshold+
                 Solvarme_pred_and_actual_85percent_threshold+
                 
                 #-------------------------------------- PROPERTY CHARACTERISTICS : STRUCTURE
                 log(unit_living_space)+
                 property_type_BBR+
                 dummy_sold_before_built+
                 building_number_of_rooms_categorical+
                 building_number_of_bathrooms_categorical+
                 building_number_of_toilets_categorical+
                 building_floor_quantity_in_building_Categorical_7levels+
             
                 dummy_garage_builtin+
                 dummy_garage_detached+
                 dummy_outhouse_builtin+
                 dummy_outhouse_detached+
                 dummy_carport_builtin+
                 dummy_carport_detached+
                 dummy_conservatory_builtin+
                 dummy_conservatory_detached+
                 dummy_Greenhouse_exists+
                 dummy_basement_exists+
                 dummy_swimming_pool_exists+
                 dummy_boiler_exists+
                 dummy_woodStove_exists+
                 dummy_oilStove_exists+
                 dummy_masonaryHeater_exists+
                 dummy_fireplace_exists+
                  
                 #-------------------------------------- PROPERTY CHARACTERISTICS : CONDITION 
                 building_walls_material+
                 building_roof_material+
                 building_year_built_periodic_bins+
                 building_renovation_categorial_5levels+
                 
                 #-------------------------------------- GEO VARIABLES 
                 log(valhalla_distance_to_copenhagen_AUTO_in_min)+
                 log(POPDensity_Mean_POP_per_gridCell)+
                 log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+
                 geo_buffer_100meters_forest_DUMMY+
                 geo_buffer_100meters_park_DUMMY+
                 geo_buffer_100meters_industrial_DUMMY+
                 geo_buffer_100meters_natureReserve_DUMMY+
                 geo_buffer_100meters_wetland_DUMMY+
                 geo_buffer_100meters_Ocean_or_beach_DUMMY+
                 geo_buffer_100meters_water_or_resovoir_DUMMY+
                 geo_buffer_100meters_river_or_stream_or_canal_DUMMY+
                 geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+
                 geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+
                 geo_buffer_100meters_Rail_or_lightRail_DUMMY
           
                | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data_after_jan2018, vcov = "HC1")




# ---------------- MODEL SUMMARY -------------------

models <- list("Before policy"= model_1, 
               "After policy" = model_2
               # "2 years before policy" = model_3,
               # "2 years after policy" = model_4
               )

# addon_map <- data.frame(raw = c("nobs", "adj.r.squared"),
#                       clean = c("N.Obs.", "R2Adj."),
#                       fmt = c(0, 3))

addon_map <- data.frame(raw = c("nobs", "r.squared","adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"),
                      clean = c("N.Obs.","R2" ,"R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"),
                      fmt = c(0, 4,4,4,4,4))

# ---- ADD THE FIXED EFFECTS TEXT
timeFE        <- c("Time FE",'YES','YES')#,'YES','YES')
placeFE      <- c("4 digit zip FE" ,'YES','YES')#,'YES','YES')
timeplaceFE  <- c("Time & place Interaction" ,'YES','YES')#,'YES','YES')

dfFE <- data.frame(timeFE, placeFE,timeplaceFE)

# change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly
dfFE_new <- as.data.frame(t(dfFE))

# Run Modelsummary()
modelsummary(models,
             stars = c("*" = .1, "**" = .05, "***" = .01),
             gof_map=addon_map,
             title = "Dependent Variable: log(price)",
             add_rows = dfFE_new
             )#,coef_map=coef)
```


<!-- ### Market Segments: age{.unnumbered} -->

<!-- ```{r,message=FALSE, warning=FALSE} -->
<!-- #| label: fig-segment_age -->
<!-- #| fig-cap: result_segment_age -->

<!-- ####################################################################### -->
<!-- # ----------------->>>  built between 2000-2023 -->
<!-- ####################################################################### -->


<!-- # run regression : -->

<!-- model_1 <- feols(log(price) ~ -->
<!--                  EPC_D123_Registered_energy_label+ -->
<!--                  EPC_D123_allReno_label_numericValues+ -->

<!--                  EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                  EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                  EPC_energy_sources_factors_15levels+ -->

<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+    -->


<!--                  log(unit_living_space)+ -->
<!--                  property_type_BBR+ -->
<!--                  building_walls_material+ -->
<!--                  building_roof_material+ -->
<!--                  dummy_sold_before_built+ -->
<!--                  # unit_room_quantity+ -->
<!--                  building_number_of_rooms_categorical+ -->
<!--                  building_number_of_bathrooms_categorical+ -->
<!--                  building_number_of_toilets_categorical+ -->
<!--                  # building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->
<!--                  # building_year_built_periodic_bins+ -->
<!--                  building_renovation_categorial_5levels+ -->

<!--                  log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->
<!--                  log(POPDensity_Mean_POP_per_gridCell)+ -->
<!--                  log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                  geo_buffer_100meters_forest_DUMMY+ -->
<!--                  geo_buffer_100meters_park_DUMMY+ -->
<!--                  geo_buffer_100meters_industrial_DUMMY+ -->
<!--                  geo_buffer_100meters_natureReserve_DUMMY+ -->
<!--                  geo_buffer_100meters_wetland_DUMMY+ -->
<!--                  geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->
<!--                  geo_buffer_100meters_water_or_resovoir_DUMMY+ -->
<!--                  geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->
<!--                  geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->
<!--                  geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->
<!--                  geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                  Varmepumpe_pred_and_actual_85percent_threshold+ -->
<!--                  Solarceller_pred_and_actual_85percent_threshold+ -->
<!--                  Solvarme_pred_and_actual_85percent_threshold -->
<!--                  | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data[data['building_year_built']>=2000,], vcov = "HC1") -->




<!-- ####################################################################### -->
<!-- # ----------------->>>  built between 1960-1999 -->
<!-- ####################################################################### -->


<!-- # run regression : -->

<!-- model_2 <- feols(log(price) ~ -->
<!--                  EPC_D123_Registered_energy_label+ -->
<!--                  EPC_D123_allReno_label_numericValues+ -->

<!--                  EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                  EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                  EPC_energy_sources_factors_15levels+ -->

<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+    -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->

<!--                  log(unit_living_space)+ -->
<!--                  property_type_BBR+ -->
<!--                  building_walls_material+ -->
<!--                  building_roof_material+ -->
<!--                  dummy_sold_before_built+ -->
<!--                  # unit_room_quantity+ -->
<!--                  building_number_of_rooms_categorical+ -->
<!--                  building_number_of_bathrooms_categorical+ -->
<!--                  building_number_of_toilets_categorical+ -->
<!--                  # building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                  # building_year_built_periodic_bins+ -->
<!--                  building_renovation_categorial_5levels+ -->

<!--                  log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->
<!--                  log(POPDensity_Mean_POP_per_gridCell)+ -->
<!--                  log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                  geo_buffer_100meters_forest_DUMMY+ -->
<!--                  geo_buffer_100meters_park_DUMMY+ -->
<!--                  geo_buffer_100meters_industrial_DUMMY+ -->
<!--                  geo_buffer_100meters_natureReserve_DUMMY+ -->
<!--                  geo_buffer_100meters_wetland_DUMMY+ -->
<!--                  geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->
<!--                  geo_buffer_100meters_water_or_resovoir_DUMMY+ -->
<!--                  geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->
<!--                  geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->
<!--                  geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->
<!--                  geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                  Varmepumpe_pred_and_actual_85percent_threshold+ -->
<!--                  Solarceller_pred_and_actual_85percent_threshold+ -->
<!--                  Solvarme_pred_and_actual_85percent_threshold -->
<!--                  | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data[data['building_year_built']<2000 & -->
<!--                                                                                         data['building_year_built']>=1960,], vcov = "HC1") -->



<!-- ####################################################################### -->
<!-- # ----------------->>>  built below 1960 -->
<!-- ####################################################################### -->


<!-- # run regression : -->

<!-- model_3 <- feols(log(price) ~ -->
<!--                  EPC_D123_Registered_energy_label+ -->
<!--                  EPC_D123_allReno_label_numericValues+ -->

<!--                  EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                  EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                  EPC_energy_sources_factors_15levels+ -->


<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+    -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->

<!--                  log(unit_living_space)+ -->
<!--                  property_type_BBR+ -->
<!--                  building_walls_material+ -->
<!--                  building_roof_material+ -->
<!--                  dummy_sold_before_built+ -->
<!--                  # unit_room_quantity+ -->
<!--                  building_number_of_rooms_categorical+ -->
<!--                  building_number_of_bathrooms_categorical+ -->
<!--                  building_number_of_toilets_categorical+ -->
<!--                  # building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->
<!--                  # building_year_built_periodic_bins+ -->
<!--                  building_renovation_categorial_5levels+ -->

<!--                  log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->
<!--                  log(POPDensity_Mean_POP_per_gridCell)+ -->
<!--                  log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                  geo_buffer_100meters_forest_DUMMY+ -->
<!--                  geo_buffer_100meters_park_DUMMY+ -->
<!--                  geo_buffer_100meters_industrial_DUMMY+ -->
<!--                  geo_buffer_100meters_natureReserve_DUMMY+ -->
<!--                  geo_buffer_100meters_wetland_DUMMY+ -->
<!--                  geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->
<!--                  geo_buffer_100meters_water_or_resovoir_DUMMY+ -->
<!--                  geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->
<!--                  geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->
<!--                  geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->
<!--                  geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                  Varmepumpe_pred_and_actual_85percent_threshold+ -->
<!--                  Solarceller_pred_and_actual_85percent_threshold+ -->
<!--                  Solvarme_pred_and_actual_85percent_threshold -->
<!--                  | Sale_year_month + geo_zipcode_4digits + Sale_Time_place, data=data[data['building_year_built']<1960,], vcov = "HC1") -->


<!-- # ---------------- MODEL SUMMARY ------------------- -->

<!-- models <- list("Built 2000-2023"= model_1,  -->
<!--                "Built 1960-1999" = model_2, -->
<!--                "Built before 1960" = model_3 -->
<!--                ) -->

<!-- # addon_map <- data.frame(raw = c("nobs", "adj.r.squared"), -->
<!-- #                       clean = c("N.Obs.", "R2Adj."), -->
<!-- #                       fmt = c(0, 3)) -->

<!-- addon_map <- data.frame(raw = c("nobs", "r.squared","adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), -->
<!--                       clean = c("N.Obs.","R2" ,"R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), -->
<!--                       fmt = c(0, 4,4,4,4,4)) -->

<!-- # ---- ADD THE FIXED EFFECTS TEXT -->
<!-- timeFE        <- c("Time FE",'YES','YES','YES') -->
<!-- placeFE      <- c("4 digit zip FE" ,'YES','YES','YES') -->
<!-- timeplaceFE  <- c("Time & place Interaction" ,'YES','YES','YES') -->

<!-- dfFE <- data.frame(timeFE, placeFE,timeplaceFE) -->

<!-- # change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly -->
<!-- dfFE_new <- as.data.frame(t(dfFE)) -->

<!-- # Run Modelsummary() -->
<!-- modelsummary(models, -->
<!--              stars = c("*" = .1, "**" = .05, "***" = .01), -->
<!--              gof_map=addon_map, -->
<!--              title = "Dependent Variable: log(price)", -->
<!--              add_rows = dfFE_new -->
<!--              )#,coef_map=coef) -->


<!-- ``` -->

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all'} -->
<!-- # Remove variables to free space from above chunk -->
<!-- rm( -->
<!--    model_1 , -->
<!--    model_2 , -->
<!--    model_3  -->
<!-- ) -->
<!-- # Trigger garbage collection to free up memory -->
<!-- gc() -->

<!-- ``` -->

<!-- ### Impact from policy ?{.unnumbered} -->

<!-- -   Policy that sets restrictions on both new buildings and on renovations on buildings -->
<!--     -   A push that makes sure that renovations truly improves energy efficiency of buildings -->
<!--     -   restrictions on the conditions of renovations e.g. if ventilation or windows are changed then they must meed the standards -->
<!--     -   [link 1](https://stateofgreen.com/en/news/a-brief-introduction-to-denmarks-green-ambitions-policies-and-initiatives/) -->
<!--     -   [link 2](https://vancouvereconomic.com/wp-content/uploads/2023/01/Danish-Energy-Requirements-Regulations.pdf) -->
<!-- -   Using model nr. 11 : with renovation variables -->

<!-- ```{r,message=FALSE, warning=FALSE} -->
<!-- #| label: fig-policy -->
<!-- #| fig-cap: result_policy -->


<!-- # cutoff date -->
<!-- cutoff_date <- as.Date("2018-01-01") -->

<!-- # Split the dataframe into two based on the sale_Date -->
<!-- data_before_jan2018 <- subset(data, sale_Date <= cutoff_date) -->
<!-- data_after_jan2018 <- subset(data, sale_Date > cutoff_date) -->


<!-- ####################################################################### -->
<!-- # ----------------->>>  before -->
<!-- ####################################################################### -->


<!-- # run regression : -->

<!-- model_1 <- feols(log(price) ~ -->
<!--                  EPC_D123_Registered_energy_label+ -->
<!--                  EPC_D123_allReno_label_numericValues+ -->

<!--                  EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                  EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                  EPC_energy_sources_factors_15levels+ -->

<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+    -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->

<!--                  log(unit_living_space)+ -->
<!--                  property_type_BBR+ -->
<!--                  building_walls_material+ -->
<!--                  building_roof_material+ -->
<!--                  dummy_sold_before_built+ -->
<!--                  # unit_room_quantity+ -->
<!--                  building_number_of_rooms_categorical+ -->
<!--                  building_number_of_bathrooms_categorical+ -->
<!--                  building_number_of_toilets_categorical+ -->
<!--                  # building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->
<!--                  building_year_built_periodic_bins+ -->
<!--                  building_renovation_categorial_5levels+ -->

<!--                  log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->
<!--                  log(POPDensity_Mean_POP_per_gridCell)+ -->
<!--                  log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                  geo_buffer_100meters_forest_DUMMY+ -->
<!--                  geo_buffer_100meters_park_DUMMY+ -->
<!--                  geo_buffer_100meters_industrial_DUMMY+ -->
<!--                  geo_buffer_100meters_natureReserve_DUMMY+ -->
<!--                  geo_buffer_100meters_wetland_DUMMY+ -->
<!--                  geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->
<!--                  geo_buffer_100meters_water_or_resovoir_DUMMY+ -->
<!--                  geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->
<!--                  geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->
<!--                  geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->
<!--                  geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                  Varmepumpe_pred_and_actual_85percent_threshold+ -->
<!--                  Solarceller_pred_and_actual_85percent_threshold+ -->
<!--                  Solvarme_pred_and_actual_85percent_threshold -->
<!--                  | Sale_year_month + geo_zipcode_4digits , data=data_before_jan2018, vcov = "HC1") -->




<!-- ####################################################################### -->
<!-- # ----------------->>>  after policy -->
<!-- ####################################################################### -->


<!-- # run regression : -->

<!-- # run regression : -->

<!-- model_2 <- feols(log(price) ~ -->
<!--                  EPC_D123_Registered_energy_label+ -->
<!--                  EPC_D123_allReno_label_numericValues+ -->

<!--                  EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                  EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                  EPC_energy_sources_factors_15levels+ -->


<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+    -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->

<!--                  log(unit_living_space)+ -->
<!--                  property_type_BBR+ -->
<!--                  building_walls_material+ -->
<!--                  building_roof_material+ -->
<!--                  dummy_sold_before_built+ -->
<!--                  # unit_room_quantity+ -->
<!--                  building_number_of_rooms_categorical+ -->
<!--                  building_number_of_bathrooms_categorical+ -->
<!--                  building_number_of_toilets_categorical+ -->
<!--                  # building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->
<!--                  building_year_built_periodic_bins+ -->
<!--                  building_renovation_categorial_5levels+ -->

<!--                  log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->
<!--                  log(POPDensity_Mean_POP_per_gridCell)+ -->
<!--                  log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                  geo_buffer_100meters_forest_DUMMY+ -->
<!--                  geo_buffer_100meters_park_DUMMY+ -->
<!--                  geo_buffer_100meters_industrial_DUMMY+ -->
<!--                  geo_buffer_100meters_natureReserve_DUMMY+ -->
<!--                  geo_buffer_100meters_wetland_DUMMY+ -->
<!--                  geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->
<!--                  geo_buffer_100meters_water_or_resovoir_DUMMY+ -->
<!--                  geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->
<!--                  geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->
<!--                  geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->
<!--                  geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                  Varmepumpe_pred_and_actual_85percent_threshold+ -->
<!--                  Solarceller_pred_and_actual_85percent_threshold+ -->
<!--                  Solvarme_pred_and_actual_85percent_threshold -->
<!--                  | Sale_year_month + geo_zipcode_4digits , data=data_after_jan2018, vcov = "HC1") -->



<!-- # ---------------- MODEL SUMMARY ------------------- -->

<!-- models <- list("Before policy"= model_1,  -->
<!--                "After policy" = model_2 -->
<!--                ) -->

<!-- # addon_map <- data.frame(raw = c("nobs", "adj.r.squared"), -->
<!-- #                       clean = c("N.Obs.", "R2Adj."), -->
<!-- #                       fmt = c(0, 3)) -->

<!-- addon_map <- data.frame(raw = c("nobs", "r.squared","adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), -->
<!--                       clean = c("N.Obs.","R2" ,"R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), -->
<!--                       fmt = c(0, 4,4,4,4,4)) -->

<!-- # ---- ADD THE FIXED EFFECTS TEXT -->
<!-- timeFE        <- c("Time FE",'YES','YES') -->
<!-- placeFE      <- c("4 digit zip FE" ,'YES','YES') -->
<!-- timeplaceFE  <- c("Time & place Interaction" ,'YES','YES') -->

<!-- dfFE <- data.frame(timeFE, placeFE,timeplaceFE) -->

<!-- # change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly -->
<!-- dfFE_new <- as.data.frame(t(dfFE)) -->

<!-- # Run Modelsummary() -->
<!-- modelsummary(models, -->
<!--              stars = c("*" = .1, "**" = .05, "***" = .01), -->
<!--              gof_map=addon_map, -->
<!--              title = "Dependent Variable: log(price)", -->
<!--              add_rows = dfFE_new -->
<!--              )#,coef_map=coef) -->



<!-- ``` -->

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all'} -->
<!-- # Remove variables to free space from above chunk -->
<!-- rm( -->
<!--    model_1 , -->
<!--    model_2 -->
<!-- ) -->
<!-- # Trigger garbage collection to free up memory -->
<!-- gc() -->

<!-- ``` -->

<!-- ### Energy efficiency and time on market{.unnumbered} -->

<!-- -   running model 11 but with Time on market (days) as dependent variable -->

<!-- ```{r,message=FALSE, warning=FALSE} -->

<!-- ####################################################################### -->
<!-- # ----------------->>>  TOM -->
<!-- ####################################################################### -->

<!-- # run regression : -->

<!-- model_1 <- feols(log(advert_Total_days_on_market) ~ -->
<!--                  EPC_D123_Registered_energy_label+ -->

<!--                  EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                  EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                  EPC_energy_sources_factors_15levels+ -->

<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->
<!--                  EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ -->
<!--                  #    -->
<!--                  dummy_garage_builtin+ -->
<!--                  dummy_garage_detached+ -->
<!--                  dummy_outhouse_builtin+ -->
<!--                  dummy_outhouse_detached+ -->
<!--                  dummy_carport_builtin+ -->
<!--                  dummy_carport_detached+ -->
<!--                  dummy_conservatory_builtin+ -->
<!--                  dummy_conservatory_detached+ -->
<!--                  dummy_Greenhouse_exists+ -->
<!--                  dummy_basement_exists+ -->
<!--                  dummy_swimming_pool_exists+ -->
<!--                  dummy_boiler_exists+ -->
<!--                  dummy_woodStove_exists+ -->
<!--                  dummy_oilStove_exists+ -->
<!--                  dummy_masonaryHeater_exists+ -->
<!--                  dummy_fireplace_exists+ -->

<!--                  log(unit_living_space)+ -->
<!--                  property_type_BBR+ -->
<!--                  building_walls_material+ -->
<!--                  building_roof_material+ -->
<!--                  dummy_sold_before_built+ -->
<!--                  # unit_room_quantity+ -->
<!--                  building_number_of_rooms_categorical+ -->
<!--                  building_number_of_bathrooms_categorical+ -->
<!--                  building_number_of_toilets_categorical+ -->
<!--                  # building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                  building_year_built_periodic_bins+ -->
<!--                  building_renovation_categorial_5levels+ -->

<!--                  log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->
<!--                  log(POPDensity_Mean_POP_per_gridCell)+ -->
<!--                  log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                  geo_buffer_100meters_forest_DUMMY+ -->
<!--                  geo_buffer_100meters_park_DUMMY+ -->
<!--                  geo_buffer_100meters_industrial_DUMMY+ -->
<!--                  geo_buffer_100meters_natureReserve_DUMMY+ -->
<!--                  geo_buffer_100meters_wetland_DUMMY+ -->
<!--                  geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->
<!--                  geo_buffer_100meters_water_or_resovoir_DUMMY+ -->
<!--                  geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->
<!--                  geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->
<!--                  geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->
<!--                  geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                  Varmepumpe_pred_and_actual_85percent_threshold+ -->
<!--                  Solarceller_pred_and_actual_85percent_threshold+ -->
<!--                  Solvarme_pred_and_actual_85percent_threshold -->
<!--                  | Sale_year_month + geo_zipcode_4digits+Sale_Time_place , data=data, vcov = "HC1") -->
<!-- # Sale_Time_place -->


<!-- # ---------------- MODEL SUMMARY ------------------- -->

<!-- models <- list("TOM"= model_1) -->

<!-- # addon_map <- data.frame(raw = c("nobs", "adj.r.squared"), -->
<!-- #                       clean = c("N.Obs.", "R2Adj."), -->
<!-- #                       fmt = c(0, 3)) -->

<!-- addon_map <- data.frame(raw = c("nobs", "r.squared","adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), -->
<!--                       clean = c("N.Obs.","R2" ,"R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), -->
<!--                       fmt = c(0, 4,4,4,4,4)) -->

<!-- # ---- ADD THE FIXED EFFECTS TEXT -->
<!-- timeFE        <- c("Time FE",'YES') -->
<!-- placeFE      <- c("4 digit zip FE" ,'YES') -->
<!-- timeplaceFE  <- c("Time & place Interaction" ,'YES') -->

<!-- dfFE <- data.frame(timeFE, placeFE,timeplaceFE) -->

<!-- # change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly -->
<!-- dfFE_new <- as.data.frame(t(dfFE)) -->

<!-- # Run Modelsummary() -->
<!-- modelsummary(models, -->
<!--              stars = c("*" = .1, "**" = .05, "***" = .01), -->
<!--              gof_map=addon_map, -->
<!--              title = "Dependent Variable: Time on the market in days", -->
<!--              add_rows = dfFE_new -->
<!--              )#,coef_map=coef) -->

<!-- ``` -->

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all'} -->
<!-- # Remove variables to free space from above chunk -->
<!-- rm( -->
<!--    model_1  -->
<!-- ) -->
<!-- # Trigger garbage collection to free up memory -->
<!-- gc() -->

<!-- ``` -->


<!-- ### Price premium Across municipalities{.unnumbered} -->

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all',message=FALSE, warning=FALSE} -->

<!-- ################################################ remove all variables in memory so far  -->
<!-- rm(list = ls()) -->
<!-- # Trigger garbage collection to free up memory -->
<!-- gc() -->

<!-- #  -->
<!-- # ################################################# read in the dataframe  -->
<!-- # path <- 'D:/Thesis/Data/Thesis_main_dataset_with_gridID_finalUpdate_withsuggestionDummies_withMunicipality.csv' -->
<!-- #    -->
<!-- # data <- vroom(path) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- ################################################################ -->

<!-- # -------------- FACTOR VARIABLES ! -->

<!-- ################################################################ -->

<!-- # property type -->

<!-- set_levels = c("Detached-house","Rowhouse","Apartment","Duplex") -->

<!-- data$property_type_BBR <- factor(data$property_type_BBR, levels = set_levels) -->

<!-- # walls material -->

<!-- set_levels = c("Bricks","Timber","lightweight concrete blocks", "concrete","Other_Materials","Timber Framing","Fibercement without asbest","metal") -->

<!-- data$building_walls_material <- factor(data$building_walls_material,levels = set_levels) -->

<!-- # roof material -->

<!-- set_levels = c("Fibercement with asbest","Metal", "Bricks", "concrete tiles", "Fibercement without asbest", "Low-slope roofing felt", "High-slope roofing felt", "Other_materials", "Thatched roof") -->

<!-- data$building_roof_material <- factor(data$building_roof_material,levels = set_levels) -->

<!-- # sold before built dummy -->

<!-- data$dummy_sold_before_built <- factor(data$dummy_sold_before_built) -->

<!-- # number of rooms -->

<!-- set_levels = c("4","5","3","6","2","7",">7","1","no_rooms") -->

<!-- data$building_number_of_rooms_categorical <- factor(data$building_number_of_rooms_categorical, levels = set_levels) -->

<!-- # bathroom -->

<!-- set_levels = c( "1","2","4","3","no_bathrooms",">4") -->

<!-- data$building_number_of_bathrooms_categorical <- factor(data$building_number_of_bathrooms_categorical, levels = set_levels) -->

<!-- # toilette  -->

<!-- set_levels = c('1','2','3', '4') -->

<!-- data$building_number_of_toilets_categorical <- ifelse(is.na(data$building_number_of_toilets_categorical), 0, data$building_number_of_toilets_categorical) -->

<!-- data$building_number_of_toilets_categorical <- factor(data$building_number_of_toilets_categorical) -->

<!-- # floor quantity building -->

<!-- set_levels = c( "1-floor","5 to 10-floors","2-floors","3-floors","4-floors","11 to 15 floors","more than 15 floors") -->

<!-- data$building_floor_quantity_in_building_Categorical_7levels <- factor(data$building_floor_quantity_in_building_Categorical_7levels, levels = set_levels) -->

<!-- # year built categorical  -->

<!-- set_levels = c("1951-1960",  "1890-1930", "1961-1972" , "1931-1950" , "2007-2013" , "1999-2006" , "2014-2023" ,"below_1890" ,"1979-1998", "1973-1978") -->

<!-- data$building_year_built_periodic_bins <- factor(data$building_year_built_periodic_bins, levels = set_levels) -->

<!-- # renovations -->

<!-- set_levels = c("Not Renovated",">20","11-20","0-5","6-10") -->

<!-- data$building_renovation_categorial_5levels <- factor(data$building_renovation_categorial_5levels, levels = set_levels) -->

<!-- data$dummy_garage_builtin <- factor(data$dummy_garage_builtin) -->

<!-- data$dummy_garage_detached <- factor(data$dummy_garage_detached) -->

<!-- data$dummy_outhouse_builtin <- factor(data$dummy_outhouse_builtin) -->

<!-- data$dummy_outhouse_detached <- factor(data$dummy_outhouse_detached) -->

<!-- data$dummy_carport_builtin <- factor(data$dummy_carport_builtin) -->

<!-- data$dummy_carport_detached <- factor(data$dummy_carport_detached) -->

<!-- data$dummy_conservatory_builtin <- factor(data$dummy_conservatory_builtin) -->

<!-- data$dummy_conservatory_detached <- factor(data$dummy_conservatory_detached) -->

<!-- data$dummy_Greenhouse_exists <- factor(data$dummy_Greenhouse_exists) -->

<!-- data$dummy_basement_exists <- factor(data$dummy_basement_exists) -->

<!-- data$dummy_swimming_pool_exists <- factor(data$dummy_swimming_pool_exists) -->

<!-- data$dummy_boiler_exists <- factor(data$dummy_boiler_exists) -->

<!-- data$dummy_woodStove_exists <- factor(data$dummy_woodStove_exists) -->

<!-- data$dummy_oilStove_exists <- factor(data$dummy_oilStove_exists) -->

<!-- data$dummy_masonaryHeater_exists <- factor(data$dummy_masonaryHeater_exists) -->

<!-- data$dummy_fireplace_exists <- factor(data$dummy_fireplace_exists) -->

<!-- # energy label : current  -->

<!-- set_levels <- c("D","A2020","A2015",  "A2010", "B","C","E","F","G") -->

<!-- data$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = set_levels) -->

<!-- # energy label profit reno -->

<!-- set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G") -->

<!-- data$EPC_D123_energy_label_profit_reno <- factor(data$EPC_D123_energy_label_profit_reno, levels = set_levels) -->

<!-- # energy label all reno -->

<!-- set_levels <- c("no_label","A2020","A2015",  "A2010", "B","C","D","E","F","G") -->

<!-- data$EPC_D123_energy_label_all_reno <- factor(data$EPC_D123_energy_label_all_reno, levels = set_levels) -->

<!-- set_levels <- c('Natural gas', 'Oil' ,'District heating','Wood and District heating', 'Wood pellets','Wood and electricity', 'Electricity and Wood pellets', 'Electricity and District heating', 'Electricity and Natural gas', 'Electricity', 'Wood', 'Unknown', 'Other source combination','Electricity and Oil')     -->

<!-- data$EPC_energy_sources_factors_15levels <- factor(data$EPC_energy_sources_factors_15levels, levels = set_levels) -->

<!-- data$geo_buffer_100meters_forest_DUMMY <- factor(data$geo_buffer_100meters_forest_DUMMY) -->

<!-- data$geo_buffer_100meters_park_DUMMY <- factor(data$geo_buffer_100meters_park_DUMMY) -->

<!-- data$geo_buffer_100meters_industrial_DUMMY <- factor(data$geo_buffer_100meters_industrial_DUMMY) -->

<!-- data$geo_buffer_100meters_recreationGround_DUMMY <- factor(data$geo_buffer_100meters_recreationGround_DUMMY) -->

<!-- data$geo_buffer_100meters_natureReserve_DUMMY <- factor(data$geo_buffer_100meters_natureReserve_DUMMY) -->

<!-- data$geo_buffer_100meters_wetland_DUMMY <- factor(data$geo_buffer_100meters_wetland_DUMMY) -->

<!-- data$geo_buffer_100meters_Ocean_or_beach_DUMMY <- factor(data$geo_buffer_100meters_Ocean_or_beach_DUMMY) -->

<!-- data$geo_buffer_100meters_water_or_resovoir_DUMMY <- factor(data$geo_buffer_100meters_water_or_resovoir_DUMMY) -->

<!-- data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY <- factor(data$geo_buffer_100meters_river_or_stream_or_canal_DUMMY) -->

<!-- data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY <- factor(data$geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY) -->

<!-- data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY <- factor(data$geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY) -->

<!-- data$geo_buffer_100meters_Rail_or_lightRail_DUMMY <- factor(data$geo_buffer_100meters_Rail_or_lightRail_DUMMY) -->

<!-- data$Varmepumpe_pred_and_actual_85percent_threshold <- factor(data$Varmepumpe_pred_and_actual_85percent_threshold) -->

<!-- data$Solarceller_pred_and_actual_85percent_threshold <- factor(data$Solarceller_pred_and_actual_85percent_threshold) -->

<!-- data$Solvarme_pred_and_actual_85percent_threshold <- factor(data$Solvarme_pred_and_actual_85percent_threshold) -->

<!-- ## suggestion dummies  -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_roof_og_attic)                                                  -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_walls) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarcells) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heating_system) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_water_system) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_floor) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_windows_and_doors) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_heatpump) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_other) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_solarheating) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_ventilation) -->

<!-- data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Profit_reno_Suggestion_Dummy_districtheating) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_roof_og_attic) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_walls <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_walls) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarcells) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heating_system) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_water_system <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_water_system) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_floor <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_floor) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_windows_and_doors) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_heatpump) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_other <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_other) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_solarheating) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_ventilation) -->

<!-- data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_Other_reno_Suggestion_Dummy_districtheating) -->

<!-- #### the total suggestions  -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation) -->

<!-- data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating <- factor(data$EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating) -->

<!-- #  -->

<!-- # Create month of sale variable -->

<!-- data$sale_Date <- as.Date(data$sale_Date) -->

<!-- data$Sale_month <- format(data$sale_Date, "%Y-%m") -->

<!-- # step up: -->

<!-- data$sale_Year <- factor(data$sale_Year) -->

<!-- data$Sale_month <- factor(data$Sale_month) -->

<!-- data$geo_zipcode_4digits <- factor(data$geo_zipcode_4digits) -->

<!-- # create interactions  -->

<!-- data$Sale_year_month <- interaction(data$sale_Year, data$Sale_month) -->

<!-- data$Sale_Time_place <- interaction(data$Sale_year_month, data$geo_zipcode_4digits) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- ################################################# calculate per municipality  -->

<!-- library(lfe) -->

<!-- # create energy and non energy efficient dummy (all A,B,C = energy efficient , D = reference and E,F,G = non energy efficient) -->

<!-- data$Energy_efficient <- ifelse(data$EPC_D123_Registered_energy_label %in% c("A2020", "A2015", "A2010", "B", "C"),  -->

<!--                                 "Efficient",  -->

<!--                                 ifelse(data$EPC_D123_Registered_energy_label == "D",  -->

<!--                                        "D",  -->

<!--                                        "Non_Efficient")) -->

<!-- # remove the NA municipal -->

<!-- data <- data[!is.na(data$name_municipality), ] -->

<!-- # factor variable  -->

<!-- set_levels <- c('D' ,'Efficient', 'Non_Efficient') -->

<!-- data$Energy_efficient <- factor(data$Energy_efficient, levels = set_levels) -->

<!-- # Initialize an empty dataframe to store results -->

<!-- results_df <- data.frame(name = character(), -->

<!--                          Efficient = character(), -->

<!--                          D = character(), -->

<!--                          Non_Efficient = character(), -->

<!--                          stringsAsFactors = FALSE) -->

<!-- # Initialize an empty list to store models -->

<!-- models_list <- list() -->

<!-- # Iterate over each municipality -->

<!-- for (municipality in unique(data$name_municipality)) { -->

<!--   # Subset the data for the current municipality -->

<!--   subset_data <- subset(data, name_municipality == municipality) -->

<!--   subset_data$Sale_Time_place <- interaction(subset_data$Sale_year_month, subset_data$geo_zipcode_4digits) -->

<!--   # Fit the regression model -->

<!--   model <- feols(log(price) ~ -->

<!--                    Energy_efficient+ -->

<!--                    # EPC_D123_Registered_energy_label+ -->

<!--                    EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                    EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                    EPC_energy_sources_factors_15levels+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation+ -->

<!--                    EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating+ -->

<!--                    dummy_garage_builtin+ -->

<!--                    dummy_garage_detached+ -->

<!--                    dummy_outhouse_builtin+ -->

<!--                    dummy_outhouse_detached+ -->

<!--                    dummy_carport_builtin+ -->

<!--                    dummy_carport_detached+ -->

<!--                    dummy_conservatory_builtin+ -->

<!--                    dummy_conservatory_detached+ -->

<!--                    dummy_Greenhouse_exists+ -->

<!--                    dummy_basement_exists+ -->

<!--                    dummy_swimming_pool_exists+ -->

<!--                    dummy_boiler_exists+ -->

<!--                    dummy_woodStove_exists+ -->

<!--                    dummy_oilStove_exists+ -->

<!--                    dummy_masonaryHeater_exists+ -->

<!--                    dummy_fireplace_exists+ -->

<!--                    property_type_BBR+ -->

<!--                    building_walls_material+ -->

<!--                    building_roof_material+ -->

<!--                    dummy_sold_before_built+ -->

<!--                    building_number_of_rooms_categorical+ -->

<!--                    building_number_of_bathrooms_categorical+ -->

<!--                    building_number_of_toilets_categorical+ -->

<!--                    building_year_built_periodic_bins+ -->

<!--                    building_renovation_categorial_5levels+ -->

<!--                    log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->

<!--                    log(POPDensity_Mean_POP_per_gridCell)+ -->

<!--                    log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                    geo_buffer_100meters_forest_DUMMY+ -->

<!--                    geo_buffer_100meters_park_DUMMY+ -->

<!--                    geo_buffer_100meters_industrial_DUMMY+ -->

<!--                    geo_buffer_100meters_natureReserve_DUMMY+ -->

<!--                    geo_buffer_100meters_wetland_DUMMY+ -->

<!--                    geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->

<!--                    geo_buffer_100meters_water_or_resovoir_DUMMY+ -->

<!--                    geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->

<!--                    geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->

<!--                    geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->

<!--                    geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                    Varmepumpe_pred_and_actual_85percent_threshold+ -->

<!--                    Solarceller_pred_and_actual_85percent_threshold+ -->

<!--                    Solvarme_pred_and_actual_85percent_threshold -->

<!--                   |Sale_year_month+ geo_zipcode_4digits+Sale_Time_place, data=subset_data, vcov = "HC1") -->

<!--   # Save the model to the list -->

<!--   models_list[[municipality]] <- model -->

<!--   # Extract the coefficients -->

<!--   coef_summary <- summary(model)$coefficients -->

<!--   print("================================================") -->

<!--   print(municipality) -->

<!--   print(summary(model)) -->

<!--   # Extract coefficients for Energy_efficient categories if they exist, else set "removed" -->

<!--   coef_efficient <- if ("Energy_efficientEfficient" %in% names(coef_summary)) unname(coef_summary["Energy_efficientEfficient"]) else "removed" -->

<!--   coef_d <- if ("Energy_efficientD" %in% names(coef_summary)) unname(coef_summary["Energy_efficientD"]) else "Reference" -->

<!--   coef_nonEfficient <- if ("Energy_efficientNon_Efficient" %in% names(coef_summary)) unname(coef_summary["Energy_efficientNon_Efficient"]) else "removed" -->

<!--   # Append the results to the dataframe -->

<!--   results_df <- rbind(results_df,  -->

<!--                       data.frame(name = municipality, -->

<!--                                  Efficient = coef_efficient, -->

<!--                                  D = coef_d, -->

<!--                                  Non_Efficient = coef_nonEfficient, -->

<!--                                  stringsAsFactors = FALSE)) -->

<!-- } -->

<!-- # Save result:  -->

<!-- path <- 'D:/Thesis/Data/regression_per_municipalities.csv' -->

<!-- write.csv(results_df, file = path, row.names = FALSE) -->

<!-- ``` -->

```{r}
###############################################################
# Read in the result from all the regressions per municipal
###############################################################

path <- 'D:/Thesis/The_Thesis_paper/Main_report/A_The_Report_Quarto/Status_report/regression_results/Regression_model12_at_municipalityLevel.csv'
municipal_results <- read.csv(path, stringsAsFactors = FALSE,sep = ";")

###############################################################
# Make plot of price premium for energy efficiency
###############################################################

# replace "" to NA 
municipal_results$Efficient_sig[municipal_results$Efficient_sig == ""] <- NA
municipal_results$Non_Efficient_sig[municipal_results$Non_Efficient_sig == ""] <- NA

# set as percent 
municipal_results$Efficient_sig <- municipal_results$Efficient_sig*100
municipal_results$Non_Efficient_sig <- municipal_results$Non_Efficient_sig*100


```

```{r, echo=FALSE, results='hide',fig.keep='all'}
###################################### data prep
# read in shape file from GADM
denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp")

denmark_municipalities <- denmark_municipalities %>%
  select(NAME_2, geometry)


# Merge the dataframes on NAME_2 and name
merged_data <- merge(denmark_municipalities,municipal_results, 
                     by.x = "NAME_2", by.y = "name" )

```


```{r,message=FALSE, warning=FALSE,fig.width=16, fig.height=8}
# fig.width=10, fig.height=12} 


# =======================================================================================
# --------------------------------------------------------------------------------------

# ----- price premium - energy efficient labels

# =======================================================================================
# --------------------------------------------------------------------------------------

color_option_viridis <- "G" #  F- red

# Plot the map with ggplot2
main_plot_premium <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Efficient_sig), color = "black", size = 0.2) +
  scale_fill_viridis_c(option = color_option_viridis, name = element_text("Price \npremium (%)", face = "bold"), na.value = "grey60", 
                       direction = -1, labels = scales::comma) +
  theme_minimal() +
  theme(
    legend.position = "right",
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8),
    plot.title = element_text(size = 11, face = "bold"),
    plot.subtitle = element_text(size = 9),
    axis.title = element_text(size = 7), # Increase the size of axis titles
    axis.text = element_text(size = 7),   # Decrease the size of axis text
    # axis.ticks = element_blank(),
    axis.ticks.length = unit(0.15, "cm"),  # Set ticks length
    axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward
    # panel.grid = element_blank()
    panel.grid.major = element_line(color = "lightgray", size = 0.15),  # Add light major grid lines
    panel.grid.minor = element_blank(),  # Hide minor grid lines
  ) +
  labs(
    title = "Price Premium for Energy efficient labels",
    subtitle = "Energy efficient labels are A2020, A2015, 2010, B and C with D as reference",
    # caption = "Data Source: Calculation made by author. \nNote: Grey areas are statistically insignificant results",
    x = "Longitude",
    y = "Latitude"
  )

# Define the bounding box coordinates for the magnified area around Copenhagen
cph_xmin <- 12
cph_xmax <- 12.8
cph_ymin <- 55.5
cph_ymax <- 56

# Create the inset plot for the magnified area around Copenhagen
premium_plot_small <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Efficient_sig), color = "black", size = 0.2,show.legend = FALSE) +
  scale_fill_viridis_c(option = color_option_viridis, na.value = "grey60", 
                       direction = -1, labels = scales::comma) +
  theme_minimal() +
  theme(
    axis.title = element_blank(),  # Remove axis titles
    axis.text = element_blank(),   # Remove axis labels
    axis.ticks = element_blank(),  # Remove axis ticks
    panel.grid = element_blank(),  # Remove panel grid
    # panel.border = element_blank() # Remove panel border
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  ) +
  coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax))
  # annotate("rect", xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax, color = "black", fill = NA)


# Add the inset plot as an annotation to the main plot
premium_plot <- main_plot_premium +
  geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame
  annotation_custom(ggplotGrob(premium_plot_small), xmin = cph_xmin*1.0, xmax = cph_xmax*1.15, ymin = cph_ymin*1.009, ymax = cph_ymax*1.037) + # the zoom plot position
  geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot
  annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow
  theme(
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  )

# =======================================================================================
# --------------------------------------------------------------------------------------

# ----- price discount non energy efficient 

# =======================================================================================
# --------------------------------------------------------------------------------------



color_option_viridis <- "F" #  F- red

# Plot the map with ggplot2
main_plot_discount <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Non_Efficient_sig), color = "black", size = 0.2) +
  scale_fill_viridis_c(option = color_option_viridis, name = element_text("Price \nDiscount (%)", face = "bold"), na.value = "grey60", 
                       direction = 1, labels = scales::comma) +
  theme_minimal() +
  theme(
    legend.position = "right",
    legend.title = element_text(size = 9),
    legend.text = element_text(size = 8),
    plot.title = element_text(size = 11, face = "bold"),
    plot.subtitle = element_text(size = 9),
    axis.title = element_text(size = 7), # Increase the size of axis titles
    axis.text = element_text(size = 7),   # Decrease the size of axis text
    # axis.ticks = element_blank(),
    axis.ticks.length = unit(0.15, "cm"),  # Set ticks length
    axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward
    # panel.grid = element_blank()
    panel.grid.major = element_line(color = "lightgray", size = 0.15),  # Add light major grid lines
    panel.grid.minor = element_blank(),  # Hide minor grid lines
  ) +
  labs(
    title = "Price discount for Non-energy efficient labels",
    subtitle = "Non-Energy efficient labels are E,F and G with D as reference",
    caption = "Data Source: Calculation made by author. \nNote: Grey areas are statistically insignificant results",
    x = "Longitude",
    y = "Latitude"
  )

# Define the bounding box coordinates for the magnified area around Copenhagen
cph_xmin <- 12
cph_xmax <- 12.8
cph_ymin <- 55.5
cph_ymax <- 56

# Create the inset plot for the magnified area around Copenhagen
discount_plot_small <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Non_Efficient_sig), color = "black", size = 0.2,show.legend = FALSE) +
  scale_fill_viridis_c(option = color_option_viridis, name = "Average Price (in millions)", na.value = "grey60", 
                       direction = 1, labels = scales::comma) +
  theme_minimal() +
  theme(
    axis.title = element_blank(),  # Remove axis titles
    axis.text = element_blank(),   # Remove axis labels
    axis.ticks = element_blank(),  # Remove axis ticks
    panel.grid = element_blank(),  # Remove panel grid
    # panel.border = element_blank() # Remove panel border
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  ) +
  coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax))
  # annotate("rect", xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax, color = "black", fill = NA)

# # add the city points to the zoom plot
# inset_plot_cph <- inset_plot_cph +
#   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5, show.legend = FALSE)+ #,shape = 4,stroke = 3.5) +
#   scale_color_manual(values = professional_colors)
# 

# Add the inset plot as an annotation to the main plot
discount_plot <- main_plot_discount +
  geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame
  annotation_custom(ggplotGrob(discount_plot_small), xmin = cph_xmin*1.0, xmax = cph_xmax*1.15, ymin = cph_ymin*1.009, ymax = cph_ymax*1.037) + # the zoom plot position
  geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot
  annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow
  theme(
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  )



# ====================================
#  Make the plot
# ====================================

# Arrange plots horizontally in the first row
plots_row <- grid.arrange(premium_plot,
                          discount_plot,
                          nrow = 1,
                          ncol = 2)

```




























<!-- ###  Count na values  -->
<!-- ```{r} -->
<!-- # Columns of interest -->
<!-- columns_of_interest <- c( -->
<!--   "EPC_D123_Registered_energy_label", -->
<!--   "EPC_D123_LABEL_JUMP_current_to_allreno", -->
<!--   "EPC_D123_Feature_profit_renovations_total_investment_cost", -->
<!--   "EPC_D123_Total_energy_cost_saved_allrenovations", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_roof_og_attic", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_walls", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarcells", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heating_system", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_water_system", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_floor", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_windows_and_doors", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_heatpump", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_other", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_solarheating", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_ventilation", -->
<!--   "EPC_D123_TOTAL_profit_and_other_Suggestion_Dummy_districtheating", -->
<!--   "EPC_energy_sources_factors_15levels", -->
<!--   "Varmepumpe_pred_and_actual_85percent_threshold", -->
<!--   "Solarceller_pred_and_actual_85percent_threshold", -->
<!--   "Solvarme_pred_and_actual_85percent_threshold", -->
<!--   "unit_living_space", -->
<!--   "dummy_sold_before_built", -->
<!--   "building_number_of_rooms_categorical", -->
<!--   "building_number_of_bathrooms_categorical", -->
<!--   "building_number_of_toilets_categorical", -->
<!--   "building_floor_quantity_in_building_Categorical_7levels", -->
<!--   "dummy_garage_builtin", -->
<!--   "dummy_garage_detached", -->
<!--   "dummy_outhouse_builtin", -->
<!--   "dummy_outhouse_detached", -->
<!--   "dummy_carport_builtin", -->
<!--   "dummy_carport_detached", -->
<!--   "dummy_conservatory_builtin", -->
<!--   "dummy_conservatory_detached", -->
<!--   "dummy_Greenhouse_exists", -->
<!--   "dummy_basement_exists", -->
<!--   "dummy_swimming_pool_exists", -->
<!--   "dummy_boiler_exists", -->
<!--   "dummy_woodStove_exists", -->
<!--   "dummy_oilStove_exists", -->
<!--   "dummy_masonaryHeater_exists", -->
<!--   "dummy_fireplace_exists", -->
<!--   "building_walls_material", -->
<!--   "building_roof_material", -->
<!--   "building_year_built_periodic_bins", -->
<!--   "building_renovation_categorial_5levels", -->
<!--   "valhalla_distance_to_copenhagen_AUTO_in_min", -->
<!--   "POPDensity_Mean_POP_per_gridCell", -->
<!--   "valhalla_isochrone_AUTO_30min_Radius_inMeters", -->
<!--   "geo_buffer_100meters_forest_DUMMY", -->
<!--   "geo_buffer_100meters_park_DUMMY", -->
<!--   "geo_buffer_100meters_industrial_DUMMY", -->
<!--   "geo_buffer_100meters_natureReserve_DUMMY", -->
<!--   "geo_buffer_100meters_wetland_DUMMY", -->
<!--   "geo_buffer_100meters_Ocean_or_beach_DUMMY", -->
<!--   "geo_buffer_100meters_water_or_resovoir_DUMMY", -->
<!--   "geo_buffer_100meters_river_or_stream_or_canal_DUMMY", -->
<!--   "geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY", -->
<!--   "geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY", -->
<!--   "geo_buffer_100meters_Rail_or_lightRail_DUMMY" -->
<!-- ) -->

<!-- # Count NA values for each column -->
<!-- na_counts <- colSums(is.na(data[, columns_of_interest])) -->

<!-- # Create a table -->
<!-- na_counts_table <- data.frame(Column = names(na_counts), NA_Count = na_counts) -->

<!-- # Print the table -->
<!-- print(na_counts_table) -->
<!-- ``` -->





<!-- #  other stuff : -->

<!-- ## Different Samples: -->

<!-- ```{r} -->

<!-- #| label: fig-sampletesting -->

<!-- #| fig-cap: result_sampletesting -->

<!-- ####################################################################### -->

<!-- # ----------------->

> > Full Sample --\> <!-- ####################################################################### -->

<!-- model_full_sample <- feols(log(price) ~ -->

<!--                        EPC_D123_Registered_energy_label+ -->

<!--                        log(lotsize+1)+ -->

<!--                        log(unit_living_space)+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        dummy_sold_before_built+ -->

<!--                        unit_room_quantity+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        building_number_of_rooms_categorical+ -->

<!--                        building_number_of_bathrooms_categorical+ -->

<!--                        building_number_of_toilets_categorical+ -->

<!--                        building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                        dummy_garage_builtin+ -->

<!--                        dummy_garage_detached+ -->

<!--                        dummy_outhouse_builtin+ -->

<!--                        dummy_outhouse_detached+ -->

<!--                        dummy_carport_builtin+ -->

<!--                        dummy_carport_detached+ -->

<!--                        dummy_conservatory_builtin+ -->

<!--                        dummy_conservatory_detached+ -->

<!--                        dummy_Greenhouse_exists+ -->

<!--                        dummy_basement_exists+ -->

<!--                        dummy_swimming_pool_exists+ -->

<!--                        dummy_boiler_exists+ -->

<!--                        dummy_woodStove_exists+ -->

<!--                        dummy_oilStove_exists+ -->

<!--                        dummy_masonaryHeater_exists+ -->

<!--                        dummy_fireplace_exists+ -->

<!--                        building_year_built_periodic_bins+ -->

<!--                        building_renovation_categorial_5levels+ -->

<!--                        # EPC_D123_Feature_Total_Annual_Energy_cost_digit+ -->

<!--                        # EPC_D123_energy_label_profit_reno+ -->

<!--                        # EPC_D123_energy_label_all_reno+ -->

<!--                        EPC_energy_sources_factors_15levels+ -->

<!--                        # EPC_D123_Total_energy_saved_from_profit_renovation_Normalized_in_kWh_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_investment_cost_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                        EPC_D123_Feature_Total_nr_suggestions_profit_and_other_suggestions+ -->

<!--                        # EPC_D123_Feature_other_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->

<!--                        log(POPDensity_Mean_POP_per_gridCell)+ -->

<!--                        log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                        geo_buffer_100meters_forest_DUMMY+ -->

<!--                        geo_buffer_100meters_park_DUMMY+ -->

<!--                        geo_buffer_100meters_industrial_DUMMY+ -->

<!--                        geo_buffer_100meters_recreationGround_DUMMY+ -->

<!--                        geo_buffer_100meters_natureReserve_DUMMY+ -->

<!--                        geo_buffer_100meters_wetland_DUMMY+ -->

<!--                        geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->

<!--                        geo_buffer_100meters_water_or_resovoir_DUMMY+ -->

<!--                        geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->

<!--                        geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->

<!--                        geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->

<!--                        geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                        Varmepumpe_pred_and_actual_85percent_threshold+ -->

<!--                        Solarceller_pred_and_actual_85percent_threshold+ -->

<!--                        Solvarme_pred_and_actual_85percent_threshold -->

<!--                        |  sale_Year + Sale_month + geo_zipcode_4digits , data=data, vcov = "HC1") -->

<!-- ####################################################################### -->

<!-- # ----------------->

> > Filter for price --\> <!-- ####################################################################### -->

<!-- data$price_natural_log <- log(data$price) -->

<!-- # --------- filter: -->

<!-- percentile_1 <- quantile(data$price_natural_log, 0.01) -->

<!-- percentile_99 <- quantile(data$price_natural_log, 0.99) -->

<!-- filtered_df <- data %>% filter(price_natural_log >= percentile_1 & price_natural_log <= percentile_99) -->

<!-- # run regression : -->

<!-- model_filtered_price <- feols(log(price) ~ -->

<!--                        EPC_D123_Registered_energy_label+ -->

<!--                        log(lotsize+1)+ -->

<!--                        log(unit_living_space)+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        dummy_sold_before_built+ -->

<!--                        unit_room_quantity+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        building_number_of_rooms_categorical+ -->

<!--                        building_number_of_bathrooms_categorical+ -->

<!--                        building_number_of_toilets_categorical+ -->

<!--                        building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                        dummy_garage_builtin+ -->

<!--                        dummy_garage_detached+ -->

<!--                        dummy_outhouse_builtin+ -->

<!--                        dummy_outhouse_detached+ -->

<!--                        dummy_carport_builtin+ -->

<!--                        dummy_carport_detached+ -->

<!--                        dummy_conservatory_builtin+ -->

<!--                        dummy_conservatory_detached+ -->

<!--                        dummy_Greenhouse_exists+ -->

<!--                        dummy_basement_exists+ -->

<!--                        dummy_swimming_pool_exists+ -->

<!--                        dummy_boiler_exists+ -->

<!--                        dummy_woodStove_exists+ -->

<!--                        dummy_oilStove_exists+ -->

<!--                        dummy_masonaryHeater_exists+ -->

<!--                        dummy_fireplace_exists+ -->

<!--                        building_year_built_periodic_bins+ -->

<!--                        building_renovation_categorial_5levels+ -->

<!--                        # EPC_D123_Feature_Total_Annual_Energy_cost_digit+ -->

<!--                        # EPC_D123_energy_label_profit_reno+ -->

<!--                        # EPC_D123_energy_label_all_reno+ -->

<!--                        EPC_energy_sources_factors_15levels+ -->

<!--                        # EPC_D123_Total_energy_saved_from_profit_renovation_Normalized_in_kWh_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_investment_cost_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                        EPC_D123_Feature_Total_nr_suggestions_profit_and_other_suggestions+ -->

<!--                        # EPC_D123_Feature_other_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->

<!--                        log(POPDensity_Mean_POP_per_gridCell)+ -->

<!--                        log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                        geo_buffer_100meters_forest_DUMMY+ -->

<!--                        geo_buffer_100meters_park_DUMMY+ -->

<!--                        geo_buffer_100meters_industrial_DUMMY+ -->

<!--                        geo_buffer_100meters_recreationGround_DUMMY+ -->

<!--                        geo_buffer_100meters_natureReserve_DUMMY+ -->

<!--                        geo_buffer_100meters_wetland_DUMMY+ -->

<!--                        geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->

<!--                        geo_buffer_100meters_water_or_resovoir_DUMMY+ -->

<!--                        geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->

<!--                        geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->

<!--                        geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->

<!--                        geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                        Varmepumpe_pred_and_actual_85percent_threshold+ -->

<!--                        Solarceller_pred_and_actual_85percent_threshold+ -->

<!--                        Solvarme_pred_and_actual_85percent_threshold -->

<!--                        |  sale_Year + Sale_month + geo_zipcode_4digits , data=filtered_df , vcov = "HC1") -->

<!-- ####################################################################### -->

<!-- # ----------------->

> > Filter for price & living size --\> <!-- ####################################################################### -->

<!-- data$price_natural_log <- log(data$price) -->

<!-- data$livingSpace_natural_log <- log(data$unit_living_space) -->

<!-- # --------- filter price: -->

<!-- percentile_1 <- quantile(data$price_natural_log, 0.01) -->

<!-- percentile_99 <- quantile(data$price_natural_log, 0.99) -->

<!-- filtered_df <- data %>% filter(price_natural_log >= percentile_1 & price_natural_log <= percentile_99) -->

<!-- # --------- filter living space: -->

<!-- percentile_1 <- quantile(data$unit_living_space, 0.01) -->

<!-- percentile_99 <- quantile(data$unit_living_space, 0.99) -->

<!-- filtered_df <- filtered_df %>% filter(unit_living_space >= percentile_1 & unit_living_space <= percentile_99) -->

<!-- # run regression : -->

<!-- model_filtered_price_living_space <- feols(log(price) ~ -->

<!--                        EPC_D123_Registered_energy_label+ -->

<!--                        log(lotsize+1)+ -->

<!--                        log(unit_living_space)+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        dummy_sold_before_built+ -->

<!--                        unit_room_quantity+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        building_number_of_rooms_categorical+ -->

<!--                        building_number_of_bathrooms_categorical+ -->

<!--                        building_number_of_toilets_categorical+ -->

<!--                        building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                        dummy_garage_builtin+ -->

<!--                        dummy_garage_detached+ -->

<!--                        dummy_outhouse_builtin+ -->

<!--                        dummy_outhouse_detached+ -->

<!--                        dummy_carport_builtin+ -->

<!--                        dummy_carport_detached+ -->

<!--                        dummy_conservatory_builtin+ -->

<!--                        dummy_conservatory_detached+ -->

<!--                        dummy_Greenhouse_exists+ -->

<!--                        dummy_basement_exists+ -->

<!--                        dummy_swimming_pool_exists+ -->

<!--                        dummy_boiler_exists+ -->

<!--                        dummy_woodStove_exists+ -->

<!--                        dummy_oilStove_exists+ -->

<!--                        dummy_masonaryHeater_exists+ -->

<!--                        dummy_fireplace_exists+ -->

<!--                        building_year_built_periodic_bins+ -->

<!--                        building_renovation_categorial_5levels+ -->

<!--                        # EPC_D123_Feature_Total_Annual_Energy_cost_digit+ -->

<!--                        # EPC_D123_energy_label_profit_reno+ -->

<!--                        # EPC_D123_energy_label_all_reno+ -->

<!--                        EPC_energy_sources_factors_15levels+ -->

<!--                        # EPC_D123_Total_energy_saved_from_profit_renovation_Normalized_in_kWh_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_investment_cost_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                        EPC_D123_Feature_Total_nr_suggestions_profit_and_other_suggestions+ -->

<!--                        # EPC_D123_Feature_other_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->

<!--                        log(POPDensity_Mean_POP_per_gridCell)+ -->

<!--                        log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                        geo_buffer_100meters_forest_DUMMY+ -->

<!--                        geo_buffer_100meters_park_DUMMY+ -->

<!--                        geo_buffer_100meters_industrial_DUMMY+ -->

<!--                        geo_buffer_100meters_recreationGround_DUMMY+ -->

<!--                        geo_buffer_100meters_natureReserve_DUMMY+ -->

<!--                        geo_buffer_100meters_wetland_DUMMY+ -->

<!--                        geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->

<!--                        geo_buffer_100meters_water_or_resovoir_DUMMY+ -->

<!--                        geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->

<!--                        geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->

<!--                        geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->

<!--                        geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                        Varmepumpe_pred_and_actual_85percent_threshold+ -->

<!--                        Solarceller_pred_and_actual_85percent_threshold+ -->

<!--                        Solvarme_pred_and_actual_85percent_threshold -->

<!--                        |  sale_Year + Sale_month + geo_zipcode_4digits , data=filtered_df, vcov = "HC1") -->

<!-- ####################################################################### -->

<!-- # ----------------->

> > Filter Price : drop price \> 10 million DKK --\> <!-- ####################################################################### -->

<!-- data_filtered <- data[data$price<10000000,] -->

<!-- # run regression : -->

<!-- model_filtered_price_10mill <- feols(log(price) ~ -->

<!--                        EPC_D123_Registered_energy_label+ -->

<!--                        log(lotsize+1)+ -->

<!--                        log(unit_living_space)+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        dummy_sold_before_built+ -->

<!--                        unit_room_quantity+ -->

<!--                        property_type_BBR+ -->

<!--                        building_walls_material+ -->

<!--                        building_roof_material+ -->

<!--                        building_number_of_rooms_categorical+ -->

<!--                        building_number_of_bathrooms_categorical+ -->

<!--                        building_number_of_toilets_categorical+ -->

<!--                        building_floor_quantity_in_building_Categorical_7levels+ -->

<!--                        dummy_garage_builtin+ -->

<!--                        dummy_garage_detached+ -->

<!--                        dummy_outhouse_builtin+ -->

<!--                        dummy_outhouse_detached+ -->

<!--                        dummy_carport_builtin+ -->

<!--                        dummy_carport_detached+ -->

<!--                        dummy_conservatory_builtin+ -->

<!--                        dummy_conservatory_detached+ -->

<!--                        dummy_Greenhouse_exists+ -->

<!--                        dummy_basement_exists+ -->

<!--                        dummy_swimming_pool_exists+ -->

<!--                        dummy_boiler_exists+ -->

<!--                        dummy_woodStove_exists+ -->

<!--                        dummy_oilStove_exists+ -->

<!--                        dummy_masonaryHeater_exists+ -->

<!--                        dummy_fireplace_exists+ -->

<!--                        building_year_built_periodic_bins+ -->

<!--                        building_renovation_categorial_5levels+ -->

<!--                        # EPC_D123_Feature_Total_Annual_Energy_cost_digit+ -->

<!--                        # EPC_D123_energy_label_profit_reno+ -->

<!--                        # EPC_D123_energy_label_all_reno+ -->

<!--                        EPC_energy_sources_factors_15levels+ -->

<!--                        # EPC_D123_Total_energy_saved_from_profit_renovation_Normalized_in_kWh_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_count_suggestions+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_profit_renovations_total_investment_cost_BuildingLevel+ -->

<!--                        # EPC_D123_Feature_other_renovations_count_suggestions+ -->

<!--                        EPC_D123_Feature_Total_nr_suggestions_profit_and_other_suggestions+ -->

<!--                        # EPC_D123_Feature_other_renovations_total_cost_savings_BuildingLevel+ -->

<!--                        log(valhalla_distance_to_copenhagen_AUTO_in_min)+ -->

<!--                        log(POPDensity_Mean_POP_per_gridCell)+ -->

<!--                        log(valhalla_isochrone_AUTO_30min_Radius_inMeters)+ -->

<!--                        geo_buffer_100meters_forest_DUMMY+ -->

<!--                        geo_buffer_100meters_park_DUMMY+ -->

<!--                        geo_buffer_100meters_industrial_DUMMY+ -->

<!--                        geo_buffer_100meters_recreationGround_DUMMY+ -->

<!--                        geo_buffer_100meters_natureReserve_DUMMY+ -->

<!--                        geo_buffer_100meters_wetland_DUMMY+ -->

<!--                        geo_buffer_100meters_Ocean_or_beach_DUMMY+ -->

<!--                        geo_buffer_100meters_water_or_resovoir_DUMMY+ -->

<!--                        geo_buffer_100meters_river_or_stream_or_canal_DUMMY+ -->

<!--                        geo_buffer_100meters_meadow_or_scrub_or_heath_DUMMY+ -->

<!--                        geo_buffer_100meters_Motorway_or_trunk_or_primary_DUMMY+ -->

<!--                        geo_buffer_100meters_Rail_or_lightRail_DUMMY+ -->

<!--                        Varmepumpe_pred_and_actual_85percent_threshold+ -->

<!--                        Solarceller_pred_and_actual_85percent_threshold+ -->

<!--                        Solvarme_pred_and_actual_85percent_threshold -->

<!--                        |  sale_Year + Sale_month + geo_zipcode_4digits , data=data_filtered, vcov = "HC1") -->

<!-- # ---------------- MODEL SUMMARY ------------------- -->

<!-- models <- list("Full Sample"= model_full_sample, -->

<!--                "Filtered for price"= model_filtered_price, -->

<!--                'Filtered for price \n & \n living space'= model_filtered_price_living_space, -->

<!--                "Filtered out price \n greater than \n 10 million DKK" = model_filtered_price_10mill) -->

<!-- # addon_map <- data.frame(raw = c("nobs", "adj.r.squared"), -->

<!-- #                       clean = c("N.Obs.", "R2Adj."), -->

<!-- #                       fmt = c(0, 3)) -->

<!-- addon_map <- data.frame(raw = c("nobs", "r.squared","adj.r.squared", "r2.within.adjusted", "vcov.type", "rmse"), -->

<!--                       clean = c("N.Obs.","R2" ,"R2Adj.", "R2 Within Adj.", "Std.Errors", "RMSE"), -->

<!--                       fmt = c(0, 4,4,4,4,4)) -->

<!-- # Create the rows of the fixed effects in the table -->

<!-- timeFE        <- c("Time FE","Yes", "Yes","Yes","Yes") -->

<!-- placeFE      <- c("4 digit zip FE" ,"Yes", "Yes","Yes","Yes") -->

<!-- dfFE <- data.frame(timeFE, placeFE) -->

<!-- # change the columns to rows and the rows to columns inorder for the modelsummary() to read it in correctly -->

<!-- dfFE_new <- as.data.frame(t(dfFE)) -->

<!-- # Run Modelsummary() -->

<!-- modelsummary(models, -->

<!--              stars = c("*" = .1, "**" = .05, "***" = .01), -->

<!--              gof_map=addon_map, -->

<!--              title = "Dependent Variable: log(Price)", -->

<!--              add_rows = dfFE_new -->

<!--              )#,coef_map=coef) -->

<!-- ``` -->

<!-- ```{r,message=FALSE, warning=FALSE,fig.width=10, fig.height=8} -->

<!-- # Install and load required packages -->

<!-- # install.packages("ggpattern") -->

<!-- library(ggplot2) -->

<!-- library(dplyr) -->

<!-- library(scales) -->

<!-- library(ggimage) -->

<!-- library(ggpattern) -->

<!-- #taken from : https://emoweb.dk/emostat -->

<!-- # (2024 to 2006) - 2024-2011-2010-2008-2007-2006 -->

<!-- # --------------------------------------------- -->

<!-- #A2020 = 17609 - 814 - 0 - 0 - 0 - 0 - 0 - 0                      = 16795 -->

<!-- #A2015 = 62883 -2297 - 0 - 0 - 0 - 0 - 0 - 0                      = 60586 -->

<!-- #A2010 = 42096 - 1458 - 1989 - 1309 -765 - 0 - 174 - 33           = 36368 -->

<!-- #B = 82809 - 3463 - 6006 - 6227- 5444 - 4608 - 2249 - 268         = 54544 -->

<!-- #C = 268725 - 10025 - 12767 - 13080 - 8146 - 7447 - 7676 - 1395   = 208189 -->

<!-- #D = 289862 - 7365 - 19762 - 17981 - 11799 - 10101 - 11399 - 2123 = 209332  -->

<!-- #E = 161288 - 2946 - 12540 - 12599 - 9337 - 8056 - 9059 - 2024    = 104727 -->

<!-- #F = 99486 - 1335 - 8744 - 9377 - 7818 - 6564 - 7511 - 1874       = 56263  -->

<!-- #G = 87147 - 676 - 6901 - 10405 - 7533 - 7058 - 8723 - 2775       = 43076 -->

<!-- # Population values -->

<!-- population_values <- data.frame( -->

<!--   label = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"), -->

<!--   count = c(16795, 60586, 36368, 54544, 208189, 209332, 104727, 56263, 43076) -->

<!-- ) -->

<!-- # Count the sample data -->

<!-- # sample_counts <- data %>% -->

<!-- #   count(EPC_D123_Registered_energy_label) %>% -->

<!-- #   rename(label = EPC_D123_Registered_energy_label, count = n) %>% -->

<!-- #   mutate(source = "Sample") -->

<!-- sample_counts <- data %>% -->

<!--   distinct(EPC_D123_UNIQUE_EPC_REPORT_ID_NUMBER, .keep_all = TRUE) %>% -->

<!--   count(EPC_D123_Registered_energy_label) %>% -->

<!--   rename(label = EPC_D123_Registered_energy_label, count = n) %>% -->

<!--   mutate(source = "Sample") -->

<!-- # Combine the data -->

<!-- combined_data <- bind_rows(sample_counts, population_values) -->

<!-- # fill na in source with "population" -->

<!-- combined_data <- combined_data %>% -->

<!--   mutate(source = if_else(is.na(source), "Population", source)) -->

<!-- # Ensure label is treated as a factor with the correct order -->

<!-- combined_data$label <- factor(combined_data$label,  -->

<!--                               levels = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G")) -->

<!-- # side_by_side_plot <- ggplot(combined_data, aes(x = label, y = count, fill = source)) + -->

<!-- #   geom_bar(stat = "identity", position = position_dodge(width = 0.8)) + -->

<!-- #   scale_fill_manual(values = c("Sample" = "skyblue", "Population" = "red")) + -->

<!-- #   scale_y_continuous(labels = scales::comma_format(scale = 1 / 1000, suffix = "K")) + -->

<!-- #   labs( -->

<!-- #     title = "Comparison of EPC Registered Energy Labels: Sample vs. Population", -->

<!-- #     x = "Energy Label", -->

<!-- #     y = "Count (in thousands)", -->

<!-- #     fill = "Source" -->

<!-- #   ) + -->

<!-- #   theme_minimal() + -->

<!-- #   theme( -->

<!-- #     plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), -->

<!-- #     axis.title = element_text(size = 12), -->

<!-- #     axis.text = element_text(size = 10) -->

<!-- #   ) -->

<!-- # Create a dataframe for the images of the labels -->

<!-- images_data <- data.frame( -->

<!--   label = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G"), -->

<!--   image = paste0("images/epc_labels/", c("a2020.png", "a2015.png", "a2010.png", "b.png", "c.png", "d.png", "e.png", "f.png", "g.png")) -->

<!-- ) -->

<!-- # Define custom colors for each category -->

<!-- custom_colors <- c( -->

<!--   "A2020" = "#006400",  # Dark green -->

<!--   "A2015" = "#008000",  # Green -->

<!--   "A2010" = "#00AA00",  # Light green -->

<!--   "B" = "#ADFC2F",      # Very light green -->

<!--   "C" = "#FFFA80",      # Yellow -->

<!--   "D" = "#FFA500",      # Orange -->

<!--   "E" = "#FF5C15",      # Dark orange -->

<!--   "F" = "#8B0025",      # Dark red -->

<!--   "G" = "#4A1299"       # Dark purple -->

<!-- ) -->

<!-- # Create the side-by-side bar plot with patterns -->

<!-- side_by_side_plot <- ggplot(combined_data, aes(x = label, y = count, fill = label, pattern = source)) + -->

<!--   geom_bar_pattern(stat = "identity", position = position_dodge(width = 0.9),  -->

<!--                    pattern_density = 0.1, -->

<!--                    pattern_spacing = 0.02, -->

<!--                    pattern_fill = "black", -->

<!--                    pattern_angle = 45, -->

<!--                    color = "white") + -->

<!--   scale_fill_manual(values = custom_colors) + -->

<!--   scale_pattern_manual(values = c(Sample = "none", Population = "stripe")) + -->

<!--   scale_y_continuous(labels = scales::comma_format(scale = 1 / 1000, suffix = "K"),  -->

<!--                      breaks = seq(0, 300000, by = 30000)) +  # Adjusting breaks -->

<!--   labs( -->

<!--     title = "Comparison of EPC Registered Energy Labels: \n Sample vs. Population", -->

<!--     x = "Energy Label", -->

<!--     y = "Count (in thousands)", -->

<!--     fill = "Energy Label", -->

<!--     pattern = "Source" -->

<!--   ) + -->

<!--   theme_minimal() + -->

<!--   theme( -->

<!--     plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), -->

<!--     axis.title = element_text(size = 12, face = "bold"),  # Bold axis titles -->

<!--     axis.text = element_text(size = 10), -->

<!--     axis.line = element_line(color = "black"),  # Set black lines on x and y axis -->

<!--     axis.line.x = element_blank(),  # Remove x-axis line -->

<!--     axis.ticks = element_line(color = "black"),  # Set black tick marks -->

<!--     axis.ticks.length = unit(0.2, "cm"),  # Set tick mark length -->

<!--     axis.ticks.margin = unit(0.5, "cm"),  # Set margin between ticks and axis line -->

<!--     panel.grid.major.x = element_blank(),  # Remove grid lines for x-axis -->

<!--     panel.grid.minor.x = element_blank(),  # Remove minor grid lines for x-axis -->

<!--     panel.grid.major.y = element_line(color = "grey", linewidth = 0.3),  # Set black grid lines for y-axis -->

<!--     panel.grid.minor.y = element_blank()  # Remove minor grid lines for y-axis -->

<!--   ) + -->

<!--   guides(fill = "none") -->

<!-- # Add images to the x-axis -->

<!-- side_by_side_plot <- side_by_side_plot + -->

<!--   geom_image(data = images_data, aes(x = label, y = -15000, image = image), size = 0.08, by = "width", inherit.aes = FALSE) + -->

<!--   theme(axis.text.x = element_blank(), -->

<!--         axis.ticks.x = element_blank()) -->

<!-- # Print the plot -->

<!-- print(side_by_side_plot) -->

<!-- ``` -->

------------------------------------------------------------------------

<!-- ```{r} -->

<!-- combined_data$pattern <- ifelse(combined_data$source == "Population", "stripe", "none") -->

<!-- # Create the side-by-side bar plot without patterns -->

<!-- side_by_side_plot <- ggplot(combined_data, aes(x = label, y = count, fill = source)) + -->

<!--   geom_bar(stat = "identity", position = position_dodge(width = 0.9)) + -->

<!--   scale_fill_manual(values = c("Population" = "#D3D3D3","Sample" = "#00008B"),  -->

<!--                   name = "Source", # Change the legend title -->

<!--                   labels = c("Total EPC reports \n made in DK", "Sample Data")) + # Change the legend labels -->

<!--   geom_bar_pattern(stat = "identity", position = position_dodge(width = 0.9),  -->

<!--                    pattern_density = 0.1, -->

<!--                    pattern_spacing = 0.02, -->

<!--                    pattern_fill = "black", -->

<!--                    pattern_angle = 45, -->

<!--                    color = "white") + -->

<!--   scale_y_continuous(labels = scales::comma_format(scale = 1 / 1000, suffix = "K"),  -->

<!--                      breaks = seq(0, 300000, by = 30000)) +  # Adjusting breaks -->

<!--   scale_pattern_manual(values = c(Sample = "none", Population = "stripe")) + -->

<!--   labs( -->

<!--     title = "EPC reports made in Denmark between 2012-2023: \n Population vs. Sample", -->

<!--     x = "Energy Label", -->

<!--     y = "Count (in thousands)" -->

<!--     # fill = "Source" -->

<!--   ) + -->

<!--   theme_minimal() + -->

<!--   theme( -->

<!--     plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), -->

<!--     axis.title = element_text(size = 12, face = "bold"),  # Bold axis titles -->

<!--     axis.text = element_text(size = 10), -->

<!--     axis.line = element_line(color = "black"),  # Set black lines on x and y axis -->

<!--     axis.line.x = element_blank(),  # Remove x-axis line -->

<!--     axis.ticks = element_line(color = "black"),  # Set black tick marks -->

<!--     axis.ticks.length = unit(0.2, "cm"),  # Set tick mark length -->

<!--     axis.ticks.margin = unit(0.5, "cm"),  # Set margin between ticks and axis line -->

<!--     panel.grid.major.x = element_blank(),  # Remove grid lines for x-axis -->

<!--     panel.grid.minor.x = element_blank(),  # Remove minor grid lines for x-axis -->

<!--     panel.grid.major.y = element_line(color = "grey", linewidth = 0.3),  # Set black grid lines for y-axis -->

<!--     panel.grid.minor.y = element_blank(),  # Remove minor grid lines for y-axis -->

<!--     legend.position = "right"  # Position legend at the bottom -->

<!--   ) -->

<!-- # Add images to the x-axis -->

<!-- side_by_side_plot <- side_by_side_plot + -->

<!--   geom_image(data = images_data, aes(x = label, y = -15000, image = image), size = 0.08, by = "width", inherit.aes = FALSE) + -->

<!--   theme(axis.text.x = element_blank(), -->

<!--         axis.ticks.x = element_blank()) -->

<!-- # Print the plot -->

<!-- print(side_by_side_plot) -->

<!-- ``` -->

------------------------------------------------------------------------

<!-- ##### 5x5 km grid plot on full dataset -->

i.e. filtered data with obs.
== 761914 , where properties sold more than once per year or with selling price higher than 20 million dkk are removed

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all'} -->

<!-- library(sf) -->

<!-- library(dplyr) -->

<!-- library(ggspatial) # for the north arrow -->

<!-- ###################################### data prep -->

<!-- #-------------------------------------------- read in shape file from GADM -->

<!-- denmark_country <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_0.shp") -->

<!-- # Transform to a projected CRS  so its in km units -->

<!-- denmark_shapefile_utm <- st_transform(denmark_country, crs = 25832) -->

<!-- ### --- do the same for the municipality borders -->

<!-- ### Denmark municipalicty borders level 2 -->

<!-- denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp") -->

<!-- # Transform to a projected CRS  so its in km units -->

<!-- denmark_municipalities <- st_transform(denmark_municipalities, crs = 4326) -->

<!-- ``` -->

<!-- ```{r,message=FALSE, warning=FALSE,fig.width=10, fig.height=10} -->

<!-- # ================================================================================== -->

<!-- ################################ FISH NET PLOT -->

<!-- # ================================================================================== -->

<!-- data$price_per_squareMeter <- data$price / data$unit_living_space -->

<!-- # ----------------------------------- set up housing data -->

<!-- # create the new main dataset with only necessary columns -->

<!-- price_5kmGrid <- data %>% -->

<!--   select("price_per_squareMeter", "geo_longitude", "geo_latitude", "EPC_D123_Registered_energy_label") -->

<!-- # Convert data to sf object to 25832 the same as denmark shapefile -->

<!-- price_5kmGrid <- st_as_sf(price_5kmGrid, coords = c("geo_longitude", "geo_latitude"), crs = 4326) -->

<!-- # Transform to a projected CRS  so its in km units -->

<!-- price_5kmGrid <- st_transform(price_5kmGrid, crs = 25832) -->

<!-- # ---------------------------------- make the net -->

<!-- # Create a 5km x 5km grid over the bounding box of Denmark --- cellsize in meters -->

<!-- grid <- st_make_grid(denmark_shapefile_utm, cellsize = 5000, what = "polygons") -->

<!-- # Clip the grid to the boundaries of Denmark -->

<!-- grid_clipped <- st_intersection(grid, denmark_shapefile_utm) -->

<!-- # Convert grid to an sf object -->

<!-- grid_sf <- st_sf(grid_id = 1:length(grid_clipped), geometry = st_sfc(grid_clipped)) -->

<!-- # ---------------------------------- calculate avg. price per square meter per 1km grid -->

<!-- # spatial join - set each point to relevant grid -->

<!-- joined <- st_join(price_5kmGrid, grid_sf, join = st_intersects) -->

<!-- # Aggregate average price per square meter by grid cell -->

<!-- average_price <- joined %>% -->

<!--   group_by(grid_id) %>% -->

<!--   summarize(avg_price = mean(price_per_squareMeter, na.rm = TRUE)) -->

<!-- # Aggregate most frequent EPC label per grid cell -->

<!-- most_frequent_label <- joined %>% -->

<!--   group_by(grid_id) %>% -->

<!--   summarize(most_freq_label = names(sort(table(EPC_D123_Registered_energy_label), decreasing = TRUE))[1]) -->

<!-- # Convert the sf object to a data frame -->

<!-- merged_data <- st_join(grid_sf, average_price, by = "grid_id", left = TRUE) -->

<!-- ############################################################################################################ -->

<!-- # $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  ----- plot : -->

<!-- ## ====> convert the merge_Data back to the simple CRS system i.e. the 4326 -->

<!-- # transform the main data back to CRS: 4326 - to make it easy to place stuff on map -->

<!-- merged_data_4326 <- st_transform(merged_data, crs = 4326) -->

<!-- color_option_viridis <- "F" -->

<!-- # professional_colors <- c("#2ECC71", "#F1C40F", "#FFFFFF", "#3498DB", "#000000") -->

<!-- ################## set the area plot -->

<!-- # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- cph_xmin <- 12 -->

<!-- cph_xmax <- 12.8 -->

<!-- cph_ymin <- 55.5 -->

<!-- cph_ymax <- 56 -->

<!-- # Plotting the grid with average prices -->

<!-- main_plot <- ggplot() + -->

<!--   geom_sf(data = merged_data_4326, aes(fill = avg_price), color = NA) + -->

<!--   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!--   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n", face = "bold"), na.value = "grey50", -->

<!--                        direction = -1, labels = scales::comma) + -->

<!--   # scale_fill_viridis_c(option = "viridis", na.value = "transparent") + -->

<!--   theme_minimal() + -->

<!--   theme( -->

<!--     legend.position = "right", -->

<!--     legend.title = element_text(size = 12), -->

<!--     legend.text = element_text(size = 12), -->

<!--     plot.title = element_text(size = 16, face = "bold"), -->

<!--     plot.subtitle = element_text(size = 14), -->

<!--     axis.title = element_text(size = 12), # Increase the size of axis titles -->

<!--     axis.text = element_text(size = 8),   # Decrease the size of axis text -->

<!--     # axis.ticks = element_blank(), -->

<!--     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!--     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!--     # panel.grid = element_blank() -->

<!--     panel.grid.major = element_blank(), #element_line(color = "lightgray", size = 0.15),  # Add light major grid lines -->

<!--     panel.grid.minor = element_blank(),  # Hide minor grid lines -->

<!--     axis.line = element_line(color = "black", size = 0.3), -->

<!--   ) + -->

<!--   labs( -->

<!--     title = "Average Prices per Square Meter at 5x5km grid level in Denmark (filtered dataset: 761914)", -->

<!--     subtitle = "Prices are in Dansih krones (filtered by only 1 sale per year and less than 20 million dkk sale price", -->

<!--     caption = "Data Source: Calculation made by author", -->

<!--     x = "Longitude", -->

<!--     y = "Latitude" -->

<!--   ) -->

<!--   # coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax)) -->

<!-- # -->

<!-- # #### ADD THE POINTS -->

<!-- # main_plot <- main_plot + -->

<!-- #   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5, shape = 4)+ #,shape = 4,stroke = 3.5) + -->

<!-- #   scale_color_manual(values = professional_colors) -->

<!-- # -->

<!-- # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- cph_xmin <- 12 -->

<!-- cph_xmax <- 12.8 -->

<!-- cph_ymin <- 55.5 -->

<!-- cph_ymax <- 56 -->

<!-- # coordinates of biggest 5 cities in Denmark -->

<!-- biggest_cities <- data.frame( -->

<!--   city = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"), -->

<!--   longitude = c(12.568337, 10.203921, 10.40237, 9.916664, 8.456197), -->

<!--   latitude = c(55.676098, 56.162939, 55.395941, 57.048, 55.476031) -->

<!-- ) -->

<!-- # Create the inset plot for the magnified area around Copenhagen -->

<!-- inset_plot_cph <- ggplot() + -->

<!--   geom_sf(data = merged_data_4326, aes(fill = avg_price), color = NA) + -->

<!--   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!--   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n", face = "bold"), na.value = "grey50", -->

<!--                        direction = -1, labels = scales::comma) + -->

<!--   # scale_fill_viridis_c(option = "viridis", na.value = "transparent") + -->

<!--   theme_minimal() + -->

<!--   theme( -->

<!--     axis.title = element_blank(),  # Remove axis titles -->

<!--     axis.text = element_blank(),   # Remove axis labels -->

<!--     axis.ticks = element_blank(),  # Remove axis ticks -->

<!--     panel.grid = element_blank(),  # Remove panel grid -->

<!--     # panel.border = element_blank() # Remove panel border -->

<!--     panel.border = element_rect(color = "black", fill = NA, size = 1), -->

<!--     legend.position = "none"      # Remove legend -->

<!--   )+ -->

<!--   coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax)) -->

<!-- # add the city points to the zoom plot -->

<!-- # inset_plot_cph <- inset_plot_cph + -->

<!-- #   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5, show.legend = FALSE)+ #,shape = 4,stroke = 3.5) + -->

<!-- #   scale_color_manual(values = professional_colors) -->

<!-- # Add the inset plot as an annotation to the main plot -->

<!-- inset_plot_cph <- main_plot + -->

<!--   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame -->

<!--   annotation_custom(ggplotGrob(inset_plot_cph), xmin = cph_xmin*1.0, xmax = cph_xmax*1.15, ymin = cph_ymin*1.009, ymax = cph_ymax*1.037) + # the zoom plot position -->

<!--   geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot -->

<!--   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!--   theme( -->

<!--     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!--   ) -->

<!-- # Display the combined plot with cities using professional colors -->

<!-- inset_plot_cph -->

<!-- ``` -->

<!-- ### 5x5km grid : price per sqr, age, time on market and EPC labels -->

<!-- ```{r, echo=FALSE, results='hide',fig.keep='all'} -->

<!-- library(gridExtra) -->

<!-- library(sf) -->

<!-- library(dplyr) -->

<!-- library(ggspatial) # for the north arrow -->

<!-- ###################################### data prep -->

<!-- #-------------------------------------------- read in shape file from GADM -->

<!-- denmark_country <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_0.shp") -->

<!-- # Transform to a projected CRS  so its in km units -->

<!-- denmark_shapefile_utm <- st_transform(denmark_country, crs = 25832) -->

<!-- ### --- do the same for the municipality borders -->

<!-- ### Denmark municipalicty borders level 2 -->

<!-- denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp") -->

<!-- # Transform to a projected CRS  so its in km units -->

<!-- denmark_municipalities <- st_transform(denmark_municipalities, crs = 4326) -->

<!-- ``` -->

<!-- # ```{r,message=FALSE, warning=FALSE,fig.width=14, fig.height=16} -->

<!-- #  -->

<!-- # # ================================================================================== -->

<!-- #  -->

<!-- # ################################ FISH NET PLOT -->

<!-- #  -->

<!-- # # ================================================================================== -->

<!-- #  -->

<!-- #  -->

<!-- # #price sqr meter -->

<!-- # data$price_per_squareMeter <- data$price / data$unit_living_space -->

<!-- #  -->

<!-- # # Age from selling : set minus i.e. sold before built to zero -->

<!-- # data$property_age <- pmax(0, data$sale_Year - data$building_year_built) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # # ----------------------------------- set up housing data -->

<!-- #  -->

<!-- # # create the new main dataset with only necessary columns -->

<!-- # price_5kmGrid <- data %>% -->

<!-- #   select("price_per_squareMeter", -->

<!-- #          "EPC_D123_current_label_numericValues", -->

<!-- #          "property_age", -->

<!-- #          "advert_Total_days_on_market", -->

<!-- #          "geo_longitude",  -->

<!-- #          "geo_latitude") -->

<!-- #  -->

<!-- #  -->

<!-- # # energy label : current  -->

<!-- # set_levels <- c("A2020","A2015", "A2010", "B","C","D","E","F","G") -->

<!-- # price_5kmGrid$EPC_D123_Registered_energy_label <- factor(data$EPC_D123_Registered_energy_label, levels = set_levels) -->

<!-- #  -->

<!-- #  -->

<!-- # # Convert data to sf object to 25832 the same as denmark shapefile -->

<!-- # price_5kmGrid <- st_as_sf(price_5kmGrid, coords = c("geo_longitude", "geo_latitude"), crs = 4326) -->

<!-- #  -->

<!-- # # Transform to a projected CRS  so its in km units -->

<!-- # price_5kmGrid <- st_transform(price_5kmGrid, crs = 25832) -->

<!-- #  -->

<!-- #  -->

<!-- # # ---------------------------------- make the net -->

<!-- #  -->

<!-- # # Create a 5km x 5km grid over the bounding box of Denmark --- cellsize in meters -->

<!-- # grid <- st_make_grid(denmark_shapefile_utm, cellsize = 5000, what = "polygons") -->

<!-- #  -->

<!-- # # Clip the grid to the boundaries of Denmark -->

<!-- # grid_clipped <- st_intersection(grid, denmark_shapefile_utm) -->

<!-- #  -->

<!-- # # Convert grid to an sf object -->

<!-- # grid_sf <- st_sf(grid_id = 1:length(grid_clipped), geometry = st_sfc(grid_clipped)) -->

<!-- #  -->

<!-- #  -->

<!-- # # ---------------------- join main data and the grids -->

<!-- # joined <- st_join(price_5kmGrid, grid_sf, join = st_intersects) -->

<!-- #  -->

<!-- # # ---------------------------------- calculate  -->

<!-- # # Aggregate average price per square meter by grid cell -->

<!-- # average_price <- joined %>% -->

<!-- #   group_by(grid_id) %>% -->

<!-- #   summarize(avg_price = mean(price_per_squareMeter, na.rm = TRUE)) -->

<!-- #  -->

<!-- # # Aggregate average price per square meter by grid cell -->

<!-- # average_tom <- joined %>% -->

<!-- #   group_by(grid_id) %>% -->

<!-- #   summarize(avg_tom = mean(advert_Total_days_on_market, na.rm = TRUE)) -->

<!-- #  -->

<!-- # # Aggregate most frequent EPC label per grid cell -->

<!-- # # most_frequent_label <- joined %>% -->

<!-- # #   group_by(grid_id) %>% -->

<!-- # #   summarize(freq_label = names(sort(table(EPC_D123_Registered_energy_label), decreasing = TRUE))[1]) -->

<!-- # most_frequent_label <- joined %>% -->

<!-- #   group_by(grid_id) %>% -->

<!-- #   summarize(avg_epc = mean(EPC_D123_current_label_numericValues, na.rm = TRUE)) -->

<!-- #  -->

<!-- # # Aggregate most frequent year built bin per grid cell -->

<!-- # # most_frequent_yearbinBuilt <- joined %>% -->

<!-- # #   group_by(grid_id) %>% -->

<!-- # #   summarize(avarega_age = names(sort(table(building_year_built_periodic_bins), decreasing = TRUE))[1]) -->

<!-- #  -->

<!-- # average_yearbuilt <- joined %>% -->

<!-- #   group_by(grid_id) %>% -->

<!-- #   summarize(avarega_age = mean(property_age, na.rm = TRUE)) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # # ---------------------------------- Merge  -->

<!-- # # # Convert the sf object to a data frame -->

<!-- # # merged_data <- st_join(grid_sf, most_frequent_label, by = "grid_id", left = TRUE) -->

<!-- #  -->

<!-- # # Join all variables to grid_sf -->

<!-- # merged_data <- st_join(grid_sf, average_price, by = "grid_id", left = TRUE) %>% -->

<!-- #   st_join(average_tom, by = "grid_id", left = TRUE) %>% -->

<!-- #   st_join(most_frequent_label, by = "grid_id", left = TRUE) %>% -->

<!-- #   st_join(average_yearbuilt, by = "grid_id", left = TRUE) -->

<!-- #  -->

<!-- # # transform the main data back to CRS: 4326 - to make it easy to place stuff on map -->

<!-- # merged_data_4326 <- st_transform(merged_data, crs = 4326) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # ############################################################################################################ -->

<!-- # # ==================  PLOT : PRICE -->

<!-- # ############################################################################################################ -->

<!-- #  -->

<!-- #  -->

<!-- # color_option_viridis <- "F" -->

<!-- #  -->

<!-- # ################## set the area plot -->

<!-- # # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- # cph_xmin <- 12 -->

<!-- # cph_xmax <- 12.8 -->

<!-- # cph_ymin <- 55.5 -->

<!-- # cph_ymax <- 56 -->

<!-- #  -->

<!-- # # Plotting the grid with average prices -->

<!-- # main_plot <- ggplot() + -->

<!-- #   geom_sf(data = merged_data_4326, aes(fill = avg_price), color = NA) + -->

<!-- #   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!-- #   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n", face = "bold"), na.value = "grey50", -->

<!-- #                        direction = -1, labels = scales::comma) + -->

<!-- #   # scale_fill_viridis_c(option = "viridis", na.value = "transparent") + -->

<!-- #   theme_minimal() + -->

<!-- #   theme( -->

<!-- #     legend.position = "right", -->

<!-- #     legend.title = element_text(size = 5), -->

<!-- #     legend.text = element_text(size = 5), -->

<!-- #     plot.title = element_text(size = 6, face = "bold"), -->

<!-- #     plot.subtitle = element_text(size = 5), -->

<!-- #     axis.title = element_text(size = 3), # Increase the size of axis titles -->

<!-- #     axis.text = element_text(size = 3),   # Decrease the size of axis text -->

<!-- #     # axis.ticks = element_blank(), -->

<!-- #     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!-- #     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!-- #     # panel.grid = element_blank() -->

<!-- #     panel.grid.major = element_blank(), #element_line(color = "lightgray", size = 0.15),  # Add light major grid lines -->

<!-- #     panel.grid.minor = element_blank(),  # Hide minor grid lines -->

<!-- #     axis.line = element_line(color = "black", size = 0.3), -->

<!-- #  -->

<!-- #   ) + -->

<!-- #   labs( -->

<!-- #     title = "Average Prices per Square Meter", -->

<!-- #     # subtitle = "Prices are in Dansih krones (filtered by only 1 sale per year and less than 20 million dkk sale price", -->

<!-- #     caption = "Data Source: Calculation made by author", -->

<!-- #     x = "Longitude", -->

<!-- #     y = "Latitude" -->

<!-- #   ) -->

<!-- #  -->

<!-- # # Add the inset plot as an annotation to the main plot -->

<!-- # main_plot_price <- main_plot + -->

<!-- #   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") +   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!-- #   theme( -->

<!-- #     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!-- #   ) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # ############################################################################################################ -->

<!-- # # ==================  PLOT : Time on market -->

<!-- # ############################################################################################################ -->

<!-- #  -->

<!-- # color_option_viridis <- "F" -->

<!-- #  -->

<!-- # ################## set the area plot -->

<!-- # # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- # cph_xmin <- 12 -->

<!-- # cph_xmax <- 12.8 -->

<!-- # cph_ymin <- 55.5 -->

<!-- # cph_ymax <- 56 -->

<!-- #  -->

<!-- # # Plotting the grid with average prices -->

<!-- # main_plot <- ggplot() + -->

<!-- #   geom_sf(data = merged_data_4326, aes(fill = avg_tom), color = NA) + -->

<!-- #   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!-- #   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n", face = "bold"), na.value = "grey50", -->

<!-- #                        direction = -1, labels = scales::comma) + -->

<!-- #   # scale_fill_viridis_c(option = "viridis", na.value = "transparent") + -->

<!-- #   theme_minimal() + -->

<!-- #   theme( -->

<!-- #     legend.position = "right", -->

<!-- #     legend.title = element_text(size = 5), -->

<!-- #     legend.text = element_text(size = 5), -->

<!-- #     plot.title = element_text(size = 6, face = "bold"), -->

<!-- #     plot.subtitle = element_text(size = 5), -->

<!-- #     axis.title = element_text(size = 3), # Increase the size of axis titles -->

<!-- #     axis.text = element_text(size = 3),   # Decrease the size of axis text -->

<!-- #     # axis.ticks = element_blank(), -->

<!-- #     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!-- #     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!-- #     # panel.grid = element_blank() -->

<!-- #     panel.grid.major = element_blank(), #element_line(color = "lightgray", size = 0.15),  # Add light major grid lines -->

<!-- #     panel.grid.minor = element_blank(),  # Hide minor grid lines -->

<!-- #     axis.line = element_line(color = "black", size = 0.3), -->

<!-- #  -->

<!-- #   ) + -->

<!-- #   labs( -->

<!-- #     title = "Avarega time on market", -->

<!-- #     # subtitle = "Prices are in Dansih krones (filtered by only 1 sale per year and less than 20 million dkk sale price", -->

<!-- #     caption = "Data Source: Calculation made by author", -->

<!-- #     x = "Longitude", -->

<!-- #     y = "Latitude" -->

<!-- #   ) -->

<!-- #  -->

<!-- # # Add the inset plot as an annotation to the main plot -->

<!-- # main_plot_tom <- main_plot + -->

<!-- #   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") +   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!-- #   theme( -->

<!-- #     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!-- #   ) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # ############################################################################################################ -->

<!-- # # ==================  PLOT : Age bins -->

<!-- # ############################################################################################################ -->

<!-- #  -->

<!-- # color_option_viridis <- "F" -->

<!-- #  -->

<!-- # ################## set the area plot -->

<!-- # # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- # cph_xmin <- 12 -->

<!-- # cph_xmax <- 12.8 -->

<!-- # cph_ymin <- 55.5 -->

<!-- # cph_ymax <- 56 -->

<!-- #  -->

<!-- # # Plotting the grid with average prices -->

<!-- # main_plot <- ggplot() + -->

<!-- #   geom_sf(data = merged_data_4326, aes(fill = avarega_age), color = NA) + -->

<!-- #   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!-- #   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n", face = "bold"), na.value = "grey50", -->

<!-- #                        direction = -1, labels = scales::comma) + -->

<!-- #   # scale_fill_viridis_c(option = "viridis", na.value = "transparent") + -->

<!-- #   theme_minimal() + -->

<!-- #   theme( -->

<!-- #     legend.position = "right", -->

<!-- #     legend.title = element_text(size = 5), -->

<!-- #     legend.text = element_text(size = 5), -->

<!-- #     plot.title = element_text(size = 6, face = "bold"), -->

<!-- #     plot.subtitle = element_text(size = 5), -->

<!-- #     axis.title = element_text(size = 3), # Increase the size of axis titles -->

<!-- #     axis.text = element_text(size = 3),   # Decrease the size of axis text -->

<!-- #     # axis.ticks = element_blank(), -->

<!-- #     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!-- #     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!-- #     # panel.grid = element_blank() -->

<!-- #     panel.grid.major = element_blank(), #element_line(color = "lightgray", size = 0.15),  # Add light major grid lines -->

<!-- #     panel.grid.minor = element_blank(),  # Hide minor grid lines -->

<!-- #     axis.line = element_line(color = "black", size = 0.3), -->

<!-- #  -->

<!-- #   ) + -->

<!-- #   labs( -->

<!-- #     title = "Avarega age", -->

<!-- #     # subtitle = "Prices are in Dansih krones (filtered by only 1 sale per year and less than 20 million dkk sale price", -->

<!-- #     caption = "Data Source: Calculation made by author", -->

<!-- #     x = "Longitude", -->

<!-- #     y = "Latitude" -->

<!-- #   ) -->

<!-- #  -->

<!-- # # Add the inset plot as an annotation to the main plot -->

<!-- # main_plot_age <- main_plot + -->

<!-- #   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") +   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!-- #   theme( -->

<!-- #     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!-- #   ) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # ############################################################################################################ -->

<!-- # # ==================  PLOT : EPC label -->

<!-- # ############################################################################################################ -->

<!-- #  -->

<!-- # color_option_viridis <- "F" -->

<!-- #  -->

<!-- # ################## set the area plot -->

<!-- # # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- # cph_xmin <- 12 -->

<!-- # cph_xmax <- 12.8 -->

<!-- # cph_ymin <- 55.5 -->

<!-- # cph_ymax <- 56 -->

<!-- #  -->

<!-- # # Plotting the grid with average prices -->

<!-- # main_plot <- ggplot() + -->

<!-- #   geom_sf(data = merged_data_4326, aes(fill = avg_epc), color = NA) + -->

<!-- #   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!-- #   scale_fill_viridis_c(option = color_option_viridis, name = element_text("Average Price per \n square meter \n", face = "bold"), na.value = "grey50", -->

<!-- #                        direction = -1, labels = scales::comma) + -->

<!-- #   # scale_fill_viridis_c(option = "viridis", na.value = "transparent") + -->

<!-- #   theme_minimal() + -->

<!-- #   theme( -->

<!-- #     legend.position = "right", -->

<!-- #     legend.title = element_text(size = 5), -->

<!-- #     legend.text = element_text(size = 5), -->

<!-- #     plot.title = element_text(size = 6, face = "bold"), -->

<!-- #     plot.subtitle = element_text(size = 5), -->

<!-- #     axis.title = element_text(size = 3), # Increase the size of axis titles -->

<!-- #     axis.text = element_text(size = 3),   # Decrease the size of axis text -->

<!-- #     # axis.ticks = element_blank(), -->

<!-- #     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!-- #     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!-- #     # panel.grid = element_blank() -->

<!-- #     panel.grid.major = element_blank(), #element_line(color = "lightgray", size = 0.15),  # Add light major grid lines -->

<!-- #     panel.grid.minor = element_blank(),  # Hide minor grid lines -->

<!-- #     axis.line = element_line(color = "black", size = 0.3), -->

<!-- #  -->

<!-- #   ) + -->

<!-- #   labs( -->

<!-- #     title = "Avarega Energy efficiency", -->

<!-- #     # subtitle = "Prices are in Dansih krones (filtered by only 1 sale per year and less than 20 million dkk sale price", -->

<!-- #     caption = "Data Source: Calculation made by author", -->

<!-- #     x = "Longitude", -->

<!-- #     y = "Latitude" -->

<!-- #   ) -->

<!-- #  -->

<!-- # # Add the inset plot as an annotation to the main plot -->

<!-- # main_plot_epc <- main_plot + -->

<!-- #   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") +   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!-- #   theme( -->

<!-- #     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!-- #   ) -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- #  -->

<!-- # ############################################################################################################ -->

<!-- # # ==================  PLOT : MATRIX -->

<!-- # ############################################################################################################ -->

<!-- #  -->

<!-- # # Arrange plots horizontally in the first row -->

<!-- # plots_row <- grid.arrange(main_plot_epc, -->

<!-- #                           main_plot_price, -->

<!-- #                           main_plot_tom, -->

<!-- #                           main_plot_age, -->

<!-- #                           nrow = 4, -->

<!-- #                           ncol = 2) -->

<!-- #  -->

<!-- # ``` -->

<!-- ### Most frequent EPC label across municipalities  -->

<!-- # ```{r, echo=FALSE, results='hide',fig.keep='all'} -->

<!-- #  -->

<!-- #  -->

<!-- # ###################################### data prep -->

<!-- # # read in shape file from GADM -->

<!-- # denmark_municipalities <- st_read("D:/Thesis/The_Thesis_paper/Main_report/5_housingData_plots/gadm41_DNK_shp/gadm41_DNK_2.shp") -->

<!-- # ``` -->

<!-- #  -->

<!-- #  -->

<!-- # ```{r,message=FALSE, warning=FALSE,fig.width=10, fig.height=12} -->

<!-- #  -->

<!-- # # Drop rows where price_bin is "Missing" ---- Christiansø is not a municipality - only 98 municipalities -->

<!-- # denmark_municipalities <- denmark_municipalities %>% -->

<!-- #   filter(NAME_2 != "Christiansø") -->

<!-- #  -->

<!-- # # create the new main dataset with only necessary columns -->

<!-- # test_data <- data %>% -->

<!-- #   select("EPC_D123_Registered_energy_label", "geo_longitude", "geo_latitude") -->

<!-- #  -->

<!-- #  -->

<!-- # # Convert data to sf object -->

<!-- # data_sf <- st_as_sf(test_data, coords = c("geo_longitude", "geo_latitude"), crs = 4326) -->

<!-- #  -->

<!-- # # make sure both sets have the same coordinate reference system -->

<!-- # denmark_municipalities <- st_transform(denmark_municipalities, crs = st_crs(data_sf)) -->

<!-- #  -->

<!-- #  -->

<!-- # # do spatial join to associate points with municipalities -->

<!-- # data_joined <- st_join(data_sf, denmark_municipalities, join = st_within) -->

<!-- #  -->

<!-- # # Calculate average price per square meter per municipality -->

<!-- # most_frequent_label <- data_joined %>%  -->

<!-- #   group_by(NAME_2) %>%  -->

<!-- #   summarize(freq_label = names(sort(table(EPC_D123_Registered_energy_label), decreasing = TRUE))[1])%>% -->

<!-- #   st_drop_geometry() -->

<!-- # #drop the na row in NAME_2 -->

<!-- # most_frequent_label <- most_frequent_label[!is.na(most_frequent_label$NAME_2), ] -->

<!-- #  -->

<!-- #  -->

<!-- # # Merge average prices back to the municipalities data -->

<!-- # denmark_municipalities <- denmark_municipalities %>% -->

<!-- #   left_join(most_frequent_label, by = "NAME_2") -->

<!-- # # merged_data <- st_join(denmark_municipalities, most_frequent_label, by = "NAME_2", left = TRUE) -->

<!-- #  -->

<!-- #  -->

<!-- # #################################### the plot -->

<!-- #  -->

<!-- # # coordinates of biggest cities in Denmark -->

<!-- # biggest_cities <- data.frame( -->

<!-- #   city = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"), -->

<!-- #   longitude = c(12.568337, 10.203921, 10.40237, 9.916664, 8.456197), -->

<!-- #   latitude = c(55.676098, 56.162939, 55.395941, 57.048, 55.476031) -->

<!-- # ) -->

<!-- #  -->

<!-- # # Define professional colors -->

<!-- # # professional_colors <- c("#2ca25f", "#99d8c9", "#e5f5e0", "#fd8d3c", "#e6550d") -->

<!-- # # professional_colors <- c("#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3") -->

<!-- # # professional_colors <- c("#3182bd", "#6baed6", "#9ecae1", "#c6dbef", "#eff3ff") -->

<!-- # # professional_colors <- c("#8A9A5B", "#483C32", "#7B241C", "#3E517A", "#543005") -->

<!-- # # professional_colors <- c("#943126", "#7B241C", "#7B241C", "#3E517A", "#543005") -->

<!-- # # professional_colors <- c("#FF6666", "#FF1A1A", "#990000", "#FFB3B3", "#e6550d") -->

<!-- # professional_colors <- c("#000000", "#A67f00", "#D3D3D3", "#3E517A", "#5D734E") -->

<!-- #  -->

<!-- #  -->

<!-- # custom_colors <- c( -->

<!-- #   "A2020" = "#228B22", -->

<!-- #   "A2015" = "#9ACD42", -->

<!-- #   "A2010" = "#00AD4C", -->

<!-- #   "B" = "#98FA88", -->

<!-- #   "C" = "#FFD700", -->

<!-- #   "D" = "#FFA500", -->

<!-- #   "E" = "#FF6F00", -->

<!-- #   "F" = "#990000", -->

<!-- #   "G" = "#7A599E" -->

<!-- # ) -->

<!-- #  -->

<!-- # # '#3CB371' (Medium Sea Green) -->

<!-- # # '#66CDAA' (Medium Aquamarine) -->

<!-- # # '#98FB98' (Pale Green) -->

<!-- # # '#7CFC00' (Lawn Green) -->

<!-- # # '#8FBC8F' (Dark Sea Green) -->

<!-- # # '#9ACD32' (Yellow Green) -->

<!-- #  -->

<!-- #  -->

<!-- # # Plotting the grid with most frequent EPC labels -->

<!-- # main_plot <- ggplot() + -->

<!-- #   geom_sf(data = denmark_municipalities, aes(fill = freq_label), color = NA) + -->

<!-- #   scale_fill_manual(values = custom_colors,  -->

<!-- #                       name = "EPC Label", -->

<!-- #                       na.value = "#4F4F4F", -->

<!-- #                       breaks = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G",NA)) + -->

<!-- #   theme_minimal() + -->

<!-- #   theme( -->

<!-- #     legend.position = "right", -->

<!-- #     legend.title = element_text(size = 12), -->

<!-- #     legend.text = element_text(size = 12), -->

<!-- #     plot.title = element_text(size = 16, face = "bold"), -->

<!-- #     plot.subtitle = element_text(size = 14), -->

<!-- #     axis.title = element_text(size = 12), # Increase the size of axis titles -->

<!-- #     axis.text = element_text(size = 8),   # Decrease the size of axis text -->

<!-- #     axis.ticks.length = unit(0.15, "cm"),  # Set ticks length -->

<!-- #     axis.ticks = element_line(color = "black", size = 0.3),  # Set ticks outward -->

<!-- #     panel.grid.major = element_blank(), # Remove major grid lines -->

<!-- #     panel.grid.minor = element_blank(),  # Remove minor grid lines -->

<!-- #     axis.line = element_line(color = "black", size = 0.3) -->

<!-- #   ) + -->

<!-- #   labs( -->

<!-- #     title = "Most Frequent EPC Labels at 5x5km Grid Level in Denmark", -->

<!-- #     # subtitle = "Full dataset: 750672 obs.", -->

<!-- #     caption = "Data Source: Calculation made by author", -->

<!-- #     x = "Longitude", -->

<!-- #     y = "Latitude" -->

<!-- #   ) -->

<!-- #  -->

<!-- # # Define the bounding box coordinates for the magnified area around Copenhagen -->

<!-- # cph_xmin <- 12 -->

<!-- # cph_xmax <- 12.8 -->

<!-- # cph_ymin <- 55.5 -->

<!-- # cph_ymax <- 56 -->

<!-- #  -->

<!-- # # coordinates of biggest 5 cities in Denmark -->

<!-- # biggest_cities <- data.frame( -->

<!-- #   city = c("Copenhagen", "Aarhus", "Odense", "Aalborg", "Esbjerg"), -->

<!-- #   longitude = c(12.568337, 10.203921, 10.40237, 9.916664, 8.456197), -->

<!-- #   latitude = c(55.676098, 56.162939, 55.395941, 57.048, 55.476031) -->

<!-- # ) -->

<!-- #  -->

<!-- # # Create the inset plot for the magnified area around Copenhagen -->

<!-- #  -->

<!-- # inset_plot_cph <- ggplot() + -->

<!-- #   geom_sf(data = merged_data_4326, aes(fill = most_freq_label), color = NA) + -->

<!-- #   geom_sf(data = denmark_municipalities, fill = NA, color = "white") + -->

<!-- #   scale_fill_manual(values = custom_colors,  -->

<!-- #                         name = "EPC Label", -->

<!-- #                         na.value = "#4F4F4F", -->

<!-- #                         breaks = c("A2020", "A2015", "A2010", "B", "C", "D", "E", "F", "G","NA")) +  theme_minimal() + -->

<!-- #   theme( -->

<!-- #     axis.title = element_blank(),  # Remove axis titles -->

<!-- #     axis.text = element_blank(),   # Remove axis labels -->

<!-- #     axis.ticks = element_blank(),  # Remove axis ticks -->

<!-- #     panel.grid = element_blank(),  # Remove panel grid -->

<!-- #     # panel.border = element_blank() # Remove panel border -->

<!-- #     panel.border = element_rect(color = "black", fill = NA, size = 1), -->

<!-- #     legend.position = "none"      # Remove legend -->

<!-- #   )+ -->

<!-- #   coord_sf(xlim = c(cph_xmin, cph_xmax), ylim = c(cph_ymin, cph_ymax)) -->

<!-- #  -->

<!-- # # add the city points to the zoom plot -->

<!-- # # inset_plot_cph <- inset_plot_cph + -->

<!-- # #   geom_point(data = biggest_cities, aes(x = longitude, y = latitude, color = city), size = 3,stroke = 1.5, show.legend = FALSE)+ #,shape = 4,stroke = 3.5) + -->

<!-- # #   scale_color_manual(values = professional_colors) -->

<!-- #  -->

<!-- #  -->

<!-- # # Add the inset plot as an annotation to the main plot -->

<!-- # inset_plot_cph <- main_plot + -->

<!-- #   geom_segment(aes(x = cph_xmax, y = cph_ymax, xend = cph_xmax*1.007, yend = cph_ymax*1.0045), color = "black", linetype = "dashed") + # line pointing to the zoom frame -->

<!-- #   annotation_custom(ggplotGrob(inset_plot_cph), xmin = cph_xmin*1.0, xmax = cph_xmax*1.15, ymin = cph_ymin*1.009, ymax = cph_ymax*1.037) + # the zoom plot position -->

<!-- #   geom_rect(aes(xmin = cph_xmin, xmax = cph_xmax, ymin = cph_ymin, ymax = cph_ymax), color='black', alpha=0)+ # box on the main plot -->

<!-- #   annotation_north_arrow(location = "tl", which_north = "true")+ # the north arrow -->

<!-- #   theme( -->

<!-- #     panel.border = element_rect(color = "black", fill = NA, size = 1) -->

<!-- #   ) -->

<!-- #  -->

<!-- #  -->

<!-- # # Display the combined plot with cities using professional colors -->

<!-- # inset_plot_cph -->

<!-- #  -->

<!-- #  -->

<!-- # ``` -->

<!-- #  -->

<!-- #  -->
